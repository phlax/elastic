- description: ECS Fields.
  fields:
  - description: 'Date/time when the event originated.

      This is the date/time extracted from the event, typically representing when
      the event was generated by the source.

      If the event source has no original timestamp, this value is typically populated
      by the first time the event was received by the pipeline.

      Required field for all events.'
    example: '2016-05-23T08:05:34.853Z'
    level: core
    name: '@timestamp'
    required: true
    type: date
  - description: 'Custom key/value pairs.

      Can be used to add meta information to events. Should not contain nested objects.
      All values are stored as keyword.

      Example: `docker` and `k8s` labels.'
    example: '{"application": "foo-bar", "env": "production"}'
    level: core
    name: labels
    object_type: keyword
    type: object
  - description: 'For log events the message field contains the log message, optimized
      for viewing in a log viewer.

      For structured logs without an original message field, other fields can be concatenated
      to form a human-readable summary of the event.

      If multiple messages exist, they can be combined into one message.'
    example: Hello World
    level: core
    name: message
    type: text
  - description: List of keywords used to tag each event.
    example: '["production", "env2"]'
    ignore_above: 1024
    level: core
    name: tags
    type: keyword
  - description: 'The agent fields contain the data about the software entity, if
      any, that collects, detects, or observes events on a host, or takes measurements
      on a host.

      Examples include Beats. Agents may also run on observers. ECS agent.* fields
      shall be populated with details of the agent running on the host or observer
      where the event happened or the measurement was taken.'
    fields:
    - description: 'Ephemeral identifier of this agent (if one exists).

        This id normally changes across restarts, but `agent.id` does not.'
      example: 8a4f500f
      ignore_above: 1024
      level: extended
      name: ephemeral_id
      type: keyword
    - description: 'Unique identifier of this agent (if one exists).

        Example: For Beats this would be beat.id.'
      example: 8a4f500d
      ignore_above: 1024
      level: core
      name: id
      type: keyword
    - description: 'Custom name of the agent.

        This is a name that can be given to an agent. This can be helpful if for example
        two Filebeat instances are running on the same host but a human readable separation
        is needed on which Filebeat instance data is coming from.

        If no name is given, the name is often left empty.'
      example: foo
      ignore_above: 1024
      level: core
      name: name
      type: keyword
    - description: 'Type of the agent.

        The agent type stays always the same and should be given by the agent used.
        In case of Filebeat the agent would always be Filebeat also if two Filebeat
        instances are run on the same machine.'
      example: filebeat
      ignore_above: 1024
      level: core
      name: type
      type: keyword
    - description: Version of the agent.
      example: 6.0.0-rc2
      ignore_above: 1024
      level: core
      name: version
      type: keyword
    footnote: 'Examples: In the case of Beats for logs, the agent.name is filebeat.
      For APM, it is the agent running in the app/service. The agent information does
      not change if data is sent through queuing systems like Kafka, Redis, or processing
      systems such as Logstash or APM Server.'
    group: 2
    name: agent
    title: Agent
    type: group
  - description: An autonomous system (AS) is a collection of connected Internet Protocol
      (IP) routing prefixes under the control of one or more network operators on
      behalf of a single administrative entity or domain that presents a common, clearly
      defined routing policy to the internet.
    fields:
    - description: Unique number allocated to the autonomous system. The autonomous
        system number (ASN) uniquely identifies each network on the Internet.
      example: 15169
      level: extended
      name: number
      type: long
    - description: Organization name.
      example: Google LLC
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: organization.name
      type: keyword
    group: 2
    name: as
    title: Autonomous System
    type: group
  - description: 'A client is defined as the initiator of a network connection for
      events regarding sessions, connections, or bidirectional flow records.

      For TCP events, the client is the initiator of the TCP connection that sends
      the SYN packet(s). For other protocols, the client is generally the initiator
      or requestor in the network transaction. Some systems use the term "originator"
      to refer the client in TCP connections. The client fields describe details about
      the system acting as the client in the network event. Client fields are usually
      populated in conjunction with server fields. Client fields are generally not
      populated for packet-level events.

      Client / server representations can add semantic context to an exchange, which
      is helpful to visualize the data in certain situations. If your context falls
      in that category, you should still ensure that source and destination are filled
      appropriately.'
    fields:
    - description: 'Some event client addresses are defined ambiguously. The event
        will sometimes list an IP, a domain or a unix socket.  You should always store
        the raw address in the `.address` field.

        Then it should be duplicated to `.ip` or `.domain`, depending on which one
        it is.'
      ignore_above: 1024
      level: extended
      name: address
      type: keyword
    - description: Unique number allocated to the autonomous system. The autonomous
        system number (ASN) uniquely identifies each network on the Internet.
      example: 15169
      level: extended
      name: as.number
      type: long
    - description: Organization name.
      example: Google LLC
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: as.organization.name
      type: keyword
    - description: Bytes sent from the client to the server.
      example: 184
      format: bytes
      level: core
      name: bytes
      type: long
    - description: Client domain.
      ignore_above: 1024
      level: core
      name: domain
      type: keyword
    - description: City name.
      example: Montreal
      ignore_above: 1024
      level: core
      name: geo.city_name
      type: keyword
    - description: Name of the continent.
      example: North America
      ignore_above: 1024
      level: core
      name: geo.continent_name
      type: keyword
    - description: Country ISO code.
      example: CA
      ignore_above: 1024
      level: core
      name: geo.country_iso_code
      type: keyword
    - description: Country name.
      example: Canada
      ignore_above: 1024
      level: core
      name: geo.country_name
      type: keyword
    - description: Longitude and latitude.
      example: '{ "lon": -73.614830, "lat": 45.505918 }'
      level: core
      name: geo.location
      type: geo_point
    - description: 'User-defined description of a location, at the level of granularity
        they care about.

        Could be the name of their data centers, the floor number, if this describes
        a local physical entity, city names.

        Not typically used in automated geolocation.'
      example: boston-dc
      ignore_above: 1024
      level: extended
      name: geo.name
      type: keyword
    - description: Region ISO code.
      example: CA-QC
      ignore_above: 1024
      level: core
      name: geo.region_iso_code
      type: keyword
    - description: Region name.
      example: Quebec
      ignore_above: 1024
      level: core
      name: geo.region_name
      type: keyword
    - description: 'IP address of the client.

        Can be one or multiple IPv4 or IPv6 addresses.'
      level: core
      name: ip
      type: ip
    - description: MAC address of the client.
      ignore_above: 1024
      level: core
      name: mac
      type: keyword
    - description: 'Translated IP of source based NAT sessions (e.g. internal client
        to internet).

        Typically connections traversing load balancers, firewalls, or routers.'
      level: extended
      name: nat.ip
      type: ip
    - description: 'Translated port of source based NAT sessions (e.g. internal client
        to internet).

        Typically connections traversing load balancers, firewalls, or routers.'
      format: string
      level: extended
      name: nat.port
      type: long
    - description: Packets sent from the client to the server.
      example: 12
      level: core
      name: packets
      type: long
    - description: Port of the client.
      format: string
      level: core
      name: port
      type: long
    - description: 'The highest registered client domain, stripped of the subdomain.

        For example, the registered domain for "foo.google.com" is "google.com".

        This value can be determined precisely with a list like the public suffix
        list (http://publicsuffix.org). Trying to approximate this by simply taking
        the last two labels will not work well for TLDs such as "co.uk".'
      example: google.com
      ignore_above: 1024
      level: extended
      name: registered_domain
      type: keyword
    - description: 'The effective top level domain (eTLD), also known as the domain
        suffix, is the last part of the domain name. For example, the top level domain
        for google.com is "com".

        This value can be determined precisely with a list like the public suffix
        list (http://publicsuffix.org). Trying to approximate this by simply taking
        the last label will not work well for effective TLDs such as "co.uk".'
      example: co.uk
      ignore_above: 1024
      level: extended
      name: top_level_domain
      type: keyword
    - description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
      ignore_above: 1024
      level: extended
      name: user.domain
      type: keyword
    - description: User email address.
      ignore_above: 1024
      level: extended
      name: user.email
      type: keyword
    - description: User's full name, if available.
      example: Albert Einstein
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: user.full_name
      type: keyword
    - description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      ignore_above: 1024
      level: extended
      name: user.group.domain
      type: keyword
    - description: Unique identifier for the group on the system/platform.
      ignore_above: 1024
      level: extended
      name: user.group.id
      type: keyword
    - description: Name of the group.
      ignore_above: 1024
      level: extended
      name: user.group.name
      type: keyword
    - description: 'Unique user hash to correlate information for a user in anonymized
        form.

        Useful if `user.id` or `user.name` contain confidential information and cannot
        be used.'
      ignore_above: 1024
      level: extended
      name: user.hash
      type: keyword
    - description: Unique identifiers of the user.
      ignore_above: 1024
      level: core
      name: user.id
      type: keyword
    - description: Short name or login of the user.
      example: albert
      ignore_above: 1024
      level: core
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: user.name
      type: keyword
    group: 2
    name: client
    title: Client
    type: group
  - description: Fields related to the cloud or infrastructure the events are coming
      from.
    fields:
    - description: 'The cloud account or organization id used to identify different
        entities in a multi-tenant environment.

        Examples: AWS account id, Google Cloud ORG Id, or other unique identifier.'
      example: 666777888999
      ignore_above: 1024
      level: extended
      name: account.id
      type: keyword
    - description: Availability zone in which this host is running.
      example: us-east-1c
      ignore_above: 1024
      level: extended
      name: availability_zone
      type: keyword
    - description: Instance ID of the host machine.
      example: i-1234567890abcdef0
      ignore_above: 1024
      level: extended
      name: instance.id
      type: keyword
    - description: Instance name of the host machine.
      ignore_above: 1024
      level: extended
      name: instance.name
      type: keyword
    - description: Machine type of the host machine.
      example: t2.medium
      ignore_above: 1024
      level: extended
      name: machine.type
      type: keyword
    - description: Name of the cloud provider. Example values are aws, azure, gcp,
        or digitalocean.
      example: aws
      ignore_above: 1024
      level: extended
      name: provider
      type: keyword
    - description: Region in which this host is running.
      example: us-east-1
      ignore_above: 1024
      level: extended
      name: region
      type: keyword
    footnote: 'Examples: If Metricbeat is running on an EC2 host and fetches data
      from its host, the cloud info contains the data about this machine. If Metricbeat
      runs on a remote machine outside the cloud and fetches data from a service running
      in the cloud, the field contains cloud data from the machine the service is
      running on.'
    group: 2
    name: cloud
    title: Cloud
    type: group
  - description: These fields contain information about binary code signatures.
    fields:
    - default_field: false
      description: Boolean to capture if a signature is present.
      example: 'true'
      level: core
      name: exists
      type: boolean
    - default_field: false
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity
        or trust status. Leave unpopulated if the validity or trust of the certificate
        was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      ignore_above: 1024
      level: extended
      name: status
      type: keyword
    - default_field: false
      description: Subject name of the code signer
      example: Microsoft Corporation
      ignore_above: 1024
      level: core
      name: subject_name
      type: keyword
    - default_field: false
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this
        field should only be populated by tools that actively check the status.'
      example: 'true'
      level: extended
      name: trusted
      type: boolean
    - default_field: false
      description: 'Boolean to capture if the digital signature is verified against
        the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      level: extended
      name: valid
      type: boolean
    group: 2
    name: code_signature
    title: Code Signature
    type: group
  - description: 'Container fields are used for meta information about the specific
      container that is the source of information.

      These fields help correlate data based containers from any runtime.'
    fields:
    - description: Unique container id.
      ignore_above: 1024
      level: core
      name: id
      type: keyword
    - description: Name of the image the container was built on.
      ignore_above: 1024
      level: extended
      name: image.name
      type: keyword
    - description: Container image tags.
      ignore_above: 1024
      level: extended
      name: image.tag
      type: keyword
    - description: Image labels.
      level: extended
      name: labels
      object_type: keyword
      type: object
    - description: Container name.
      ignore_above: 1024
      level: extended
      name: name
      type: keyword
    - description: Runtime managing this container.
      example: docker
      ignore_above: 1024
      level: extended
      name: runtime
      type: keyword
    group: 2
    name: container
    title: Container
    type: group
  - description: 'Destination fields describe details about the destination of a packet/event.

      Destination fields are usually populated in conjunction with source fields.'
    fields:
    - description: 'Some event destination addresses are defined ambiguously. The
        event will sometimes list an IP, a domain or a unix socket.  You should always
        store the raw address in the `.address` field.

        Then it should be duplicated to `.ip` or `.domain`, depending on which one
        it is.'
      ignore_above: 1024
      level: extended
      name: address
      type: keyword
    - description: Unique number allocated to the autonomous system. The autonomous
        system number (ASN) uniquely identifies each network on the Internet.
      example: 15169
      level: extended
      name: as.number
      type: long
    - description: Organization name.
      example: Google LLC
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: as.organization.name
      type: keyword
    - description: Bytes sent from the destination to the source.
      example: 184
      format: bytes
      level: core
      name: bytes
      type: long
    - description: Destination domain.
      ignore_above: 1024
      level: core
      name: domain
      type: keyword
    - description: City name.
      example: Montreal
      ignore_above: 1024
      level: core
      name: geo.city_name
      type: keyword
    - description: Name of the continent.
      example: North America
      ignore_above: 1024
      level: core
      name: geo.continent_name
      type: keyword
    - description: Country ISO code.
      example: CA
      ignore_above: 1024
      level: core
      name: geo.country_iso_code
      type: keyword
    - description: Country name.
      example: Canada
      ignore_above: 1024
      level: core
      name: geo.country_name
      type: keyword
    - description: Longitude and latitude.
      example: '{ "lon": -73.614830, "lat": 45.505918 }'
      level: core
      name: geo.location
      type: geo_point
    - description: 'User-defined description of a location, at the level of granularity
        they care about.

        Could be the name of their data centers, the floor number, if this describes
        a local physical entity, city names.

        Not typically used in automated geolocation.'
      example: boston-dc
      ignore_above: 1024
      level: extended
      name: geo.name
      type: keyword
    - description: Region ISO code.
      example: CA-QC
      ignore_above: 1024
      level: core
      name: geo.region_iso_code
      type: keyword
    - description: Region name.
      example: Quebec
      ignore_above: 1024
      level: core
      name: geo.region_name
      type: keyword
    - description: 'IP address of the destination.

        Can be one or multiple IPv4 or IPv6 addresses.'
      level: core
      name: ip
      type: ip
    - description: MAC address of the destination.
      ignore_above: 1024
      level: core
      name: mac
      type: keyword
    - description: 'Translated ip of destination based NAT sessions (e.g. internet
        to private DMZ)

        Typically used with load balancers, firewalls, or routers.'
      level: extended
      name: nat.ip
      type: ip
    - description: 'Port the source session is translated to by NAT Device.

        Typically used with load balancers, firewalls, or routers.'
      format: string
      level: extended
      name: nat.port
      type: long
    - description: Packets sent from the destination to the source.
      example: 12
      level: core
      name: packets
      type: long
    - description: Port of the destination.
      format: string
      level: core
      name: port
      type: long
    - description: 'The highest registered destination domain, stripped of the subdomain.

        For example, the registered domain for "foo.google.com" is "google.com".

        This value can be determined precisely with a list like the public suffix
        list (http://publicsuffix.org). Trying to approximate this by simply taking
        the last two labels will not work well for TLDs such as "co.uk".'
      example: google.com
      ignore_above: 1024
      level: extended
      name: registered_domain
      type: keyword
    - description: 'The effective top level domain (eTLD), also known as the domain
        suffix, is the last part of the domain name. For example, the top level domain
        for google.com is "com".

        This value can be determined precisely with a list like the public suffix
        list (http://publicsuffix.org). Trying to approximate this by simply taking
        the last label will not work well for effective TLDs such as "co.uk".'
      example: co.uk
      ignore_above: 1024
      level: extended
      name: top_level_domain
      type: keyword
    - description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
      ignore_above: 1024
      level: extended
      name: user.domain
      type: keyword
    - description: User email address.
      ignore_above: 1024
      level: extended
      name: user.email
      type: keyword
    - description: User's full name, if available.
      example: Albert Einstein
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: user.full_name
      type: keyword
    - description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      ignore_above: 1024
      level: extended
      name: user.group.domain
      type: keyword
    - description: Unique identifier for the group on the system/platform.
      ignore_above: 1024
      level: extended
      name: user.group.id
      type: keyword
    - description: Name of the group.
      ignore_above: 1024
      level: extended
      name: user.group.name
      type: keyword
    - description: 'Unique user hash to correlate information for a user in anonymized
        form.

        Useful if `user.id` or `user.name` contain confidential information and cannot
        be used.'
      ignore_above: 1024
      level: extended
      name: user.hash
      type: keyword
    - description: Unique identifiers of the user.
      ignore_above: 1024
      level: core
      name: user.id
      type: keyword
    - description: Short name or login of the user.
      example: albert
      ignore_above: 1024
      level: core
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: user.name
      type: keyword
    group: 2
    name: destination
    title: Destination
    type: group
  - description: 'These fields contain information about code libraries dynamically
      loaded into processes.


      Many operating systems refer to "shared code libraries" with different names,
      but this field set refers to all of the following:

      * Dynamic-link library (`.dll`) commonly used on Windows

      * Shared Object (`.so`) commonly used on Unix-like operating systems

      * Dynamic library (`.dylib`) commonly used on macOS'
    fields:
    - default_field: false
      description: Boolean to capture if a signature is present.
      example: 'true'
      level: core
      name: code_signature.exists
      type: boolean
    - default_field: false
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity
        or trust status. Leave unpopulated if the validity or trust of the certificate
        was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      ignore_above: 1024
      level: extended
      name: code_signature.status
      type: keyword
    - default_field: false
      description: Subject name of the code signer
      example: Microsoft Corporation
      ignore_above: 1024
      level: core
      name: code_signature.subject_name
      type: keyword
    - default_field: false
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this
        field should only be populated by tools that actively check the status.'
      example: 'true'
      level: extended
      name: code_signature.trusted
      type: boolean
    - default_field: false
      description: 'Boolean to capture if the digital signature is verified against
        the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      level: extended
      name: code_signature.valid
      type: boolean
    - default_field: false
      description: MD5 hash.
      ignore_above: 1024
      level: extended
      name: hash.md5
      type: keyword
    - default_field: false
      description: SHA1 hash.
      ignore_above: 1024
      level: extended
      name: hash.sha1
      type: keyword
    - default_field: false
      description: SHA256 hash.
      ignore_above: 1024
      level: extended
      name: hash.sha256
      type: keyword
    - default_field: false
      description: SHA512 hash.
      ignore_above: 1024
      level: extended
      name: hash.sha512
      type: keyword
    - default_field: false
      description: 'Name of the library.

        This generally maps to the name of the file on disk.'
      example: kernel32.dll
      ignore_above: 1024
      level: core
      name: name
      type: keyword
    - default_field: false
      description: Full file path of the library.
      example: C:\Windows\System32\kernel32.dll
      ignore_above: 1024
      level: extended
      name: path
      type: keyword
    - default_field: false
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      ignore_above: 1024
      level: extended
      name: pe.company
      type: keyword
    - default_field: false
      description: Internal description of the file, provided at compile-time.
      example: Paint
      ignore_above: 1024
      level: extended
      name: pe.description
      type: keyword
    - default_field: false
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      ignore_above: 1024
      level: extended
      name: pe.file_version
      type: keyword
    - default_field: false
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      ignore_above: 1024
      level: extended
      name: pe.original_file_name
      type: keyword
    - default_field: false
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft\xAE Windows\xAE Operating System"
      ignore_above: 1024
      level: extended
      name: pe.product
      type: keyword
    group: 2
    name: dll
    title: DLL
    type: group
  - description: 'Fields describing DNS queries and answers.

      DNS events should either represent a single DNS query prior to getting answers
      (`dns.type:query`) or they should represent a full exchange and contain the
      query details as well as all of the answers that were provided for this query
      (`dns.type:answer`).'
    fields:
    - description: 'An array containing an object for each answer section returned
        by the server.

        The main keys that should be present in these objects are defined by ECS.
        Records that have more information may contain more keys than what ECS defines.

        Not all DNS data sources give all details about DNS answers. At minimum, answer
        objects must contain the `data` key. If more information is available, map
        as much of it to ECS as possible, and add any additional fields to the answer
        objects as custom fields.'
      level: extended
      name: answers
      object_type: keyword
      type: object
    - description: The class of DNS data contained in this resource record.
      example: IN
      ignore_above: 1024
      level: extended
      name: answers.class
      type: keyword
    - description: 'The data describing the resource.

        The meaning of this data depends on the type and class of the resource record.'
      example: 10.10.10.10
      ignore_above: 1024
      level: extended
      name: answers.data
      type: keyword
    - description: 'The domain name to which this resource record pertains.

        If a chain of CNAME is being resolved, each answer''s `name` should be the
        one that corresponds with the answer''s `data`. It should not simply be the
        original `question.name` repeated.'
      example: www.google.com
      ignore_above: 1024
      level: extended
      name: answers.name
      type: keyword
    - description: The time interval in seconds that this resource record may be cached
        before it should be discarded. Zero values mean that the data should not be
        cached.
      example: 180
      level: extended
      name: answers.ttl
      type: long
    - description: The type of data contained in this resource record.
      example: CNAME
      ignore_above: 1024
      level: extended
      name: answers.type
      type: keyword
    - description: 'Array of 2 letter DNS header flags.

        Expected values are: AA, TC, RD, RA, AD, CD, DO.'
      example:
      - RD
      - RA
      ignore_above: 1024
      level: extended
      name: header_flags
      type: keyword
    - description: The DNS packet identifier assigned by the program that generated
        the query. The identifier is copied to the response.
      example: 62111
      ignore_above: 1024
      level: extended
      name: id
      type: keyword
    - description: The DNS operation code that specifies the kind of query in the
        message. This value is set by the originator of a query and copied into the
        response.
      example: QUERY
      ignore_above: 1024
      level: extended
      name: op_code
      type: keyword
    - description: The class of records being queried.
      example: IN
      ignore_above: 1024
      level: extended
      name: question.class
      type: keyword
    - description: 'The name being queried.

        If the name field contains non-printable characters (below 32 or above 126),
        those characters should be represented as escaped base 10 integers (\DDD).
        Back slashes and quotes should be escaped. Tabs, carriage returns, and line
        feeds should be converted to \t, \r, and \n respectively.'
      example: www.google.com
      ignore_above: 1024
      level: extended
      name: question.name
      type: keyword
    - description: 'The highest registered domain, stripped of the subdomain.

        For example, the registered domain for "foo.google.com" is "google.com".

        This value can be determined precisely with a list like the public suffix
        list (http://publicsuffix.org). Trying to approximate this by simply taking
        the last two labels will not work well for TLDs such as "co.uk".'
      example: google.com
      ignore_above: 1024
      level: extended
      name: question.registered_domain
      type: keyword
    - description: 'The subdomain is all of the labels under the registered_domain.

        If the domain has multiple levels of subdomain, such as "sub2.sub1.example.com",
        the subdomain field should contain "sub2.sub1", with no trailing period.'
      example: www
      ignore_above: 1024
      level: extended
      name: question.subdomain
      type: keyword
    - description: 'The effective top level domain (eTLD), also known as the domain
        suffix, is the last part of the domain name. For example, the top level domain
        for google.com is "com".

        This value can be determined precisely with a list like the public suffix
        list (http://publicsuffix.org). Trying to approximate this by simply taking
        the last label will not work well for effective TLDs such as "co.uk".'
      example: co.uk
      ignore_above: 1024
      level: extended
      name: question.top_level_domain
      type: keyword
    - description: The type of record being queried.
      example: AAAA
      ignore_above: 1024
      level: extended
      name: question.type
      type: keyword
    - description: 'Array containing all IPs seen in `answers.data`.

        The `answers` array can be difficult to use, because of the variety of data
        formats it can contain. Extracting all IP addresses seen in there to `dns.resolved_ip`
        makes it possible to index them as IP addresses, and makes them easier to
        visualize and query for.'
      example:
      - 10.10.10.10
      - 10.10.10.11
      level: extended
      name: resolved_ip
      type: ip
    - description: The DNS response code.
      example: NOERROR
      ignore_above: 1024
      level: extended
      name: response_code
      type: keyword
    - description: 'The type of DNS event captured, query or answer.

        If your source of DNS events only gives you DNS queries, you should only create
        dns events of type `dns.type:query`.

        If your source of DNS events gives you answers as well, you should create
        one event per query (optionally as soon as the query is seen). And a second
        event containing all query details as well as an array of answers.'
      example: answer
      ignore_above: 1024
      level: extended
      name: type
      type: keyword
    group: 2
    name: dns
    title: DNS
    type: group
  - description: Meta-information specific to ECS.
    fields:
    - description: 'ECS version this event conforms to. `ecs.version` is a required
        field and must exist in all events.

        When querying across multiple indices -- which may conform to slightly different
        ECS versions -- this field lets integrations adjust to the schema version
        of the events.'
      example: 1.0.0
      ignore_above: 1024
      level: core
      name: version
      required: true
      type: keyword
    group: 2
    name: ecs
    title: ECS
    type: group
  - description: 'These fields can represent errors of any kind.

      Use them for errors that happen while fetching events or in cases where the
      event itself contains an error.'
    fields:
    - description: Error code describing the error.
      ignore_above: 1024
      level: core
      name: code
      type: keyword
    - description: Unique identifier for the error.
      ignore_above: 1024
      level: core
      name: id
      type: keyword
    - description: Error message.
      level: core
      name: message
      type: text
    - description: The stack trace of this error in plain text.
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: stack_trace
      type: keyword
    - description: The type of the error, for example the class name of the exception.
      example: java.lang.NullPointerException
      ignore_above: 1024
      level: extended
      name: type
      type: keyword
    group: 2
    name: error
    title: Error
    type: group
  - description: 'The event fields are used for context information about the log
      or metric event itself.

      A log is defined as an event containing details of something that happened.
      Log events must include the time at which the thing happened. Examples of log
      events include a process starting on a host, a network packet being sent from
      a source to a destination, or a network connection between a client and a server
      being initiated or closed. A metric is defined as an event containing one or
      more numerical measurements and the time at which the measurement was taken.
      Examples of metric events include memory pressure measured on a host and device
      temperature. See the `event.kind` definition in this section for additional
      details about metric and state events.'
    fields:
    - description: 'The action captured by the event.

        This describes the information in the event. It is more specific than `event.category`.
        Examples are `group-add`, `process-started`, `file-created`. The value is
        normally defined by the implementer.'
      example: user-password-change
      ignore_above: 1024
      level: core
      name: action
      type: keyword
    - description: 'This is one of four ECS Categorization Fields, and indicates the
        second level in the ECS category hierarchy.

        `event.category` represents the "big buckets" of ECS categories. For example,
        filtering on `event.category:process` yields all events relating to process
        activity. This field is closely related to `event.type`, which is used as
        a subcategory.

        This field is an array. This will allow proper categorization of some events
        that fall in multiple categories.'
      example: authentication
      ignore_above: 1024
      level: core
      name: category
      type: keyword
    - description: 'Identification code for this event, if one exists.

        Some event sources use event codes to identify messages unambiguously, regardless
        of message language or wording adjustments over time. An example of this is
        the Windows Event ID.'
      example: 4648
      ignore_above: 1024
      level: extended
      name: code
      type: keyword
    - description: 'event.created contains the date/time when the event was first
        read by an agent, or by your pipeline.

        This field is distinct from @timestamp in that @timestamp typically contain
        the time extracted from the original event.

        In most situations, these two timestamps will be slightly different. The difference
        can be used to calculate the delay between your source generating an event,
        and the time when your agent first processed it. This can be used to monitor
        your agent''s or pipeline''s ability to keep up with your event source.

        In case the two timestamps are identical, @timestamp should be used.'
      example: '2016-05-23T08:05:34.857Z'
      level: core
      name: created
      type: date
    - description: 'Name of the dataset.

        If an event source publishes more than one type of log or events (e.g. access
        log, error log), the dataset is used to specify which one the event comes
        from.

        It''s recommended but not required to start the dataset name with the module
        name, followed by a dot, then the dataset name.'
      example: apache.access
      ignore_above: 1024
      level: core
      name: dataset
      type: keyword
    - description: 'Duration of the event in nanoseconds.

        If event.start and event.end are known this value should be the difference
        between the end and start time.'
      format: duration
      input_format: nanoseconds
      level: core
      name: duration
      output_format: asMilliseconds
      output_precision: 1
      type: long
    - description: event.end contains the date when the event ended or when the activity
        was last observed.
      level: extended
      name: end
      type: date
    - description: Hash (perhaps logstash fingerprint) of raw field to be able to
        demonstrate log integrity.
      example: 123456789012345678901234567890ABCD
      ignore_above: 1024
      level: extended
      name: hash
      type: keyword
    - description: Unique ID to describe the event.
      example: 8a4f500d
      ignore_above: 1024
      level: core
      name: id
      type: keyword
    - default_field: false
      description: 'Timestamp when an event arrived in the central data store.

        This is different from `@timestamp`, which is when the event originally occurred.  It''s
        also different from `event.created`, which is meant to capture the first time
        an agent saw the event.

        In normal conditions, assuming no tampering, the timestamps should chronologically
        look like this: `@timestamp` < `event.created` < `event.ingested`.'
      example: '2016-05-23T08:05:35.101Z'
      level: core
      name: ingested
      type: date
    - description: 'This is one of four ECS Categorization Fields, and indicates the
        highest level in the ECS category hierarchy.

        `event.kind` gives high-level information about what type of information the
        event contains, without being specific to the contents of the event. For example,
        values of this field distinguish alert events from metric events.

        The value of this field can be used to inform how these kinds of events should
        be handled. They may warrant different retention, different access control,
        it may also help understand whether the data coming in at a regular interval
        or not.'
      example: alert
      ignore_above: 1024
      level: core
      name: kind
      type: keyword
    - description: 'Name of the module this data is coming from.

        If your monitoring agent supports the concept of modules or plugins to process
        events of a given source (e.g. Apache logs), `event.module` should contain
        the name of this module.'
      example: apache
      ignore_above: 1024
      level: core
      name: module
      type: keyword
    - description: 'Raw text message of entire event. Used to demonstrate log integrity.

        This field is not indexed and doc_values are disabled. It cannot be searched,
        but it can be retrieved from `_source`.'
      example: Sep 19 08:26:10 host CEF:0&#124;Security&#124; threatmanager&#124;1.0&#124;100&#124;
        worm successfully stopped&#124;10&#124;src=10.0.0.1 dst=2.1.2.2spt=1232
      ignore_above: 1024
      level: core
      name: original
      type: keyword
    - description: 'This is one of four ECS Categorization Fields, and indicates the
        lowest level in the ECS category hierarchy.

        `event.outcome` simply denotes whether the event represents a success or a
        failure from the perspective of the entity that produced the event.

        Note that when a single transaction is described in multiple events, each
        event may populate different values of `event.outcome`, according to their
        perspective.

        Also note that in the case of a compound event (a single event that contains
        multiple logical events), this field should be populated with the value that
        best captures the overall success or failure from the perspective of the event
        producer.

        Further note that not all events will have an associated outcome. For example,
        this field is generally not populated for metric events, events with `event.type:info`,
        or any events for which an outcome does not make logical sense.'
      example: success
      ignore_above: 1024
      level: core
      name: outcome
      type: keyword
    - description: 'Source of the event.

        Event transports such as Syslog or the Windows Event Log typically mention
        the source of an event. It can be the name of the software that generated
        the event (e.g. Sysmon, httpd), or of a subsystem of the operating system
        (kernel, Microsoft-Windows-Security-Auditing).'
      example: kernel
      ignore_above: 1024
      level: extended
      name: provider
      type: keyword
    - default_field: false
      description: 'Reference URL linking to additional information about this event.

        This URL links to a static definition of the this event. Alert events, indicated
        by `event.kind:alert`, are a common use case for this field.'
      example: https://system.vendor.com/event/#0001234
      ignore_above: 1024
      level: extended
      name: reference
      type: keyword
    - description: Risk score or priority of the event (e.g. security solutions).
        Use your system's original value here.
      level: core
      name: risk_score
      type: float
    - description: 'Normalized risk score or priority of the event, on a scale of
        0 to 100.

        This is mainly useful if you use more than one system that assigns risk scores,
        and you want to see a normalized value across all systems.'
      level: extended
      name: risk_score_norm
      type: float
    - description: 'Sequence number of the event.

        The sequence number is a value published by some event sources, to make the
        exact ordering of events unambiguous, regardless of the timestamp precision.'
      format: string
      level: extended
      name: sequence
      type: long
    - description: 'The numeric severity of the event according to your event source.

        What the different severity values mean can be different between sources and
        use cases. It''s up to the implementer to make sure severities are consistent
        across events from the same source.

        The Syslog severity belongs in `log.syslog.severity.code`. `event.severity`
        is meant to represent the severity according to the event source (e.g. firewall,
        IDS). If the event source does not publish its own severity, you may optionally
        copy the `log.syslog.severity.code` to `event.severity`.'
      example: 7
      format: string
      level: core
      name: severity
      type: long
    - description: event.start contains the date when the event started or when the
        activity was first observed.
      level: extended
      name: start
      type: date
    - description: 'This field should be populated when the event''s timestamp does
        not include timezone information already (e.g. default Syslog timestamps).
        It''s optional otherwise.

        Acceptable timezone formats are: a canonical ID (e.g. "Europe/Amsterdam"),
        abbreviated (e.g. "EST") or an HH:mm differential (e.g. "-05:00").'
      ignore_above: 1024
      level: extended
      name: timezone
      type: keyword
    - description: 'This is one of four ECS Categorization Fields, and indicates the
        third level in the ECS category hierarchy.

        `event.type` represents a categorization "sub-bucket" that, when used along
        with the `event.category` field values, enables filtering events down to a
        level appropriate for single visualization.

        This field is an array. This will allow proper categorization of some events
        that fall in multiple event types.'
      ignore_above: 1024
      level: core
      name: type
      type: keyword
    - default_field: false
      description: 'URL linking to an external system to continue investigation of
        this event.

        This URL links to another system where in-depth investigation of the specific
        occurence of this event can take place. Alert events, indicated by `event.kind:alert`,
        are a common use case for this field.'
      example: https://mysystem.mydomain.com/alert/5271dedb-f5b0-4218-87f0-4ac4870a38fe
      ignore_above: 1024
      level: extended
      name: url
      type: keyword
    group: 2
    name: event
    title: Event
    type: group
  - description: 'A file is defined as a set of information that has been created
      on, or has existed on a filesystem.

      File objects can be associated with host events, network events, and/or file
      events (e.g., those produced by File Integrity Monitoring [FIM] products or
      services). File fields provide details about the affected file associated with
      the event or metric.'
    fields:
    - description: 'Last time the file was accessed.

        Note that not all filesystems keep track of access time.'
      level: extended
      name: accessed
      type: date
    - default_field: false
      description: 'Array of file attributes.

        Attributes names will vary by platform. Here''s a non-exhaustive list of values
        that are expected in this field: archive, compressed, directory, encrypted,
        execute, hidden, read, readonly, system, write.'
      example: '["readonly", "system"]'
      ignore_above: 1024
      level: extended
      name: attributes
      type: keyword
    - default_field: false
      description: Boolean to capture if a signature is present.
      example: 'true'
      level: core
      name: code_signature.exists
      type: boolean
    - default_field: false
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity
        or trust status. Leave unpopulated if the validity or trust of the certificate
        was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      ignore_above: 1024
      level: extended
      name: code_signature.status
      type: keyword
    - default_field: false
      description: Subject name of the code signer
      example: Microsoft Corporation
      ignore_above: 1024
      level: core
      name: code_signature.subject_name
      type: keyword
    - default_field: false
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this
        field should only be populated by tools that actively check the status.'
      example: 'true'
      level: extended
      name: code_signature.trusted
      type: boolean
    - default_field: false
      description: 'Boolean to capture if the digital signature is verified against
        the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      level: extended
      name: code_signature.valid
      type: boolean
    - description: 'File creation time.

        Note that not all filesystems store the creation time.'
      level: extended
      name: created
      type: date
    - description: 'Last time the file attributes or metadata changed.

        Note that changes to the file content will update `mtime`. This implies `ctime`
        will be adjusted at the same time, since `mtime` is an attribute of the file.'
      level: extended
      name: ctime
      type: date
    - description: Device that is the source of the file.
      example: sda
      ignore_above: 1024
      level: extended
      name: device
      type: keyword
    - description: Directory where the file is located. It should include the drive
        letter, when appropriate.
      example: /home/alice
      ignore_above: 1024
      level: extended
      name: directory
      type: keyword
    - default_field: false
      description: 'Drive letter where the file is located. This field is only relevant
        on Windows.

        The value should be uppercase, and not include the colon.'
      example: C
      ignore_above: 1
      level: extended
      name: drive_letter
      type: keyword
    - description: File extension.
      example: png
      ignore_above: 1024
      level: extended
      name: extension
      type: keyword
    - description: Primary group ID (GID) of the file.
      example: '1001'
      ignore_above: 1024
      level: extended
      name: gid
      type: keyword
    - description: Primary group name of the file.
      example: alice
      ignore_above: 1024
      level: extended
      name: group
      type: keyword
    - description: MD5 hash.
      ignore_above: 1024
      level: extended
      name: hash.md5
      type: keyword
    - description: SHA1 hash.
      ignore_above: 1024
      level: extended
      name: hash.sha1
      type: keyword
    - description: SHA256 hash.
      ignore_above: 1024
      level: extended
      name: hash.sha256
      type: keyword
    - description: SHA512 hash.
      ignore_above: 1024
      level: extended
      name: hash.sha512
      type: keyword
    - description: Inode representing the file in the filesystem.
      example: '256383'
      ignore_above: 1024
      level: extended
      name: inode
      type: keyword
    - default_field: false
      description: MIME type should identify the format of the file or stream of bytes
        using https://www.iana.org/assignments/media-types/media-types.xhtml[IANA
        official types], where possible. When more than one type is applicable, the
        most specific type should be used.
      ignore_above: 1024
      level: extended
      name: mime_type
      type: keyword
    - description: Mode of the file in octal representation.
      example: '0640'
      ignore_above: 1024
      level: extended
      name: mode
      type: keyword
    - description: Last time the file content was modified.
      level: extended
      name: mtime
      type: date
    - description: Name of the file including the extension, without the directory.
      example: example.png
      ignore_above: 1024
      level: extended
      name: name
      type: keyword
    - description: File owner's username.
      example: alice
      ignore_above: 1024
      level: extended
      name: owner
      type: keyword
    - description: Full path to the file, including the file name. It should include
        the drive letter, when appropriate.
      example: /home/alice/example.png
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: path
      type: keyword
    - default_field: false
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      ignore_above: 1024
      level: extended
      name: pe.company
      type: keyword
    - default_field: false
      description: Internal description of the file, provided at compile-time.
      example: Paint
      ignore_above: 1024
      level: extended
      name: pe.description
      type: keyword
    - default_field: false
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      ignore_above: 1024
      level: extended
      name: pe.file_version
      type: keyword
    - default_field: false
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      ignore_above: 1024
      level: extended
      name: pe.original_file_name
      type: keyword
    - default_field: false
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft\xAE Windows\xAE Operating System"
      ignore_above: 1024
      level: extended
      name: pe.product
      type: keyword
    - description: 'File size in bytes.

        Only relevant when `file.type` is "file".'
      example: 16384
      level: extended
      name: size
      type: long
    - description: Target path for symlinks.
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: target_path
      type: keyword
    - description: File type (file, dir, or symlink).
      example: file
      ignore_above: 1024
      level: extended
      name: type
      type: keyword
    - description: The user ID (UID) or security identifier (SID) of the file owner.
      example: '1001'
      ignore_above: 1024
      level: extended
      name: uid
      type: keyword
    group: 2
    name: file
    title: File
    type: group
  - description: 'Geo fields can carry data about a specific location related to an
      event.

      This geolocation information can be derived from techniques such as Geo IP,
      or be user-supplied.'
    fields:
    - description: City name.
      example: Montreal
      ignore_above: 1024
      level: core
      name: city_name
      type: keyword
    - description: Name of the continent.
      example: North America
      ignore_above: 1024
      level: core
      name: continent_name
      type: keyword
    - description: Country ISO code.
      example: CA
      ignore_above: 1024
      level: core
      name: country_iso_code
      type: keyword
    - description: Country name.
      example: Canada
      ignore_above: 1024
      level: core
      name: country_name
      type: keyword
    - description: Longitude and latitude.
      example: '{ "lon": -73.614830, "lat": 45.505918 }'
      level: core
      name: location
      type: geo_point
    - description: 'User-defined description of a location, at the level of granularity
        they care about.

        Could be the name of their data centers, the floor number, if this describes
        a local physical entity, city names.

        Not typically used in automated geolocation.'
      example: boston-dc
      ignore_above: 1024
      level: extended
      name: name
      type: keyword
    - description: Region ISO code.
      example: CA-QC
      ignore_above: 1024
      level: core
      name: region_iso_code
      type: keyword
    - description: Region name.
      example: Quebec
      ignore_above: 1024
      level: core
      name: region_name
      type: keyword
    group: 2
    name: geo
    title: Geo
    type: group
  - description: The group fields are meant to represent groups that are relevant
      to the event.
    fields:
    - description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      ignore_above: 1024
      level: extended
      name: domain
      type: keyword
    - description: Unique identifier for the group on the system/platform.
      ignore_above: 1024
      level: extended
      name: id
      type: keyword
    - description: Name of the group.
      ignore_above: 1024
      level: extended
      name: name
      type: keyword
    group: 2
    name: group
    title: Group
    type: group
  - description: 'The hash fields represent different hash algorithms and their values.

      Field names for common hashes (e.g. MD5, SHA1) are predefined. Add fields for
      other hashes by lowercasing the hash algorithm name and using underscore separators
      as appropriate (snake case, e.g. sha3_512).'
    fields:
    - description: MD5 hash.
      ignore_above: 1024
      level: extended
      name: md5
      type: keyword
    - description: SHA1 hash.
      ignore_above: 1024
      level: extended
      name: sha1
      type: keyword
    - description: SHA256 hash.
      ignore_above: 1024
      level: extended
      name: sha256
      type: keyword
    - description: SHA512 hash.
      ignore_above: 1024
      level: extended
      name: sha512
      type: keyword
    group: 2
    name: hash
    title: Hash
    type: group
  - description: 'A host is defined as a general computing instance.

      ECS host.* fields should be populated with details about the host on which the
      event happened, or from which the measurement was taken. Host types include
      hardware, virtual machines, Docker containers, and Kubernetes nodes.'
    fields:
    - description: Operating system architecture.
      example: x86_64
      ignore_above: 1024
      level: core
      name: architecture
      type: keyword
    - default_field: false
      description: 'Name of the domain of which the host is a member.

        For example, on Windows this could be the host''s Active Directory domain
        or NetBIOS domain name. For Linux this could be the domain of the host''s
        LDAP provider.'
      example: CONTOSO
      ignore_above: 1024
      level: extended
      name: domain
      type: keyword
    - description: City name.
      example: Montreal
      ignore_above: 1024
      level: core
      name: geo.city_name
      type: keyword
    - description: Name of the continent.
      example: North America
      ignore_above: 1024
      level: core
      name: geo.continent_name
      type: keyword
    - description: Country ISO code.
      example: CA
      ignore_above: 1024
      level: core
      name: geo.country_iso_code
      type: keyword
    - description: Country name.
      example: Canada
      ignore_above: 1024
      level: core
      name: geo.country_name
      type: keyword
    - description: Longitude and latitude.
      example: '{ "lon": -73.614830, "lat": 45.505918 }'
      level: core
      name: geo.location
      type: geo_point
    - description: 'User-defined description of a location, at the level of granularity
        they care about.

        Could be the name of their data centers, the floor number, if this describes
        a local physical entity, city names.

        Not typically used in automated geolocation.'
      example: boston-dc
      ignore_above: 1024
      level: extended
      name: geo.name
      type: keyword
    - description: Region ISO code.
      example: CA-QC
      ignore_above: 1024
      level: core
      name: geo.region_iso_code
      type: keyword
    - description: Region name.
      example: Quebec
      ignore_above: 1024
      level: core
      name: geo.region_name
      type: keyword
    - description: 'Hostname of the host.

        It normally contains what the `hostname` command returns on the host machine.'
      ignore_above: 1024
      level: core
      name: hostname
      type: keyword
    - description: 'Unique host id.

        As hostname is not always unique, use values that are meaningful in your environment.

        Example: The current usage of `beat.name`.'
      ignore_above: 1024
      level: core
      name: id
      type: keyword
    - description: Host ip addresses.
      level: core
      name: ip
      type: ip
    - description: Host mac addresses.
      ignore_above: 1024
      level: core
      name: mac
      type: keyword
    - description: 'Name of the host.

        It can contain what `hostname` returns on Unix systems, the fully qualified
        domain name, or a name specified by the user. The sender decides which value
        to use.'
      ignore_above: 1024
      level: core
      name: name
      type: keyword
    - description: OS family (such as redhat, debian, freebsd, windows).
      example: debian
      ignore_above: 1024
      level: extended
      name: os.family
      type: keyword
    - description: Operating system name, including the version or code name.
      example: Mac OS Mojave
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: os.full
      type: keyword
    - description: Operating system kernel version as a raw string.
      example: 4.4.0-112-generic
      ignore_above: 1024
      level: extended
      name: os.kernel
      type: keyword
    - description: Operating system name, without the version.
      example: Mac OS X
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: os.name
      type: keyword
    - description: Operating system platform (such centos, ubuntu, windows).
      example: darwin
      ignore_above: 1024
      level: extended
      name: os.platform
      type: keyword
    - description: Operating system version as a raw string.
      example: 10.14.1
      ignore_above: 1024
      level: extended
      name: os.version
      type: keyword
    - description: 'Type of host.

        For Cloud providers this can be the machine type like `t2.medium`. If vm,
        this could be the container, for example, or other information meaningful
        in your environment.'
      ignore_above: 1024
      level: core
      name: type
      type: keyword
    - description: Seconds the host has been up.
      example: 1325
      level: extended
      name: uptime
      type: long
    - description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
      ignore_above: 1024
      level: extended
      name: user.domain
      type: keyword
    - description: User email address.
      ignore_above: 1024
      level: extended
      name: user.email
      type: keyword
    - description: User's full name, if available.
      example: Albert Einstein
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: user.full_name
      type: keyword
    - description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      ignore_above: 1024
      level: extended
      name: user.group.domain
      type: keyword
    - description: Unique identifier for the group on the system/platform.
      ignore_above: 1024
      level: extended
      name: user.group.id
      type: keyword
    - description: Name of the group.
      ignore_above: 1024
      level: extended
      name: user.group.name
      type: keyword
    - description: 'Unique user hash to correlate information for a user in anonymized
        form.

        Useful if `user.id` or `user.name` contain confidential information and cannot
        be used.'
      ignore_above: 1024
      level: extended
      name: user.hash
      type: keyword
    - description: Unique identifiers of the user.
      ignore_above: 1024
      level: core
      name: user.id
      type: keyword
    - description: Short name or login of the user.
      example: albert
      ignore_above: 1024
      level: core
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: user.name
      type: keyword
    group: 2
    name: host
    title: Host
    type: group
  - description: Fields related to HTTP activity. Use the `url` field set to store
      the url of the request.
    fields:
    - description: Size in bytes of the request body.
      example: 887
      format: bytes
      level: extended
      name: request.body.bytes
      type: long
    - description: The full HTTP request body.
      example: Hello world
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: request.body.content
      type: keyword
    - description: Total size in bytes of the request (body and headers).
      example: 1437
      format: bytes
      level: extended
      name: request.bytes
      type: long
    - description: 'HTTP request method.

        The field value must be normalized to lowercase for querying. See the documentation
        section "Implementing ECS".'
      example: get, post, put
      ignore_above: 1024
      level: extended
      name: request.method
      type: keyword
    - description: Referrer for this HTTP request.
      example: https://blog.example.com/
      ignore_above: 1024
      level: extended
      name: request.referrer
      type: keyword
    - description: Size in bytes of the response body.
      example: 887
      format: bytes
      level: extended
      name: response.body.bytes
      type: long
    - description: The full HTTP response body.
      example: Hello world
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: response.body.content
      type: keyword
    - description: Total size in bytes of the response (body and headers).
      example: 1437
      format: bytes
      level: extended
      name: response.bytes
      type: long
    - description: HTTP response status code.
      example: 404
      format: string
      level: extended
      name: response.status_code
      type: long
    - description: HTTP version.
      example: 1.1
      ignore_above: 1024
      level: extended
      name: version
      type: keyword
    group: 2
    name: http
    title: HTTP
    type: group
  - description: The interface fields are used to record ingress and egress interface
      information when reported by an observer (e.g. firewall, router, load balancer)
      in the context of the observer handling a network connection.  In the case of
      a single observer interface (e.g. network sensor on a span port) only the observer.ingress
      information should be populated.
    fields:
    - default_field: false
      description: Interface alias as reported by the system, typically used in firewall
        implementations for e.g. inside, outside, or dmz logical interface naming.
      example: outside
      ignore_above: 1024
      level: extended
      name: alias
      type: keyword
    - default_field: false
      description: Interface ID as reported by an observer (typically SNMP interface
        ID).
      example: 10
      ignore_above: 1024
      level: extended
      name: id
      type: keyword
    - default_field: false
      description: Interface name as reported by the system.
      example: eth0
      ignore_above: 1024
      level: extended
      name: name
      type: keyword
    group: 2
    name: interface
    title: Interface
    type: group
  - description: 'Details about the event''s logging mechanism or logging transport.

      The log.* fields are typically populated with details about the logging mechanism
      used to create and/or transport the event. For example, syslog details belong
      under `log.syslog.*`.

      The details specific to your event source are typically not logged under `log.*`,
      but rather in `event.*` or in other ECS fields.'
    fields:
    - description: 'Original log level of the log event.

        If the source of the event provides a log level or textual severity, this
        is the one that goes in `log.level`. If your source doesn''t specify one,
        you may put your event transport''s severity here (e.g. Syslog severity).

        Some examples are `warn`, `err`, `i`, `informational`.'
      example: error
      ignore_above: 1024
      level: core
      name: level
      type: keyword
    - description: The name of the logger inside an application. This is usually the
        name of the class which initialized the logger, or can be a custom name.
      example: org.elasticsearch.bootstrap.Bootstrap
      ignore_above: 1024
      level: core
      name: logger
      type: keyword
    - description: The line number of the file containing the source code which originated
        the log event.
      example: 42
      level: extended
      name: origin.file.line
      type: integer
    - description: The name of the file containing the source code which originated
        the log event. Note that this is not the name of the log file.
      example: Bootstrap.java
      ignore_above: 1024
      level: extended
      name: origin.file.name
      type: keyword
    - description: The name of the function or method which originated the log event.
      example: init
      ignore_above: 1024
      level: extended
      name: origin.function
      type: keyword
    - description: 'This is the original log message and contains the full log message
        before splitting it up in multiple parts.

        In contrast to the `message` field which can contain an extracted part of
        the log message, this field contains the original, full log message. It can
        have already some modifications applied like encoding or new lines removed
        to clean up the log message.

        This field is not indexed and doc_values are disabled so it can''t be queried
        but the value can be retrieved from `_source`.'
      example: Sep 19 08:26:10 localhost My log
      ignore_above: 1024
      level: core
      name: original
      type: keyword
    - description: The Syslog metadata of the event, if the event was transmitted
        via Syslog. Please see RFCs 5424 or 3164.
      level: extended
      name: syslog
      object_type: keyword
      type: object
    - description: 'The Syslog numeric facility of the log event, if available.

        According to RFCs 5424 and 3164, this value should be an integer between 0
        and 23.'
      example: 23
      format: string
      level: extended
      name: syslog.facility.code
      type: long
    - description: The Syslog text-based facility of the log event, if available.
      example: local7
      ignore_above: 1024
      level: extended
      name: syslog.facility.name
      type: keyword
    - description: 'Syslog numeric priority of the event, if available.

        According to RFCs 5424 and 3164, the priority is 8 * facility + severity.
        This number is therefore expected to contain a value between 0 and 191.'
      example: 135
      format: string
      level: extended
      name: syslog.priority
      type: long
    - description: 'The Syslog numeric severity of the log event, if available.

        If the event source publishing via Syslog provides a different numeric severity
        value (e.g. firewall, IDS), your source''s numeric severity should go to `event.severity`.
        If the event source does not specify a distinct severity, you can optionally
        copy the Syslog severity to `event.severity`.'
      example: 3
      level: extended
      name: syslog.severity.code
      type: long
    - description: 'The Syslog numeric severity of the log event, if available.

        If the event source publishing via Syslog provides a different severity value
        (e.g. firewall, IDS), your source''s text severity should go to `log.level`.
        If the event source does not specify a distinct severity, you can optionally
        copy the Syslog severity to `log.level`.'
      example: Error
      ignore_above: 1024
      level: extended
      name: syslog.severity.name
      type: keyword
    group: 2
    name: log
    title: Log
    type: group
  - description: 'The network is defined as the communication path over which a host
      or network event happens.

      The network.* fields should be populated with details about the network activity
      associated with an event.'
    fields:
    - description: 'A name given to an application level protocol. This can be arbitrarily
        assigned for things like microservices, but also apply to things like skype,
        icq, facebook, twitter. This would be used in situations where the vendor
        or service can be decoded such as from the source/dest IP owners, ports, or
        wire format.

        The field value must be normalized to lowercase for querying. See the documentation
        section "Implementing ECS".'
      example: aim
      ignore_above: 1024
      level: extended
      name: application
      type: keyword
    - description: 'Total bytes transferred in both directions.

        If `source.bytes` and `destination.bytes` are known, `network.bytes` is their
        sum.'
      example: 368
      format: bytes
      level: core
      name: bytes
      type: long
    - description: 'A hash of source and destination IPs and ports, as well as the
        protocol used in a communication. This is a tool-agnostic standard to identify
        flows.

        Learn more at https://github.com/corelight/community-id-spec.'
      example: 1:hO+sN4H+MG5MY/8hIrXPqc4ZQz0=
      ignore_above: 1024
      level: extended
      name: community_id
      type: keyword
    - description: "Direction of the network traffic.\nRecommended values are:\n \
        \ * inbound\n  * outbound\n  * internal\n  * external\n  * unknown\n\nWhen\
        \ mapping events from a host-based monitoring context, populate this field\
        \ from the host's point of view.\nWhen mapping events from a network or perimeter-based\
        \ monitoring context, populate this field from the point of view of your network\
        \ perimeter."
      example: inbound
      ignore_above: 1024
      level: core
      name: direction
      type: keyword
    - description: Host IP address when the source IP address is the proxy.
      example: 192.1.1.2
      level: core
      name: forwarded_ip
      type: ip
    - description: IANA Protocol Number (https://www.iana.org/assignments/protocol-numbers/protocol-numbers.xhtml).
        Standardized list of protocols. This aligns well with NetFlow and sFlow related
        logs which use the IANA Protocol Number.
      example: 6
      ignore_above: 1024
      level: extended
      name: iana_number
      type: keyword
    - default_field: false
      description: Network.inner fields are added in addition to network.vlan fields
        to describe  the innermost VLAN when q-in-q VLAN tagging is present. Allowed
        fields include  vlan.id and vlan.name. Inner vlan fields are typically used
        when sending traffic with multiple 802.1q encapsulations to a network sensor
        (e.g. Zeek, Wireshark.)
      level: extended
      name: inner
      object_type: keyword
      type: object
    - default_field: false
      description: VLAN ID as reported by the observer.
      example: 10
      ignore_above: 1024
      level: extended
      name: inner.vlan.id
      type: keyword
    - default_field: false
      description: Optional VLAN name as reported by the observer.
      example: outside
      ignore_above: 1024
      level: extended
      name: inner.vlan.name
      type: keyword
    - description: Name given by operators to sections of their network.
      example: Guest Wifi
      ignore_above: 1024
      level: extended
      name: name
      type: keyword
    - description: 'Total packets transferred in both directions.

        If `source.packets` and `destination.packets` are known, `network.packets`
        is their sum.'
      example: 24
      level: core
      name: packets
      type: long
    - description: 'L7 Network protocol name. ex. http, lumberjack, transport protocol.

        The field value must be normalized to lowercase for querying. See the documentation
        section "Implementing ECS".'
      example: http
      ignore_above: 1024
      level: core
      name: protocol
      type: keyword
    - description: 'Same as network.iana_number, but instead using the Keyword name
        of the transport layer (udp, tcp, ipv6-icmp, etc.)

        The field value must be normalized to lowercase for querying. See the documentation
        section "Implementing ECS".'
      example: tcp
      ignore_above: 1024
      level: core
      name: transport
      type: keyword
    - description: 'In the OSI Model this would be the Network Layer. ipv4, ipv6,
        ipsec, pim, etc

        The field value must be normalized to lowercase for querying. See the documentation
        section "Implementing ECS".'
      example: ipv4
      ignore_above: 1024
      level: core
      name: type
      type: keyword
    - default_field: false
      description: VLAN ID as reported by the observer.
      example: 10
      ignore_above: 1024
      level: extended
      name: vlan.id
      type: keyword
    - default_field: false
      description: Optional VLAN name as reported by the observer.
      example: outside
      ignore_above: 1024
      level: extended
      name: vlan.name
      type: keyword
    group: 2
    name: network
    title: Network
    type: group
  - description: 'An observer is defined as a special network, security, or application
      device used to detect, observe, or create network, security, or application-related
      events and metrics.

      This could be a custom hardware appliance or a server that has been configured
      to run special network, security, or application software. Examples include
      firewalls, web proxies, intrusion detection/prevention systems, network monitoring
      sensors, web application firewalls, data loss prevention systems, and APM servers.
      The observer.* fields shall be populated with details of the system, if any,
      that detects, observes and/or creates a network, security, or application event
      or metric. Message queues and ETL components used in processing events or metrics
      are not considered observers in ECS.'
    fields:
    - default_field: false
      description: Observer.egress holds information like interface number and name,
        vlan, and zone information to  classify egress traffic.  Single armed monitoring
        such as a network sensor on a span port should  only use observer.ingress
        to categorize traffic.
      level: extended
      name: egress
      object_type: keyword
      type: object
    - default_field: false
      description: Interface alias as reported by the system, typically used in firewall
        implementations for e.g. inside, outside, or dmz logical interface naming.
      example: outside
      ignore_above: 1024
      level: extended
      name: egress.interface.alias
      type: keyword
    - default_field: false
      description: Interface ID as reported by an observer (typically SNMP interface
        ID).
      example: 10
      ignore_above: 1024
      level: extended
      name: egress.interface.id
      type: keyword
    - default_field: false
      description: Interface name as reported by the system.
      example: eth0
      ignore_above: 1024
      level: extended
      name: egress.interface.name
      type: keyword
    - default_field: false
      description: VLAN ID as reported by the observer.
      example: 10
      ignore_above: 1024
      level: extended
      name: egress.vlan.id
      type: keyword
    - default_field: false
      description: Optional VLAN name as reported by the observer.
      example: outside
      ignore_above: 1024
      level: extended
      name: egress.vlan.name
      type: keyword
    - default_field: false
      description: Network zone of outbound traffic as reported by the observer to
        categorize the destination area of egress  traffic, e.g. Internal, External,
        DMZ, HR, Legal, etc.
      example: Public_Internet
      ignore_above: 1024
      level: extended
      name: egress.zone
      type: keyword
    - description: City name.
      example: Montreal
      ignore_above: 1024
      level: core
      name: geo.city_name
      type: keyword
    - description: Name of the continent.
      example: North America
      ignore_above: 1024
      level: core
      name: geo.continent_name
      type: keyword
    - description: Country ISO code.
      example: CA
      ignore_above: 1024
      level: core
      name: geo.country_iso_code
      type: keyword
    - description: Country name.
      example: Canada
      ignore_above: 1024
      level: core
      name: geo.country_name
      type: keyword
    - description: Longitude and latitude.
      example: '{ "lon": -73.614830, "lat": 45.505918 }'
      level: core
      name: geo.location
      type: geo_point
    - description: 'User-defined description of a location, at the level of granularity
        they care about.

        Could be the name of their data centers, the floor number, if this describes
        a local physical entity, city names.

        Not typically used in automated geolocation.'
      example: boston-dc
      ignore_above: 1024
      level: extended
      name: geo.name
      type: keyword
    - description: Region ISO code.
      example: CA-QC
      ignore_above: 1024
      level: core
      name: geo.region_iso_code
      type: keyword
    - description: Region name.
      example: Quebec
      ignore_above: 1024
      level: core
      name: geo.region_name
      type: keyword
    - description: Hostname of the observer.
      ignore_above: 1024
      level: core
      name: hostname
      type: keyword
    - default_field: false
      description: Observer.ingress holds information like interface number and name,
        vlan, and zone information to  classify ingress traffic.  Single armed monitoring
        such as a network sensor on a span port should  only use observer.ingress
        to categorize traffic.
      level: extended
      name: ingress
      object_type: keyword
      type: object
    - default_field: false
      description: Interface alias as reported by the system, typically used in firewall
        implementations for e.g. inside, outside, or dmz logical interface naming.
      example: outside
      ignore_above: 1024
      level: extended
      name: ingress.interface.alias
      type: keyword
    - default_field: false
      description: Interface ID as reported by an observer (typically SNMP interface
        ID).
      example: 10
      ignore_above: 1024
      level: extended
      name: ingress.interface.id
      type: keyword
    - default_field: false
      description: Interface name as reported by the system.
      example: eth0
      ignore_above: 1024
      level: extended
      name: ingress.interface.name
      type: keyword
    - default_field: false
      description: VLAN ID as reported by the observer.
      example: 10
      ignore_above: 1024
      level: extended
      name: ingress.vlan.id
      type: keyword
    - default_field: false
      description: Optional VLAN name as reported by the observer.
      example: outside
      ignore_above: 1024
      level: extended
      name: ingress.vlan.name
      type: keyword
    - default_field: false
      description: Network zone of incoming traffic as reported by the observer to
        categorize the source area of ingress  traffic. e.g. internal, External, DMZ,
        HR, Legal, etc.
      example: DMZ
      ignore_above: 1024
      level: extended
      name: ingress.zone
      type: keyword
    - description: IP addresses of the observer.
      level: core
      name: ip
      type: ip
    - description: MAC addresses of the observer
      ignore_above: 1024
      level: core
      name: mac
      type: keyword
    - description: 'Custom name of the observer.

        This is a name that can be given to an observer. This can be helpful for example
        if multiple firewalls of the same model are used in an organization.

        If no custom name is needed, the field can be left empty.'
      example: 1_proxySG
      ignore_above: 1024
      level: extended
      name: name
      type: keyword
    - description: OS family (such as redhat, debian, freebsd, windows).
      example: debian
      ignore_above: 1024
      level: extended
      name: os.family
      type: keyword
    - description: Operating system name, including the version or code name.
      example: Mac OS Mojave
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: os.full
      type: keyword
    - description: Operating system kernel version as a raw string.
      example: 4.4.0-112-generic
      ignore_above: 1024
      level: extended
      name: os.kernel
      type: keyword
    - description: Operating system name, without the version.
      example: Mac OS X
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: os.name
      type: keyword
    - description: Operating system platform (such centos, ubuntu, windows).
      example: darwin
      ignore_above: 1024
      level: extended
      name: os.platform
      type: keyword
    - description: Operating system version as a raw string.
      example: 10.14.1
      ignore_above: 1024
      level: extended
      name: os.version
      type: keyword
    - description: The product name of the observer.
      example: s200
      ignore_above: 1024
      level: extended
      name: product
      type: keyword
    - description: Observer serial number.
      ignore_above: 1024
      level: extended
      name: serial_number
      type: keyword
    - description: 'The type of the observer the data is coming from.

        There is no predefined list of observer types. Some examples are `forwarder`,
        `firewall`, `ids`, `ips`, `proxy`, `poller`, `sensor`, `APM server`.'
      example: firewall
      ignore_above: 1024
      level: core
      name: type
      type: keyword
    - description: Vendor name of the observer.
      example: Symantec
      ignore_above: 1024
      level: core
      name: vendor
      type: keyword
    - description: Observer version.
      ignore_above: 1024
      level: core
      name: version
      type: keyword
    group: 2
    name: observer
    title: Observer
    type: group
  - description: 'The organization fields enrich data with information about the company
      or entity the data is associated with.

      These fields help you arrange or filter data stored in an index by one or multiple
      organizations.'
    fields:
    - description: Unique identifier for the organization.
      ignore_above: 1024
      level: extended
      name: id
      type: keyword
    - description: Organization name.
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: name
      type: keyword
    group: 2
    name: organization
    title: Organization
    type: group
  - description: The OS fields contain information about the operating system.
    fields:
    - description: OS family (such as redhat, debian, freebsd, windows).
      example: debian
      ignore_above: 1024
      level: extended
      name: family
      type: keyword
    - description: Operating system name, including the version or code name.
      example: Mac OS Mojave
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: full
      type: keyword
    - description: Operating system kernel version as a raw string.
      example: 4.4.0-112-generic
      ignore_above: 1024
      level: extended
      name: kernel
      type: keyword
    - description: Operating system name, without the version.
      example: Mac OS X
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: name
      type: keyword
    - description: Operating system platform (such centos, ubuntu, windows).
      example: darwin
      ignore_above: 1024
      level: extended
      name: platform
      type: keyword
    - description: Operating system version as a raw string.
      example: 10.14.1
      ignore_above: 1024
      level: extended
      name: version
      type: keyword
    group: 2
    name: os
    title: Operating System
    type: group
  - description: These fields contain information about an installed software package.
      It contains general information about a package, such as name, version or size.
      It also contains installation details, such as time or location.
    fields:
    - description: Package architecture.
      example: x86_64
      ignore_above: 1024
      level: extended
      name: architecture
      type: keyword
    - default_field: false
      description: 'Additional information about the build version of the installed
        package.

        For example use the commit SHA of a non-released package.'
      example: 36f4f7e89dd61b0988b12ee000b98966867710cd
      ignore_above: 1024
      level: extended
      name: build_version
      type: keyword
    - description: Checksum of the installed package for verification.
      example: 68b329da9893e34099c7d8ad5cb9c940
      ignore_above: 1024
      level: extended
      name: checksum
      type: keyword
    - description: Description of the package.
      example: Open source programming language to build simple/reliable/efficient
        software.
      ignore_above: 1024
      level: extended
      name: description
      type: keyword
    - description: Indicating how the package was installed, e.g. user-local, global.
      example: global
      ignore_above: 1024
      level: extended
      name: install_scope
      type: keyword
    - description: Time when package was installed.
      level: extended
      name: installed
      type: date
    - description: 'License under which the package was released.

        Use a short name, e.g. the license identifier from SPDX License List where
        possible (https://spdx.org/licenses/).'
      example: Apache License 2.0
      ignore_above: 1024
      level: extended
      name: license
      type: keyword
    - description: Package name
      example: go
      ignore_above: 1024
      level: extended
      name: name
      type: keyword
    - description: Path where the package is installed.
      example: /usr/local/Cellar/go/1.12.9/
      ignore_above: 1024
      level: extended
      name: path
      type: keyword
    - default_field: false
      description: Home page or reference URL of the software in this package, if
        available.
      example: https://golang.org
      ignore_above: 1024
      level: extended
      name: reference
      type: keyword
    - description: Package size in bytes.
      example: 62231
      format: string
      level: extended
      name: size
      type: long
    - default_field: false
      description: 'Type of package.

        This should contain the package file type, rather than the package manager
        name. Examples: rpm, dpkg, brew, npm, gem, nupkg, jar.'
      example: rpm
      ignore_above: 1024
      level: extended
      name: type
      type: keyword
    - description: Package version
      example: 1.12.9
      ignore_above: 1024
      level: extended
      name: version
      type: keyword
    group: 2
    name: package
    title: Package
    type: group
  - description: These fields contain Windows Portable Executable (PE) metadata.
    fields:
    - default_field: false
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      ignore_above: 1024
      level: extended
      name: company
      type: keyword
    - default_field: false
      description: Internal description of the file, provided at compile-time.
      example: Paint
      ignore_above: 1024
      level: extended
      name: description
      type: keyword
    - default_field: false
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      ignore_above: 1024
      level: extended
      name: file_version
      type: keyword
    - default_field: false
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      ignore_above: 1024
      level: extended
      name: original_file_name
      type: keyword
    - default_field: false
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft\xAE Windows\xAE Operating System"
      ignore_above: 1024
      level: extended
      name: product
      type: keyword
    group: 2
    name: pe
    title: PE Header
    type: group
  - description: 'These fields contain information about a process.

      These fields can help you correlate metrics information with a process id/name
      from a log message.  The `process.pid` often stays in the metric itself and
      is copied to the global field for correlation.'
    fields:
    - description: 'Array of process arguments, starting with the absolute path to
        the executable.

        May be filtered to protect sensitive information.'
      example:
      - /usr/bin/ssh
      - -l
      - user
      - 10.0.0.16
      ignore_above: 1024
      level: extended
      name: args
      type: keyword
    - default_field: false
      description: 'Length of the process.args array.

        This field can be useful for querying or performing bucket analysis on how
        many arguments were provided to start a process. More arguments may be an
        indication of suspicious activity.'
      example: 4
      level: extended
      name: args_count
      type: long
    - default_field: false
      description: Boolean to capture if a signature is present.
      example: 'true'
      level: core
      name: code_signature.exists
      type: boolean
    - default_field: false
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity
        or trust status. Leave unpopulated if the validity or trust of the certificate
        was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      ignore_above: 1024
      level: extended
      name: code_signature.status
      type: keyword
    - default_field: false
      description: Subject name of the code signer
      example: Microsoft Corporation
      ignore_above: 1024
      level: core
      name: code_signature.subject_name
      type: keyword
    - default_field: false
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this
        field should only be populated by tools that actively check the status.'
      example: 'true'
      level: extended
      name: code_signature.trusted
      type: boolean
    - default_field: false
      description: 'Boolean to capture if the digital signature is verified against
        the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      level: extended
      name: code_signature.valid
      type: boolean
    - default_field: false
      description: 'Full command line that started the process, including the absolute
        path to the executable, and all arguments.

        Some arguments may be filtered to protect sensitive information.'
      example: /usr/bin/ssh -l user 10.0.0.16
      ignore_above: 1024
      level: extended
      multi_fields:
      - name: text
        norms: false
        type: text
      name: command_line
      type: keyword
    - default_field: false
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples
        of what could be used here are a process-generated UUID, Sysmon Process GUIDs,
        or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate
        PID reuse as well as to identify a specific process over time, across multiple
        monitored hosts.'
      example: c2c455d9f99375d
      ignore_above: 1024
      level: extended
      name: entity_id
      type: keyword
    - description: Absolute path to the process executable.
      example: /usr/bin/ssh
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: executable
      type: keyword
    - default_field: false
      description: 'The exit code of the process, if this is a termination event.

        The field should be absent if there is no exit code for the event (e.g. process
        start).'
      example: 137
      level: extended
      name: exit_code
      type: long
    - description: MD5 hash.
      ignore_above: 1024
      level: extended
      name: hash.md5
      type: keyword
    - description: SHA1 hash.
      ignore_above: 1024
      level: extended
      name: hash.sha1
      type: keyword
    - description: SHA256 hash.
      ignore_above: 1024
      level: extended
      name: hash.sha256
      type: keyword
    - description: SHA512 hash.
      ignore_above: 1024
      level: extended
      name: hash.sha512
      type: keyword
    - description: 'Process name.

        Sometimes called program name or similar.'
      example: ssh
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: name
      type: keyword
    - default_field: false
      description: 'Array of process arguments.

        May be filtered to protect sensitive information.'
      example:
      - ssh
      - -l
      - user
      - 10.0.0.16
      ignore_above: 1024
      level: extended
      name: parent.args
      type: keyword
    - default_field: false
      description: 'Length of the process.args array.

        This field can be useful for querying or performing bucket analysis on how
        many arguments were provided to start a process. More arguments may be an
        indication of suspicious activity.'
      example: 4
      level: extended
      name: parent.args_count
      type: long
    - default_field: false
      description: Boolean to capture if a signature is present.
      example: 'true'
      level: core
      name: parent.code_signature.exists
      type: boolean
    - default_field: false
      description: 'Additional information about the certificate status.

        This is useful for logging cryptographic errors with the certificate validity
        or trust status. Leave unpopulated if the validity or trust of the certificate
        was unchecked.'
      example: ERROR_UNTRUSTED_ROOT
      ignore_above: 1024
      level: extended
      name: parent.code_signature.status
      type: keyword
    - default_field: false
      description: Subject name of the code signer
      example: Microsoft Corporation
      ignore_above: 1024
      level: core
      name: parent.code_signature.subject_name
      type: keyword
    - default_field: false
      description: 'Stores the trust status of the certificate chain.

        Validating the trust of the certificate chain may be complicated, and this
        field should only be populated by tools that actively check the status.'
      example: 'true'
      level: extended
      name: parent.code_signature.trusted
      type: boolean
    - default_field: false
      description: 'Boolean to capture if the digital signature is verified against
        the binary content.

        Leave unpopulated if a certificate was unchecked.'
      example: 'true'
      level: extended
      name: parent.code_signature.valid
      type: boolean
    - default_field: false
      description: 'Full command line that started the process, including the absolute
        path to the executable, and all arguments.

        Some arguments may be filtered to protect sensitive information.'
      example: /usr/bin/ssh -l user 10.0.0.16
      ignore_above: 1024
      level: extended
      multi_fields:
      - name: text
        norms: false
        type: text
      name: parent.command_line
      type: keyword
    - default_field: false
      description: 'Unique identifier for the process.

        The implementation of this is specified by the data source, but some examples
        of what could be used here are a process-generated UUID, Sysmon Process GUIDs,
        or a hash of some uniquely identifying components of a process.

        Constructing a globally unique identifier is a common practice to mitigate
        PID reuse as well as to identify a specific process over time, across multiple
        monitored hosts.'
      example: c2c455d9f99375d
      ignore_above: 1024
      level: extended
      name: parent.entity_id
      type: keyword
    - default_field: false
      description: Absolute path to the process executable.
      example: /usr/bin/ssh
      ignore_above: 1024
      level: extended
      multi_fields:
      - name: text
        norms: false
        type: text
      name: parent.executable
      type: keyword
    - default_field: false
      description: 'The exit code of the process, if this is a termination event.

        The field should be absent if there is no exit code for the event (e.g. process
        start).'
      example: 137
      level: extended
      name: parent.exit_code
      type: long
    - default_field: false
      description: MD5 hash.
      ignore_above: 1024
      level: extended
      name: parent.hash.md5
      type: keyword
    - default_field: false
      description: SHA1 hash.
      ignore_above: 1024
      level: extended
      name: parent.hash.sha1
      type: keyword
    - default_field: false
      description: SHA256 hash.
      ignore_above: 1024
      level: extended
      name: parent.hash.sha256
      type: keyword
    - default_field: false
      description: SHA512 hash.
      ignore_above: 1024
      level: extended
      name: parent.hash.sha512
      type: keyword
    - default_field: false
      description: 'Process name.

        Sometimes called program name or similar.'
      example: ssh
      ignore_above: 1024
      level: extended
      multi_fields:
      - name: text
        norms: false
        type: text
      name: parent.name
      type: keyword
    - default_field: false
      description: Identifier of the group of processes the process belongs to.
      format: string
      level: extended
      name: parent.pgid
      type: long
    - default_field: false
      description: Process id.
      example: 4242
      format: string
      level: core
      name: parent.pid
      type: long
    - default_field: false
      description: Parent process' pid.
      example: 4241
      format: string
      level: extended
      name: parent.ppid
      type: long
    - default_field: false
      description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
      level: extended
      name: parent.start
      type: date
    - default_field: false
      description: Thread ID.
      example: 4242
      format: string
      level: extended
      name: parent.thread.id
      type: long
    - default_field: false
      description: Thread name.
      example: thread-0
      ignore_above: 1024
      level: extended
      name: parent.thread.name
      type: keyword
    - default_field: false
      description: 'Process title.

        The proctitle, some times the same as process name. Can also be different:
        for example a browser setting its title to the web page currently opened.'
      ignore_above: 1024
      level: extended
      multi_fields:
      - name: text
        norms: false
        type: text
      name: parent.title
      type: keyword
    - default_field: false
      description: Seconds the process has been up.
      example: 1325
      level: extended
      name: parent.uptime
      type: long
    - default_field: false
      description: The working directory of the process.
      example: /home/alice
      ignore_above: 1024
      level: extended
      multi_fields:
      - name: text
        norms: false
        type: text
      name: parent.working_directory
      type: keyword
    - default_field: false
      description: Internal company name of the file, provided at compile-time.
      example: Microsoft Corporation
      ignore_above: 1024
      level: extended
      name: pe.company
      type: keyword
    - default_field: false
      description: Internal description of the file, provided at compile-time.
      example: Paint
      ignore_above: 1024
      level: extended
      name: pe.description
      type: keyword
    - default_field: false
      description: Internal version of the file, provided at compile-time.
      example: 6.3.9600.17415
      ignore_above: 1024
      level: extended
      name: pe.file_version
      type: keyword
    - default_field: false
      description: Internal name of the file, provided at compile-time.
      example: MSPAINT.EXE
      ignore_above: 1024
      level: extended
      name: pe.original_file_name
      type: keyword
    - default_field: false
      description: Internal product name of the file, provided at compile-time.
      example: "Microsoft\xAE Windows\xAE Operating System"
      ignore_above: 1024
      level: extended
      name: pe.product
      type: keyword
    - description: Identifier of the group of processes the process belongs to.
      format: string
      level: extended
      name: pgid
      type: long
    - description: Process id.
      example: 4242
      format: string
      level: core
      name: pid
      type: long
    - description: Parent process' pid.
      example: 4241
      format: string
      level: extended
      name: ppid
      type: long
    - description: The time the process started.
      example: '2016-05-23T08:05:34.853Z'
      level: extended
      name: start
      type: date
    - description: Thread ID.
      example: 4242
      format: string
      level: extended
      name: thread.id
      type: long
    - description: Thread name.
      example: thread-0
      ignore_above: 1024
      level: extended
      name: thread.name
      type: keyword
    - description: 'Process title.

        The proctitle, some times the same as process name. Can also be different:
        for example a browser setting its title to the web page currently opened.'
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: title
      type: keyword
    - description: Seconds the process has been up.
      example: 1325
      level: extended
      name: uptime
      type: long
    - description: The working directory of the process.
      example: /home/alice
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: working_directory
      type: keyword
    group: 2
    name: process
    title: Process
    type: group
  - description: Fields related to Windows Registry operations.
    fields:
    - default_field: false
      description: 'Original bytes written with base64 encoding.

        For Windows registry operations, such as SetValueEx and RegQueryValueEx, this
        corresponds to the data pointed by `lp_data`. This is optional but provides
        better recoverability and should be populated for REG_BINARY encoded values.'
      example: ZQBuAC0AVQBTAAAAZQBuAAAAAAA=
      ignore_above: 1024
      level: extended
      name: data.bytes
      type: keyword
    - default_field: false
      description: 'Content when writing string types.

        Populated as an array when writing string data to the registry. For single
        string registry types (REG_SZ, REG_EXPAND_SZ), this should be an array with
        one string. For sequences of string with REG_MULTI_SZ, this array will be
        variable length. For numeric data, such as REG_DWORD and REG_QWORD, this should
        be populated with the decimal representation (e.g `"1"`).'
      example: '["C:\rta\red_ttp\bin\myapp.exe"]'
      ignore_above: 1024
      level: core
      name: data.strings
      type: keyword
    - default_field: false
      description: Standard registry type for encoding contents
      example: REG_SZ
      ignore_above: 1024
      level: core
      name: data.type
      type: keyword
    - default_field: false
      description: Abbreviated name for the hive.
      example: HKLM
      ignore_above: 1024
      level: core
      name: hive
      type: keyword
    - default_field: false
      description: Hive-relative path of keys.
      example: SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution Options\winword.exe
      ignore_above: 1024
      level: core
      name: key
      type: keyword
    - default_field: false
      description: Full path, including hive, key and value
      example: HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Image File Execution
        Options\winword.exe\Debugger
      ignore_above: 1024
      level: core
      name: path
      type: keyword
    - default_field: false
      description: Name of the value written.
      example: Debugger
      ignore_above: 1024
      level: core
      name: value
      type: keyword
    group: 2
    name: registry
    title: Registry
    type: group
  - description: 'This field set is meant to facilitate pivoting around a piece of
      data.

      Some pieces of information can be seen in many places in an ECS event. To facilitate
      searching for them, store an array of all seen values to their corresponding
      field in `related.`.

      A concrete example is IP addresses, which can be under host, observer, source,
      destination, client, server, and network.forwarded_ip. If you append all IPs
      to `related.ip`, you can then search for a given IP trivially, no matter where
      it appeared, by querying `related.ip:192.0.2.15`.'
    fields:
    - default_field: false
      description: All the hashes seen on your event. Populating this field, then
        using it to search for hashes can help in situations where you're unsure what
        the hash algorithm is (and therefore which key name to search).
      ignore_above: 1024
      level: extended
      name: hash
      type: keyword
    - description: All of the IPs seen on your event.
      level: extended
      name: ip
      type: ip
    - default_field: false
      description: All the user names seen on your event.
      ignore_above: 1024
      level: extended
      name: user
      type: keyword
    group: 2
    name: related
    title: Related
    type: group
  - description: 'Rule fields are used to capture the specifics of any observer or
      agent rules that generate alerts or other notable events.

      Examples of data sources that would populate the rule fields include: network
      admission control platforms, network or host IDS/IPS, network firewalls, web
      application firewalls, url filters, endpoint detection and response (EDR) systems,
      etc.'
    fields:
    - default_field: false
      description: Name, organization, or pseudonym of the author or authors who created
        the rule used to generate this event.
      example:
      - Star-Lord
      ignore_above: 1024
      level: extended
      name: author
      type: keyword
    - default_field: false
      description: A categorization value keyword used by the entity using the rule
        for detection of this event.
      example: Attempted Information Leak
      ignore_above: 1024
      level: extended
      name: category
      type: keyword
    - default_field: false
      description: The description of the rule generating the event.
      example: Block requests to public DNS over HTTPS / TLS protocols
      ignore_above: 1024
      level: extended
      name: description
      type: keyword
    - default_field: false
      description: A rule ID that is unique within the scope of an agent, observer,
        or other entity using the rule for detection of this event.
      example: 101
      ignore_above: 1024
      level: extended
      name: id
      type: keyword
    - default_field: false
      description: Name of the license under which the rule used to generate this
        event is made available.
      example: Apache 2.0
      ignore_above: 1024
      level: extended
      name: license
      type: keyword
    - default_field: false
      description: The name of the rule or signature generating the event.
      example: BLOCK_DNS_over_TLS
      ignore_above: 1024
      level: extended
      name: name
      type: keyword
    - default_field: false
      description: 'Reference URL to additional information about the rule used to
        generate this event.

        The URL can point to the vendor''s documentation about the rule. If that''s
        not available, it can also be a link to a more general page describing this
        type of alert.'
      example: https://en.wikipedia.org/wiki/DNS_over_TLS
      ignore_above: 1024
      level: extended
      name: reference
      type: keyword
    - default_field: false
      description: Name of the ruleset, policy, group, or parent category in which
        the rule used to generate this event is a member.
      example: Standard_Protocol_Filters
      ignore_above: 1024
      level: extended
      name: ruleset
      type: keyword
    - default_field: false
      description: A rule ID that is unique within the scope of a set or group of
        agents, observers, or other entities using the rule for detection of this
        event.
      example: 1100110011
      ignore_above: 1024
      level: extended
      name: uuid
      type: keyword
    - default_field: false
      description: The version / revision of the rule being used for analysis.
      example: 1.1
      ignore_above: 1024
      level: extended
      name: version
      type: keyword
    group: 2
    name: rule
    title: Rule
    type: group
  - description: 'A Server is defined as the responder in a network connection for
      events regarding sessions, connections, or bidirectional flow records.

      For TCP events, the server is the receiver of the initial SYN packet(s) of the
      TCP connection. For other protocols, the server is generally the responder in
      the network transaction. Some systems actually use the term "responder" to refer
      the server in TCP connections. The server fields describe details about the
      system acting as the server in the network event. Server fields are usually
      populated in conjunction with client fields. Server fields are generally not
      populated for packet-level events.

      Client / server representations can add semantic context to an exchange, which
      is helpful to visualize the data in certain situations. If your context falls
      in that category, you should still ensure that source and destination are filled
      appropriately.'
    fields:
    - description: 'Some event server addresses are defined ambiguously. The event
        will sometimes list an IP, a domain or a unix socket.  You should always store
        the raw address in the `.address` field.

        Then it should be duplicated to `.ip` or `.domain`, depending on which one
        it is.'
      ignore_above: 1024
      level: extended
      name: address
      type: keyword
    - description: Unique number allocated to the autonomous system. The autonomous
        system number (ASN) uniquely identifies each network on the Internet.
      example: 15169
      level: extended
      name: as.number
      type: long
    - description: Organization name.
      example: Google LLC
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: as.organization.name
      type: keyword
    - description: Bytes sent from the server to the client.
      example: 184
      format: bytes
      level: core
      name: bytes
      type: long
    - description: Server domain.
      ignore_above: 1024
      level: core
      name: domain
      type: keyword
    - description: City name.
      example: Montreal
      ignore_above: 1024
      level: core
      name: geo.city_name
      type: keyword
    - description: Name of the continent.
      example: North America
      ignore_above: 1024
      level: core
      name: geo.continent_name
      type: keyword
    - description: Country ISO code.
      example: CA
      ignore_above: 1024
      level: core
      name: geo.country_iso_code
      type: keyword
    - description: Country name.
      example: Canada
      ignore_above: 1024
      level: core
      name: geo.country_name
      type: keyword
    - description: Longitude and latitude.
      example: '{ "lon": -73.614830, "lat": 45.505918 }'
      level: core
      name: geo.location
      type: geo_point
    - description: 'User-defined description of a location, at the level of granularity
        they care about.

        Could be the name of their data centers, the floor number, if this describes
        a local physical entity, city names.

        Not typically used in automated geolocation.'
      example: boston-dc
      ignore_above: 1024
      level: extended
      name: geo.name
      type: keyword
    - description: Region ISO code.
      example: CA-QC
      ignore_above: 1024
      level: core
      name: geo.region_iso_code
      type: keyword
    - description: Region name.
      example: Quebec
      ignore_above: 1024
      level: core
      name: geo.region_name
      type: keyword
    - description: 'IP address of the server.

        Can be one or multiple IPv4 or IPv6 addresses.'
      level: core
      name: ip
      type: ip
    - description: MAC address of the server.
      ignore_above: 1024
      level: core
      name: mac
      type: keyword
    - description: 'Translated ip of destination based NAT sessions (e.g. internet
        to private DMZ)

        Typically used with load balancers, firewalls, or routers.'
      level: extended
      name: nat.ip
      type: ip
    - description: 'Translated port of destination based NAT sessions (e.g. internet
        to private DMZ)

        Typically used with load balancers, firewalls, or routers.'
      format: string
      level: extended
      name: nat.port
      type: long
    - description: Packets sent from the server to the client.
      example: 12
      level: core
      name: packets
      type: long
    - description: Port of the server.
      format: string
      level: core
      name: port
      type: long
    - description: 'The highest registered server domain, stripped of the subdomain.

        For example, the registered domain for "foo.google.com" is "google.com".

        This value can be determined precisely with a list like the public suffix
        list (http://publicsuffix.org). Trying to approximate this by simply taking
        the last two labels will not work well for TLDs such as "co.uk".'
      example: google.com
      ignore_above: 1024
      level: extended
      name: registered_domain
      type: keyword
    - description: 'The effective top level domain (eTLD), also known as the domain
        suffix, is the last part of the domain name. For example, the top level domain
        for google.com is "com".

        This value can be determined precisely with a list like the public suffix
        list (http://publicsuffix.org). Trying to approximate this by simply taking
        the last label will not work well for effective TLDs such as "co.uk".'
      example: co.uk
      ignore_above: 1024
      level: extended
      name: top_level_domain
      type: keyword
    - description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
      ignore_above: 1024
      level: extended
      name: user.domain
      type: keyword
    - description: User email address.
      ignore_above: 1024
      level: extended
      name: user.email
      type: keyword
    - description: User's full name, if available.
      example: Albert Einstein
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: user.full_name
      type: keyword
    - description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      ignore_above: 1024
      level: extended
      name: user.group.domain
      type: keyword
    - description: Unique identifier for the group on the system/platform.
      ignore_above: 1024
      level: extended
      name: user.group.id
      type: keyword
    - description: Name of the group.
      ignore_above: 1024
      level: extended
      name: user.group.name
      type: keyword
    - description: 'Unique user hash to correlate information for a user in anonymized
        form.

        Useful if `user.id` or `user.name` contain confidential information and cannot
        be used.'
      ignore_above: 1024
      level: extended
      name: user.hash
      type: keyword
    - description: Unique identifiers of the user.
      ignore_above: 1024
      level: core
      name: user.id
      type: keyword
    - description: Short name or login of the user.
      example: albert
      ignore_above: 1024
      level: core
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: user.name
      type: keyword
    group: 2
    name: server
    title: Server
    type: group
  - description: 'The service fields describe the service for or from which the data
      was collected.

      These fields help you find and correlate logs for a specific service and version.'
    fields:
    - description: 'Ephemeral identifier of this service (if one exists).

        This id normally changes across restarts, but `service.id` does not.'
      example: 8a4f500f
      ignore_above: 1024
      level: extended
      name: ephemeral_id
      type: keyword
    - description: 'Unique identifier of the running service. If the service is comprised
        of many nodes, the `service.id` should be the same for all nodes.

        This id should uniquely identify the service. This makes it possible to correlate
        logs and metrics for one specific service, no matter which particular node
        emitted the event.

        Note that if you need to see the events from one specific host of the service,
        you should filter on that `host.name` or `host.id` instead.'
      example: d37e5ebfe0ae6c4972dbe9f0174a1637bb8247f6
      ignore_above: 1024
      level: core
      name: id
      type: keyword
    - description: 'Name of the service data is collected from.

        The name of the service is normally user given. This allows for distributed
        services that run on multiple hosts to correlate the related instances based
        on the name.

        In the case of Elasticsearch the `service.name` could contain the cluster
        name. For Beats the `service.name` is by default a copy of the `service.type`
        field if no name is specified.'
      example: elasticsearch-metrics
      ignore_above: 1024
      level: core
      name: name
      type: keyword
    - description: 'Name of a service node.

        This allows for two nodes of the same service running on the same host to
        be differentiated. Therefore, `service.node.name` should typically be unique
        across nodes of a given service.

        In the case of Elasticsearch, the `service.node.name` could contain the unique
        node name within the Elasticsearch cluster. In cases where the service doesn''t
        have the concept of a node name, the host name or container name can be used
        to distinguish running instances that make up this service. If those do not
        provide uniqueness (e.g. multiple instances of the service running on the
        same host) - the node name can be manually set.'
      example: instance-0000000016
      ignore_above: 1024
      level: extended
      name: node.name
      type: keyword
    - description: Current state of the service.
      ignore_above: 1024
      level: core
      name: state
      type: keyword
    - description: 'The type of the service data is collected from.

        The type can be used to group and correlate logs and metrics from one service
        type.

        Example: If logs or metrics are collected from Elasticsearch, `service.type`
        would be `elasticsearch`.'
      example: elasticsearch
      ignore_above: 1024
      level: core
      name: type
      type: keyword
    - description: 'Version of the service the data was collected from.

        This allows to look at a data set only for a specific version of a service.'
      example: 3.2.4
      ignore_above: 1024
      level: core
      name: version
      type: keyword
    group: 2
    name: service
    title: Service
    type: group
  - description: 'Source fields describe details about the source of a packet/event.

      Source fields are usually populated in conjunction with destination fields.'
    fields:
    - description: 'Some event source addresses are defined ambiguously. The event
        will sometimes list an IP, a domain or a unix socket.  You should always store
        the raw address in the `.address` field.

        Then it should be duplicated to `.ip` or `.domain`, depending on which one
        it is.'
      ignore_above: 1024
      level: extended
      name: address
      type: keyword
    - description: Unique number allocated to the autonomous system. The autonomous
        system number (ASN) uniquely identifies each network on the Internet.
      example: 15169
      level: extended
      name: as.number
      type: long
    - description: Organization name.
      example: Google LLC
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: as.organization.name
      type: keyword
    - description: Bytes sent from the source to the destination.
      example: 184
      format: bytes
      level: core
      name: bytes
      type: long
    - description: Source domain.
      ignore_above: 1024
      level: core
      name: domain
      type: keyword
    - description: City name.
      example: Montreal
      ignore_above: 1024
      level: core
      name: geo.city_name
      type: keyword
    - description: Name of the continent.
      example: North America
      ignore_above: 1024
      level: core
      name: geo.continent_name
      type: keyword
    - description: Country ISO code.
      example: CA
      ignore_above: 1024
      level: core
      name: geo.country_iso_code
      type: keyword
    - description: Country name.
      example: Canada
      ignore_above: 1024
      level: core
      name: geo.country_name
      type: keyword
    - description: Longitude and latitude.
      example: '{ "lon": -73.614830, "lat": 45.505918 }'
      level: core
      name: geo.location
      type: geo_point
    - description: 'User-defined description of a location, at the level of granularity
        they care about.

        Could be the name of their data centers, the floor number, if this describes
        a local physical entity, city names.

        Not typically used in automated geolocation.'
      example: boston-dc
      ignore_above: 1024
      level: extended
      name: geo.name
      type: keyword
    - description: Region ISO code.
      example: CA-QC
      ignore_above: 1024
      level: core
      name: geo.region_iso_code
      type: keyword
    - description: Region name.
      example: Quebec
      ignore_above: 1024
      level: core
      name: geo.region_name
      type: keyword
    - description: 'IP address of the source.

        Can be one or multiple IPv4 or IPv6 addresses.'
      level: core
      name: ip
      type: ip
    - description: MAC address of the source.
      ignore_above: 1024
      level: core
      name: mac
      type: keyword
    - description: 'Translated ip of source based NAT sessions (e.g. internal client
        to internet)

        Typically connections traversing load balancers, firewalls, or routers.'
      level: extended
      name: nat.ip
      type: ip
    - description: 'Translated port of source based NAT sessions. (e.g. internal client
        to internet)

        Typically used with load balancers, firewalls, or routers.'
      format: string
      level: extended
      name: nat.port
      type: long
    - description: Packets sent from the source to the destination.
      example: 12
      level: core
      name: packets
      type: long
    - description: Port of the source.
      format: string
      level: core
      name: port
      type: long
    - description: 'The highest registered source domain, stripped of the subdomain.

        For example, the registered domain for "foo.google.com" is "google.com".

        This value can be determined precisely with a list like the public suffix
        list (http://publicsuffix.org). Trying to approximate this by simply taking
        the last two labels will not work well for TLDs such as "co.uk".'
      example: google.com
      ignore_above: 1024
      level: extended
      name: registered_domain
      type: keyword
    - description: 'The effective top level domain (eTLD), also known as the domain
        suffix, is the last part of the domain name. For example, the top level domain
        for google.com is "com".

        This value can be determined precisely with a list like the public suffix
        list (http://publicsuffix.org). Trying to approximate this by simply taking
        the last label will not work well for effective TLDs such as "co.uk".'
      example: co.uk
      ignore_above: 1024
      level: extended
      name: top_level_domain
      type: keyword
    - description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
      ignore_above: 1024
      level: extended
      name: user.domain
      type: keyword
    - description: User email address.
      ignore_above: 1024
      level: extended
      name: user.email
      type: keyword
    - description: User's full name, if available.
      example: Albert Einstein
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: user.full_name
      type: keyword
    - description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      ignore_above: 1024
      level: extended
      name: user.group.domain
      type: keyword
    - description: Unique identifier for the group on the system/platform.
      ignore_above: 1024
      level: extended
      name: user.group.id
      type: keyword
    - description: Name of the group.
      ignore_above: 1024
      level: extended
      name: user.group.name
      type: keyword
    - description: 'Unique user hash to correlate information for a user in anonymized
        form.

        Useful if `user.id` or `user.name` contain confidential information and cannot
        be used.'
      ignore_above: 1024
      level: extended
      name: user.hash
      type: keyword
    - description: Unique identifiers of the user.
      ignore_above: 1024
      level: core
      name: user.id
      type: keyword
    - description: Short name or login of the user.
      example: albert
      ignore_above: 1024
      level: core
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: user.name
      type: keyword
    group: 2
    name: source
    title: Source
    type: group
  - description: 'Fields to classify events and alerts according to a threat taxonomy
      such as the Mitre ATT&CK framework.

      These fields are for users to classify alerts from all of their sources (e.g.
      IDS, NGFW, etc.) within a common taxonomy. The threat.tactic.* are meant to
      capture the high level category of the threat (e.g. "impact"). The threat.technique.*
      fields are meant to capture which kind of approach is used by this detected
      threat, to accomplish the goal (e.g. "endpoint denial of service").'
    fields:
    - description: Name of the threat framework used to further categorize and classify
        the tactic and technique of the reported threat. Framework classification
        can be provided by detecting systems, evaluated at ingest time, or retrospectively
        tagged to events.
      example: MITRE ATT&CK
      ignore_above: 1024
      level: extended
      name: framework
      type: keyword
    - description: The id of tactic used by this threat. You can use the Mitre ATT&CK
        Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/tactics/TA0040/
        )
      example: TA0040
      ignore_above: 1024
      level: extended
      name: tactic.id
      type: keyword
    - description: Name of the type of tactic used by this threat. You can use the
        Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/tactics/TA0040/
        )
      example: impact
      ignore_above: 1024
      level: extended
      name: tactic.name
      type: keyword
    - description: The reference url of tactic used by this threat. You can use the
        Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/tactics/TA0040/
        )
      example: https://attack.mitre.org/tactics/TA0040/
      ignore_above: 1024
      level: extended
      name: tactic.reference
      type: keyword
    - description: The id of technique used by this tactic. You can use the Mitre
        ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/techniques/T1499/
        )
      example: T1499
      ignore_above: 1024
      level: extended
      name: technique.id
      type: keyword
    - description: The name of technique used by this tactic. You can use the Mitre
        ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/techniques/T1499/
        )
      example: endpoint denial of service
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: technique.name
      type: keyword
    - description: The reference url of technique used by this tactic. You can use
        the Mitre ATT&CK Matrix Tactic categorization, for example. (ex. https://attack.mitre.org/techniques/T1499/
        )
      example: https://attack.mitre.org/techniques/T1499/
      ignore_above: 1024
      level: extended
      name: technique.reference
      type: keyword
    group: 2
    name: threat
    title: Threat
    type: group
  - description: Fields related to a TLS connection. These fields focus on the TLS
      protocol itself and intentionally avoids in-depth analysis of the related x.509
      certificate files.
    fields:
    - default_field: false
      description: String indicating the cipher used during the current connection.
      example: TLS_ECDHE_RSA_WITH_AES_128_CBC_SHA256
      ignore_above: 1024
      level: extended
      name: cipher
      type: keyword
    - default_field: false
      description: PEM-encoded stand-alone certificate offered by the client. This
        is usually mutually-exclusive of `client.certificate_chain` since this value
        also exists in that list.
      example: MII...
      ignore_above: 1024
      level: extended
      name: client.certificate
      type: keyword
    - default_field: false
      description: Array of PEM-encoded certificates that make up the certificate
        chain offered by the client. This is usually mutually-exclusive of `client.certificate`
        since that value should be the first certificate in the chain.
      example:
      - MII...
      - MII...
      ignore_above: 1024
      level: extended
      name: client.certificate_chain
      type: keyword
    - default_field: false
      description: Certificate fingerprint using the MD5 digest of DER-encoded version
        of certificate offered by the client. For consistency with other hash values,
        this value should be formatted as an uppercase hash.
      example: 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC
      ignore_above: 1024
      level: extended
      name: client.hash.md5
      type: keyword
    - default_field: false
      description: Certificate fingerprint using the SHA1 digest of DER-encoded version
        of certificate offered by the client. For consistency with other hash values,
        this value should be formatted as an uppercase hash.
      example: 9E393D93138888D288266C2D915214D1D1CCEB2A
      ignore_above: 1024
      level: extended
      name: client.hash.sha1
      type: keyword
    - default_field: false
      description: Certificate fingerprint using the SHA256 digest of DER-encoded
        version of certificate offered by the client. For consistency with other hash
        values, this value should be formatted as an uppercase hash.
      example: 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0
      ignore_above: 1024
      level: extended
      name: client.hash.sha256
      type: keyword
    - default_field: false
      description: Distinguished name of subject of the issuer of the x.509 certificate
        presented by the client.
      example: CN=MyDomain Root CA, OU=Infrastructure Team, DC=mydomain, DC=com
      ignore_above: 1024
      level: extended
      name: client.issuer
      type: keyword
    - default_field: false
      description: A hash that identifies clients based on how they perform an SSL/TLS
        handshake.
      example: d4e5b18d6b55c71272893221c96ba240
      ignore_above: 1024
      level: extended
      name: client.ja3
      type: keyword
    - default_field: false
      description: Date/Time indicating when client certificate is no longer considered
        valid.
      example: '2021-01-01T00:00:00.000Z'
      level: extended
      name: client.not_after
      type: date
    - default_field: false
      description: Date/Time indicating when client certificate is first considered
        valid.
      example: '1970-01-01T00:00:00.000Z'
      level: extended
      name: client.not_before
      type: date
    - default_field: false
      description: Also called an SNI, this tells the server which hostname to which
        the client is attempting to connect. When this value is available, it should
        get copied to `destination.domain`.
      example: www.elastic.co
      ignore_above: 1024
      level: extended
      name: client.server_name
      type: keyword
    - default_field: false
      description: Distinguished name of subject of the x.509 certificate presented
        by the client.
      example: CN=myclient, OU=Documentation Team, DC=mydomain, DC=com
      ignore_above: 1024
      level: extended
      name: client.subject
      type: keyword
    - default_field: false
      description: Array of ciphers offered by the client during the client hello.
      example:
      - TLS_ECDHE_RSA_WITH_AES_256_GCM_SHA384
      - TLS_ECDHE_ECDSA_WITH_AES_256_GCM_SHA384
      - '...'
      ignore_above: 1024
      level: extended
      name: client.supported_ciphers
      type: keyword
    - default_field: false
      description: String indicating the curve used for the given cipher, when applicable.
      example: secp256r1
      ignore_above: 1024
      level: extended
      name: curve
      type: keyword
    - default_field: false
      description: Boolean flag indicating if the TLS negotiation was successful and
        transitioned to an encrypted tunnel.
      level: extended
      name: established
      type: boolean
    - default_field: false
      description: String indicating the protocol being tunneled. Per the values in
        the IANA registry (https://www.iana.org/assignments/tls-extensiontype-values/tls-extensiontype-values.xhtml#alpn-protocol-ids),
        this string should be lower case.
      example: http/1.1
      ignore_above: 1024
      level: extended
      name: next_protocol
      type: keyword
    - default_field: false
      description: Boolean flag indicating if this TLS connection was resumed from
        an existing TLS negotiation.
      level: extended
      name: resumed
      type: boolean
    - default_field: false
      description: PEM-encoded stand-alone certificate offered by the server. This
        is usually mutually-exclusive of `server.certificate_chain` since this value
        also exists in that list.
      example: MII...
      ignore_above: 1024
      level: extended
      name: server.certificate
      type: keyword
    - default_field: false
      description: Array of PEM-encoded certificates that make up the certificate
        chain offered by the server. This is usually mutually-exclusive of `server.certificate`
        since that value should be the first certificate in the chain.
      example:
      - MII...
      - MII...
      ignore_above: 1024
      level: extended
      name: server.certificate_chain
      type: keyword
    - default_field: false
      description: Certificate fingerprint using the MD5 digest of DER-encoded version
        of certificate offered by the server. For consistency with other hash values,
        this value should be formatted as an uppercase hash.
      example: 0F76C7F2C55BFD7D8E8B8F4BFBF0C9EC
      ignore_above: 1024
      level: extended
      name: server.hash.md5
      type: keyword
    - default_field: false
      description: Certificate fingerprint using the SHA1 digest of DER-encoded version
        of certificate offered by the server. For consistency with other hash values,
        this value should be formatted as an uppercase hash.
      example: 9E393D93138888D288266C2D915214D1D1CCEB2A
      ignore_above: 1024
      level: extended
      name: server.hash.sha1
      type: keyword
    - default_field: false
      description: Certificate fingerprint using the SHA256 digest of DER-encoded
        version of certificate offered by the server. For consistency with other hash
        values, this value should be formatted as an uppercase hash.
      example: 0687F666A054EF17A08E2F2162EAB4CBC0D265E1D7875BE74BF3C712CA92DAF0
      ignore_above: 1024
      level: extended
      name: server.hash.sha256
      type: keyword
    - default_field: false
      description: Subject of the issuer of the x.509 certificate presented by the
        server.
      example: CN=MyDomain Root CA, OU=Infrastructure Team, DC=mydomain, DC=com
      ignore_above: 1024
      level: extended
      name: server.issuer
      type: keyword
    - default_field: false
      description: A hash that identifies servers based on how they perform an SSL/TLS
        handshake.
      example: 394441ab65754e2207b1e1b457b3641d
      ignore_above: 1024
      level: extended
      name: server.ja3s
      type: keyword
    - default_field: false
      description: Timestamp indicating when server certificate is no longer considered
        valid.
      example: '2021-01-01T00:00:00.000Z'
      level: extended
      name: server.not_after
      type: date
    - default_field: false
      description: Timestamp indicating when server certificate is first considered
        valid.
      example: '1970-01-01T00:00:00.000Z'
      level: extended
      name: server.not_before
      type: date
    - default_field: false
      description: Subject of the x.509 certificate presented by the server.
      example: CN=www.mydomain.com, OU=Infrastructure Team, DC=mydomain, DC=com
      ignore_above: 1024
      level: extended
      name: server.subject
      type: keyword
    - default_field: false
      description: Numeric part of the version parsed from the original string.
      example: '1.2'
      ignore_above: 1024
      level: extended
      name: version
      type: keyword
    - default_field: false
      description: Normalized lowercase protocol name parsed from original string.
      example: tls
      ignore_above: 1024
      level: extended
      name: version_protocol
      type: keyword
    group: 2
    name: tls
    title: TLS
    type: group
  - description: Distributed tracing makes it possible to analyze performance throughout
      a microservice architecture all in one view. This is accomplished by tracing
      all of the requests - from the initial web request in the front-end service
      - to queries made through multiple back-end services.
    fields:
    - description: 'Unique identifier of the trace.

        A trace groups multiple events like transactions that belong together. For
        example, a user request handled by multiple inter-connected services.'
      example: 4bf92f3577b34da6a3ce929d0e0e4736
      ignore_above: 1024
      level: extended
      name: trace.id
      type: keyword
    - description: 'Unique identifier of the transaction.

        A transaction is the highest level of work measured within a service, such
        as a request to a server.'
      example: 00f067aa0ba902b7
      ignore_above: 1024
      level: extended
      name: transaction.id
      type: keyword
    group: 2
    name: tracing
    title: Tracing
    type: group
  - description: URL fields provide support for complete or partial URLs, and supports
      the breaking down into scheme, domain, path, and so on.
    fields:
    - description: 'Domain of the url, such as "www.elastic.co".

        In some cases a URL may refer to an IP and/or port directly, without a domain
        name. In this case, the IP address would go to the `domain` field.'
      example: www.elastic.co
      ignore_above: 1024
      level: extended
      name: domain
      type: keyword
    - description: 'The field contains the file extension from the original request
        url.

        The file extension is only set if it exists, as not every url has a file extension.

        The leading period must not be included. For example, the value must be "png",
        not ".png".'
      example: png
      ignore_above: 1024
      level: extended
      name: extension
      type: keyword
    - description: 'Portion of the url after the `#`, such as "top".

        The `#` is not part of the fragment.'
      ignore_above: 1024
      level: extended
      name: fragment
      type: keyword
    - description: If full URLs are important to your use case, they should be stored
        in `url.full`, whether this field is reconstructed or present in the event
        source.
      example: https://www.elastic.co:443/search?q=elasticsearch#top
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: full
      type: keyword
    - description: 'Unmodified original url as seen in the event source.

        Note that in network monitoring, the observed URL may be a full URL, whereas
        in access logs, the URL is often just represented as a path.

        This field is meant to represent the URL as it was observed, complete or not.'
      example: https://www.elastic.co:443/search?q=elasticsearch#top or /search?q=elasticsearch
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: original
      type: keyword
    - description: Password of the request.
      ignore_above: 1024
      level: extended
      name: password
      type: keyword
    - description: Path of the request, such as "/search".
      ignore_above: 1024
      level: extended
      name: path
      type: keyword
    - description: Port of the request, such as 443.
      example: 443
      format: string
      level: extended
      name: port
      type: long
    - description: 'The query field describes the query string of the request, such
        as "q=elasticsearch".

        The `?` is excluded from the query string. If a URL contains no `?`, there
        is no query field. If there is a `?` but no query, the query field exists
        with an empty string. The `exists` query can be used to differentiate between
        the two cases.'
      ignore_above: 1024
      level: extended
      name: query
      type: keyword
    - description: 'The highest registered url domain, stripped of the subdomain.

        For example, the registered domain for "foo.google.com" is "google.com".

        This value can be determined precisely with a list like the public suffix
        list (http://publicsuffix.org). Trying to approximate this by simply taking
        the last two labels will not work well for TLDs such as "co.uk".'
      example: google.com
      ignore_above: 1024
      level: extended
      name: registered_domain
      type: keyword
    - description: 'Scheme of the request, such as "https".

        Note: The `:` is not part of the scheme.'
      example: https
      ignore_above: 1024
      level: extended
      name: scheme
      type: keyword
    - description: 'The effective top level domain (eTLD), also known as the domain
        suffix, is the last part of the domain name. For example, the top level domain
        for google.com is "com".

        This value can be determined precisely with a list like the public suffix
        list (http://publicsuffix.org). Trying to approximate this by simply taking
        the last label will not work well for effective TLDs such as "co.uk".'
      example: co.uk
      ignore_above: 1024
      level: extended
      name: top_level_domain
      type: keyword
    - description: Username of the request.
      ignore_above: 1024
      level: extended
      name: username
      type: keyword
    group: 2
    name: url
    title: URL
    type: group
  - description: 'The user fields describe information about the user that is relevant
      to the event.

      Fields can have one entry or multiple entries. If a user has more than one id,
      provide an array that includes all of them.'
    fields:
    - description: 'Name of the directory the user is a member of.

        For example, an LDAP or Active Directory domain name.'
      ignore_above: 1024
      level: extended
      name: domain
      type: keyword
    - description: User email address.
      ignore_above: 1024
      level: extended
      name: email
      type: keyword
    - description: User's full name, if available.
      example: Albert Einstein
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: full_name
      type: keyword
    - description: 'Name of the directory the group is a member of.

        For example, an LDAP or Active Directory domain name.'
      ignore_above: 1024
      level: extended
      name: group.domain
      type: keyword
    - description: Unique identifier for the group on the system/platform.
      ignore_above: 1024
      level: extended
      name: group.id
      type: keyword
    - description: Name of the group.
      ignore_above: 1024
      level: extended
      name: group.name
      type: keyword
    - description: 'Unique user hash to correlate information for a user in anonymized
        form.

        Useful if `user.id` or `user.name` contain confidential information and cannot
        be used.'
      ignore_above: 1024
      level: extended
      name: hash
      type: keyword
    - description: Unique identifiers of the user.
      ignore_above: 1024
      level: core
      name: id
      type: keyword
    - description: Short name or login of the user.
      example: albert
      ignore_above: 1024
      level: core
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: name
      type: keyword
    group: 2
    name: user
    title: User
    type: group
  - description: 'The user_agent fields normally come from a browser request.

      They often show up in web service logs coming from the parsed user agent string.'
    fields:
    - description: Name of the device.
      example: iPhone
      ignore_above: 1024
      level: extended
      name: device.name
      type: keyword
    - description: Name of the user agent.
      example: Safari
      ignore_above: 1024
      level: extended
      name: name
      type: keyword
    - description: Unparsed user_agent string.
      example: Mozilla/5.0 (iPhone; CPU iPhone OS 12_1 like Mac OS X) AppleWebKit/605.1.15
        (KHTML, like Gecko) Version/12.0 Mobile/15E148 Safari/604.1
      ignore_above: 1024
      level: extended
      multi_fields:
      - name: text
        norms: false
        type: text
      name: original
      type: keyword
    - description: OS family (such as redhat, debian, freebsd, windows).
      example: debian
      ignore_above: 1024
      level: extended
      name: os.family
      type: keyword
    - description: Operating system name, including the version or code name.
      example: Mac OS Mojave
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: os.full
      type: keyword
    - description: Operating system kernel version as a raw string.
      example: 4.4.0-112-generic
      ignore_above: 1024
      level: extended
      name: os.kernel
      type: keyword
    - description: Operating system name, without the version.
      example: Mac OS X
      ignore_above: 1024
      level: extended
      multi_fields:
      - default_field: false
        name: text
        norms: false
        type: text
      name: os.name
      type: keyword
    - description: Operating system platform (such centos, ubuntu, windows).
      example: darwin
      ignore_above: 1024
      level: extended
      name: os.platform
      type: keyword
    - description: Operating system version as a raw string.
      example: 10.14.1
      ignore_above: 1024
      level: extended
      name: os.version
      type: keyword
    - description: Version of the user agent.
      example: 12.0
      ignore_above: 1024
      level: extended
      name: version
      type: keyword
    group: 2
    name: user_agent
    title: User agent
    type: group
  - description: 'The VLAN fields are used to identify 802.1q tag(s) of a packet,
      as well as ingress and egress VLAN associations of an observer in relation to
      a specific packet or connection.

      Network.vlan fields are used to record a single VLAN tag, or the outer tag in
      the case of q-in-q encapsulations, for a packet or connection as observed, typically
      provided by a network sensor (e.g. Zeek, Wireshark) passively reporting on traffic.

      Network.inner VLAN fields are used to report inner q-in-q 802.1q tags (multiple
      802.1q encapsulations) as observed, typically provided by a network sensor  (e.g.
      Zeek, Wireshark) passively reporting on traffic. Network.inner VLAN fields should
      only be used in addition to network.vlan fields to indicate q-in-q tagging.

      Observer.ingress and observer.egress VLAN values are used to record observer
      specific information when observer events contain discrete ingress and egress
      VLAN information, typically provided by firewalls, routers, or load balancers.'
    fields:
    - default_field: false
      description: VLAN ID as reported by the observer.
      example: 10
      ignore_above: 1024
      level: extended
      name: id
      type: keyword
    - default_field: false
      description: Optional VLAN name as reported by the observer.
      example: outside
      ignore_above: 1024
      level: extended
      name: name
      type: keyword
    group: 2
    name: vlan
    title: VLAN
    type: group
  - description: The vulnerability fields describe information about a vulnerability
      that is relevant to an event.
    fields:
    - default_field: false
      description: 'The type of system or architecture that the vulnerability affects.
        These may be platform-specific (for example, Debian or SUSE) or general (for
        example, Database or Firewall). For example (https://qualysguard.qualys.com/qwebhelp/fo_portal/knowledgebase/vulnerability_categories.htm[Qualys
        vulnerability categories])

        This field must be an array.'
      example: '["Firewall"]'
      ignore_above: 1024
      level: extended
      name: category
      type: keyword
    - default_field: false
      description: The classification of the vulnerability scoring system. For example
        (https://www.first.org/cvss/)
      example: CVSS
      ignore_above: 1024
      level: extended
      name: classification
      type: keyword
    - default_field: false
      description: The description of the vulnerability that provides additional context
        of the vulnerability. For example (https://cve.mitre.org/about/faqs.html#cve_entry_descriptions_created[Common
        Vulnerabilities and Exposure CVE description])
      example: In macOS before 2.12.6, there is a vulnerability in the RPC...
      ignore_above: 1024
      level: extended
      multi_fields:
      - name: text
        norms: false
        type: text
      name: description
      type: keyword
    - default_field: false
      description: The type of identifier used for this vulnerability. For example
        (https://cve.mitre.org/about/)
      example: CVE
      ignore_above: 1024
      level: extended
      name: enumeration
      type: keyword
    - default_field: false
      description: The identification (ID) is the number portion of a vulnerability
        entry. It includes a unique identification number for the vulnerability. For
        example (https://cve.mitre.org/about/faqs.html#what_is_cve_id)[Common Vulnerabilities
        and Exposure CVE ID]
      example: CVE-2019-00001
      ignore_above: 1024
      level: extended
      name: id
      type: keyword
    - default_field: false
      description: A resource that provides additional information, context, and mitigations
        for the identified vulnerability.
      example: https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-6111
      ignore_above: 1024
      level: extended
      name: reference
      type: keyword
    - default_field: false
      description: The report or scan identification number.
      example: 20191018.0001
      ignore_above: 1024
      level: extended
      name: report_id
      type: keyword
    - default_field: false
      description: The name of the vulnerability scanner vendor.
      example: Tenable
      ignore_above: 1024
      level: extended
      name: scanner.vendor
      type: keyword
    - default_field: false
      description: 'Scores can range from 0.0 to 10.0, with 10.0 being the most severe.

        Base scores cover an assessment for exploitability metrics (attack vector,
        complexity, privileges, and user interaction), impact metrics (confidentiality,
        integrity, and availability), and scope. For example (https://www.first.org/cvss/specification-document)'
      example: 5.5
      level: extended
      name: score.base
      type: float
    - default_field: false
      description: 'Scores can range from 0.0 to 10.0, with 10.0 being the most severe.

        Environmental scores cover an assessment for any modified Base metrics, confidentiality,
        integrity, and availability requirements. For example (https://www.first.org/cvss/specification-document)'
      example: 5.5
      level: extended
      name: score.environmental
      type: float
    - default_field: false
      description: 'Scores can range from 0.0 to 10.0, with 10.0 being the most severe.

        Temporal scores cover an assessment for code maturity, remediation level,
        and confidence. For example (https://www.first.org/cvss/specification-document)'
      level: extended
      name: score.temporal
      type: float
    - default_field: false
      description: 'The National Vulnerability Database (NVD) provides qualitative
        severity rankings of "Low", "Medium", and "High" for CVSS v2.0 base score
        ranges in addition to the severity ratings for CVSS v3.0 as they are defined
        in the CVSS v3.0 specification.

        CVSS is owned and managed by FIRST.Org, Inc. (FIRST), a US-based non-profit
        organization, whose mission is to help computer security incident response
        teams across the world. For example (https://nvd.nist.gov/vuln-metrics/cvss)'
      example: 2.0
      ignore_above: 1024
      level: extended
      name: score.version
      type: keyword
    - default_field: false
      description: The severity of the vulnerability can help with metrics and internal
        prioritization regarding remediation. For example (https://nvd.nist.gov/vuln-metrics/cvss)
      example: Critical
      ignore_above: 1024
      level: extended
      name: severity
      type: keyword
    group: 2
    name: vulnerability
    title: Vulnerability
    type: group
  key: ecs
  title: ECS
- anchor: beat-common
  description: 'Contains common beat fields available in all event types.

    '
  fields:
  - description: 'Deprecated - use agent.name or agent.id to identify an agent. Hostname
      of the agent.

      '
    name: agent.hostname
    type: keyword
  - migration: true
    name: beat.timezone
    path: event.timezone
    type: alias
  - description: 'Contains user configurable fields.

      '
    name: fields
    object_type: keyword
    type: object
  - migration: true
    name: beat.name
    path: host.name
    type: alias
  - migration: true
    name: beat.hostname
    path: agent.hostname
    type: alias
  - description: Time series instance id
    name: timeseries.instance
    type: keyword
  key: beat
  title: Beat
- description: 'Metadata from cloud providers added by the add_cloud_metadata processor.

    '
  fields:
  - description: 'Name of the project in Google Cloud.

      '
    example: project-x
    name: cloud.project.id
  - description: 'Image ID for the cloud instance.

      '
    example: ami-abcd1234
    name: cloud.image.id
  - migration: true
    name: meta.cloud.provider
    path: cloud.provider
    type: alias
  - migration: true
    name: meta.cloud.instance_id
    path: cloud.instance.id
    type: alias
  - migration: true
    name: meta.cloud.instance_name
    path: cloud.instance.name
    type: alias
  - migration: true
    name: meta.cloud.machine_type
    path: cloud.machine.type
    type: alias
  - migration: true
    name: meta.cloud.availability_zone
    path: cloud.availability_zone
    type: alias
  - migration: true
    name: meta.cloud.project_id
    path: cloud.project.id
    type: alias
  - migration: true
    name: meta.cloud.region
    path: cloud.region
    type: alias
  key: cloud
  title: Cloud provider metadata
- anchor: docker-processor
  description: 'Docker stats collected from Docker.

    '
  fields:
  - fields:
    - migration: true
      name: container.id
      path: container.id
      type: alias
    - migration: true
      name: container.image
      path: container.image.name
      type: alias
    - migration: true
      name: container.name
      path: container.name
      type: alias
    - description: 'Image labels.

        '
      name: container.labels
      object_type: keyword
      type: object
    name: docker
    type: group
  key: docker
  short_config: false
  title: Docker
- anchor: host-processor
  description: 'Info collected for the host machine.

    '
  fields:
  - fields:
    - description: 'If the host is a container.

        '
      name: containerized
      type: boolean
    - description: 'OS build information.

        '
      example: 18D109
      name: os.build
      type: keyword
    - description: 'OS codename, if any.

        '
      example: stretch
      name: os.codename
      type: keyword
    name: host
    type: group
  key: host
  title: Host
- description: 'Process metadata fields

    '
  fields:
  - fields:
    - migration: true
      name: exe
      path: process.executable
      type: alias
    name: process
    type: group
  key: process
  title: Process
- description: 'Contains common fields available in all event types.

    '
  fields:
  - description: 'The name of the module that generated the event.

      '
    migration: true
    name: metricset.module
    path: event.module
    type: alias
  - description: 'The name of the metricset that generated the event.

      '
    name: metricset.name
  - description: 'Current data collection period for this event in milliseconds.

      '
    name: metricset.period
    type: integer
  - description: 'Address of the machine where the service is running. This field
      may not be present when the data was collected locally.

      '
    name: service.address
  - description: 'Host name of the machine where the service is running.

      '
    name: service.hostname
  - description: 'The document type. Always set to "doc".

      '
    example: metricsets
    name: type
    required: true
  - description: the location of the systemd unit path
    name: systemd.fragment_path
    type: keyword
  - description: the unit name of the systemd service
    name: systemd.unit
    type: keyword
  key: common
  title: Common
- description: 'Beat module

    '
  fields:
  - description: ''
    fields:
    - description: 'Beat ID.

        '
      name: id
      type: keyword
    - description: 'Beat type.

        '
      name: type
      type: keyword
    - description: 'Beat state

        '
      fields:
      - description: 'Is central management enabled?

          '
        name: management.enabled
        type: boolean
      - description: 'Number of modules enabled

          '
        name: module.count
        type: integer
      - description: 'Name of output used by Beat

          '
        name: output.name
        type: keyword
      - description: 'Name of queue being used by Beat

          '
        name: queue.name
        type: keyword
      name: state
      release: ga
      type: group
    - description: 'Beat stats

        '
      fields:
      - description: 'Beat uptime

          '
        name: uptime.ms
        type: long
      - description: 'Number of goroutines running in Beat

          '
        name: runtime.goroutines
        type: long
      - description: 'Fields common to all Beats

          '
        fields:
        - description: 'Output stats

            '
          fields:
          - description: 'Type of output

              '
            name: type
            type: keyword
          - description: 'Event counters

              '
            fields:
            - description: 'Number of events acknowledged

                '
              name: acked
              type: long
            - description: 'Number of active events

                '
              name: active
              type: long
            - description: 'Number of event batches

                '
              name: batches
              type: long
            - description: 'Number of events dropped

                '
              name: dropped
              type: long
            - description: 'Number of events duplicated

                '
              name: duplicates
              type: long
            - description: 'Number of events failed

                '
              name: failed
              type: long
            - description: 'Number of too many events

                '
              name: toomany
              type: long
            - description: 'Total number of events

                '
              name: total
              type: long
            name: events
            type: group
          - description: 'Read stats

              '
            fields:
            - description: 'Number of bytes read

                '
              name: bytes
              type: long
            - description: 'Number of read errors

                '
              name: errors
              type: long
            name: read
            type: group
          - description: 'Write stats

              '
            fields:
            - description: 'Number of bytes written

                '
              name: bytes
              type: long
            - description: 'Number of write errors

                '
              name: errors
              type: long
            name: write
            type: group
          name: output
          type: group
        name: libbeat
        type: group
      name: stats
      release: ga
      type: group
    name: beat
    type: group
  key: beat
  release: ga
  settings:
  - ssl
  - http
  short_config: false
  title: Beat
- description: 'Consul module

    '
  fields:
  - fields:
    - description: 'Agent Metricset fetches metrics information from a Consul instance
        running as Agent

        '
      fields:
      - fields:
        - description: Overall health of the local server cluster
          name: healthy
          type: boolean
        name: autopilot
        type: group
      - description: Runtime related metrics
        fields:
        - fields:
          - description: Number of bytes of memory obtained from the OS.
            name: bytes
            type: long
          name: sys
          type: group
        - description: Heap objects allocated
          name: malloc_count
          type: long
        - description: Objects allocated on the heap and is a general memory pressure
            indicator. This may burst from time to time but should return to a steady
            state value.
          name: heap_objects
          type: long
        - description: Running goroutines and is a general load pressure indicator.
            This may burst from time to time but should return to a steady state value.
          name: goroutines
          type: long
        - fields:
          - description: Bytes allocated by the Consul process.
            name: bytes
            type: long
          name: alloc
          type: group
        - description: Garbage collector metrics
          fields:
          - description: Garbage collector total executions
            name: runs
            type: long
          - description: Time that the garbage collector has paused the app
            fields:
            - fields:
              - description: Garbage collector pause time in nanoseconds
                name: ns
                type: long
              name: current
              type: group
            - fields:
              - description: Nanoseconds consumed by stop-the-world garbage collection
                  pauses since Consul started.
                name: ns
                type: long
              name: total
              type: group
            name: pause
            type: group
          name: garbage_collector
          type: group
        name: runtime
        type: group
      name: agent
      release: beta
      type: group
    name: consul
    type: group
  key: consul
  release: beta
  title: Consul
- description: 'Docker stats collected from Docker.

    '
  fields:
  - description: 'Information and statistics about docker''s running containers.

      '
    fields:
    - description: 'Docker container metrics.

        '
      fields:
      - description: 'Command that was executed in the Docker container.

          '
        name: command
        type: keyword
      - description: 'Date when the container was created.

          '
        name: created
        type: date
      - description: 'Container status.

          '
        name: status
        type: keyword
      - description: 'Container IP addresses.

          '
        name: ip_addresses
        type: ip
      - description: 'Container size metrics.

          '
        fields:
        - description: 'Total size of all the files in the container.

            '
          name: root_fs
          type: long
        - description: 'Size of the files that have been created or changed since
            creation.

            '
          name: rw
          type: long
        name: size
        type: group
      - description: 'Image tags.

          '
        name: tags
        type: keyword
      name: container
      release: ga
      type: group
    - description: 'Runtime CPU metrics.

        '
      fields:
      - description: 'Percentage of time in kernel space.

          '
        format: percent
        name: kernel.pct
        type: scaled_float
      - description: 'Percentage of time in kernel space normalized by the number
          of CPU cores.

          '
        format: percent
        name: kernel.norm.pct
        type: scaled_float
      - description: 'CPU ticks in kernel space.

          '
        name: kernel.ticks
        type: long
      - description: 'Percentage of total CPU time in the system.

          '
        format: percent
        name: system.pct
        type: scaled_float
      - description: 'Percentage of total CPU time in the system normalized by the
          number of CPU cores.

          '
        format: percent
        name: system.norm.pct
        type: scaled_float
      - description: 'CPU system ticks.

          '
        name: system.ticks
        type: long
      - description: 'Percentage of time in user space.

          '
        format: percent
        name: user.pct
        type: scaled_float
      - description: 'Percentage of time in user space normalized by the number of
          CPU cores.

          '
        format: percent
        name: user.norm.pct
        type: scaled_float
      - description: 'CPU ticks in user space.

          '
        name: user.ticks
        type: long
      - description: 'Total CPU usage.

          '
        format: percent
        name: total.pct
        type: scaled_float
      - description: 'Total CPU usage normalized by the number of CPU cores.

          '
        format: percent
        name: total.norm.pct
        type: scaled_float
      - description: 'Percentage of CPU time in this core.

          '
        format: percent
        name: core.*.pct
        object_type: scaled_float
        type: object
      - description: 'Percentage of CPU time in this core, normalized by the number
          of CPU cores.

          '
        format: percent
        name: core.*.norm.pct
        object_type: scaled_float
        type: object
      - description: 'Number of CPU ticks in this core.

          '
        name: core.*.ticks
        object_type: long
        type: object
      name: cpu
      release: ga
      type: group
    - description: 'Disk I/O metrics.

        '
      fields:
      - description: 'Accumulated reads during the life of the container

          '
        fields:
        - description: 'Number of reads during the life of the container

            '
          name: ops
          type: long
        - description: 'Bytes read during the life of the container

            '
          format: bytes
          name: bytes
          type: long
        - description: 'Number of current reads per second

            '
          name: rate
          type: long
        - description: 'Total time to service IO requests, in nanoseconds

            '
          name: service_time
          type: long
        - description: 'Total time requests spent waiting in queues for service, in
            nanoseconds

            '
          name: wait_time
          type: long
        - description: 'Total number of queued requests

            '
          name: queued
          type: long
        name: read
        type: group
      - deprecated: 6.4
        description: 'Number of current reads per second

          '
        name: reads
        type: scaled_float
      - description: 'Accumulated writes during the life of the container

          '
        fields:
        - description: 'Number of writes during the life of the container

            '
          name: ops
          type: long
        - description: 'Bytes written during the life of the container

            '
          format: bytes
          name: bytes
          type: long
        - description: 'Number of current writes per second

            '
          name: rate
          type: long
        - description: 'Total time to service IO requests, in nanoseconds

            '
          name: service_time
          type: long
        - description: 'Total time requests spent waiting in queues for service, in
            nanoseconds

            '
          name: wait_time
          type: long
        - description: 'Total number of queued requests

            '
          name: queued
          type: long
        name: write
        type: group
      - deprecated: 6.4
        description: 'Number of current writes per second

          '
        name: writes
        type: scaled_float
      - description: 'Accumulated reads and writes during the life of the container

          '
        fields:
        - description: 'Number of I/O operations during the life of the container

            '
          name: ops
          type: long
        - description: 'Bytes read and written during the life of the container

            '
          format: bytes
          name: bytes
          type: long
        - description: 'Number of current operations per second

            '
          name: rate
          type: long
        - description: 'Total time to service IO requests, in nanoseconds

            '
          name: service_time
          type: long
        - description: 'Total time requests spent waiting in queues for service, in
            nanoseconds

            '
          name: wait_time
          type: long
        - description: 'Total number of queued requests

            '
          name: queued
          type: long
        name: summary
        type: group
      - deprecated: 6.4
        description: 'Number of reads and writes per second

          '
        name: total
        type: scaled_float
      name: diskio
      release: ga
      type: group
    - description: 'Docker event

        '
      fields:
      - description: 'Event status

          '
        name: status
        type: keyword
      - description: 'Event id when available

          '
        name: id
        type: keyword
      - description: 'Event source

          '
        name: from
        type: keyword
      - description: 'The type of object emitting the event

          '
        name: type
        type: keyword
      - description: 'The type of event

          '
        name: action
        type: keyword
      - description: 'Actor

          '
        fields:
        - description: 'The ID of the object emitting the event

            '
          name: id
          type: keyword
        - description: 'Various key/value attributes of the object, depending on its
            type

            '
          name: attributes
          object_type: keyword
          type: object
        name: actor
        type: group
      name: event
      release: ga
      type: group
    - description: 'Docker healthcheck metrics.

        Healthcheck data will only be available from docker containers where the docker
        `HEALTHCHECK` instruction has been used to build the docker image.

        '
      fields:
      - description: 'concurent failed check

          '
        name: failingstreak
        type: integer
      - description: 'Healthcheck status code

          '
        name: status
        type: keyword
      - description: 'event fields.

          '
        fields:
        - description: 'Healthcheck end date

            '
          name: end_date
          type: date
        - description: 'Healthcheck start date

            '
          name: start_date
          type: date
        - description: 'Healthcheck output

            '
          name: output
          type: keyword
        - description: 'Healthcheck status code

            '
          name: exit_code
          type: integer
        name: event
        type: group
      name: healthcheck
      release: ga
      type: group
    - description: 'Docker image metrics.

        '
      fields:
      - description: 'The image layers identifier.

          '
        fields:
        - description: 'Unique image identifier given upon its creation.

            '
          name: current
          type: keyword
        - description: 'Identifier of the image, if it exists, from which the current
            image directly descends.

            '
          name: parent
          type: keyword
        name: id
        type: group
      - description: 'Date and time when the image was created.

          '
        name: created
        type: date
      - description: 'Image size layers.

          '
        fields:
        - description: 'Size of the image.

            '
          name: virtual
          type: long
        - description: 'Total size of the all cached images associated to the current
            image.

            '
          name: regular
          type: long
        name: size
        type: group
      - description: 'Image labels.

          '
        name: labels
        object_type: keyword
        type: object
      - description: 'Image tags.

          '
        name: tags
        type: keyword
      name: image
      release: ga
      type: group
    - description: 'Info metrics based on https://docs.docker.com/engine/reference/api/docker_remote_api_v1.24/#/display-system-wide-information.

        '
      fields:
      - description: 'Overall container stats.

          '
        fields:
        - description: 'Total number of paused containers.

            '
          name: paused
          type: long
        - description: 'Total number of running containers.

            '
          name: running
          type: long
        - description: 'Total number of stopped containers.

            '
          name: stopped
          type: long
        - description: 'Total number of existing containers.

            '
          name: total
          type: long
        name: containers
        type: group
      - description: 'Unique Docker host identifier.

          '
        name: id
        type: keyword
      - description: 'Total number of existing images.

          '
        name: images
        type: long
      name: info
      release: ga
      type: group
    - description: 'Memory metrics.

        '
      fields:
      - description: 'Raw memory stats from the cgroups memory.stat interface

          '
        name: stats.*
        object_type: long
        object_type_mapping_type: '*'
        type: object
      - description: 'Committed bytes on Windows

          '
        fields:
        - description: 'Total bytes

            '
          format: bytes
          name: total
          type: long
        - description: 'Peak committed bytes on Windows

            '
          format: bytes
          name: peak
          type: long
        name: commit
        type: group
      - description: 'private working sets on Windows

          '
        format: bytes
        name: private_working_set.total
        type: long
      - description: 'Fail counter.

          '
        name: fail.count
        type: scaled_float
      - description: 'Memory limit.

          '
        format: bytes
        name: limit
        type: long
      - description: 'RSS memory stats.

          '
        fields:
        - description: 'Total memory resident set size.

            '
          format: bytes
          name: total
          type: long
        - description: 'Memory resident set size percentage.

            '
          format: percent
          name: pct
          type: scaled_float
        name: rss
        type: group
      - description: 'Usage memory stats.

          '
        fields:
        - description: 'Max memory usage.

            '
          format: bytes
          name: max
          type: long
        - description: 'Memory usage percentage.

            '
          format: percent
          name: pct
          type: scaled_float
        - description: 'Total memory usage.

            '
          format: bytes
          name: total
          type: long
        name: usage
        type: group
      name: memory
      release: ga
      type: group
    - description: 'Network metrics.

        '
      fields:
      - description: 'Network interface name.

          '
        name: interface
        type: keyword
      - deprecated: 6.4
        description: 'Incoming network stats per second.

          '
        fields:
        - description: 'Total number of incoming bytes.

            '
          format: bytes
          name: bytes
          type: long
        - description: 'Total number of dropped incoming packets.

            '
          name: dropped
          type: scaled_float
        - description: 'Total errors on incoming packets.

            '
          name: errors
          type: long
        - description: 'Total number of incoming packets.

            '
          name: packets
          type: long
        name: in
        type: group
      - deprecated: 6.4
        description: 'Outgoing network stats per second.

          '
        fields:
        - description: 'Total number of outgoing bytes.

            '
          format: bytes
          name: bytes
          type: long
        - description: 'Total number of dropped outgoing packets.

            '
          name: dropped
          type: scaled_float
        - description: 'Total errors on outgoing packets.

            '
          name: errors
          type: long
        - description: 'Total number of outgoing packets.

            '
          name: packets
          type: long
        name: out
        type: group
      - description: 'Incoming network stats since the container started.

          '
        fields:
        - description: 'Total number of incoming bytes.

            '
          format: bytes
          name: bytes
          type: long
        - description: 'Total number of dropped incoming packets.

            '
          name: dropped
          type: long
        - description: 'Total errors on incoming packets.

            '
          name: errors
          type: long
        - description: 'Total number of incoming packets.

            '
          name: packets
          type: long
        name: inbound
        type: group
      - description: 'Outgoing network stats since the container started.

          '
        fields:
        - description: 'Total number of outgoing bytes.

            '
          format: bytes
          name: bytes
          type: long
        - description: 'Total number of dropped outgoing packets.

            '
          name: dropped
          type: long
        - description: 'Total errors on outgoing packets.

            '
          name: errors
          type: long
        - description: 'Total number of outgoing packets.

            '
          name: packets
          type: long
        name: outbound
        type: group
      name: network
      release: ga
      type: group
    name: docker
    type: group
  key: docker
  release: ga
  short_config: false
  title: Docker
- description: 'Elasticsearch module

    '
  fields:
  - description: ''
    fields:
    - description: 'Elasticsearch cluster name.

        '
      name: cluster.name
      type: keyword
    - description: 'Elasticsearch cluster id.

        '
      name: cluster.id
      type: keyword
    - description: 'Elasticsearch state id.

        '
      name: cluster.state.id
      type: keyword
    - description: 'Node ID

        '
      name: node.id
      type: keyword
    - description: 'Node name.

        '
      name: node.name
      type: keyword
    - description: 'Cross-cluster replication stats

        '
      fields:
      - fields:
        - description: 'Name of leader index

            '
          name: index
          type: keyword
        - description: 'Maximum sequence number of operation on the leader shard

            '
          name: max_seq_no
          type: long
        name: leader
        type: group
      - fields:
        - description: 'Name of follower index

            '
          name: index
          type: keyword
        - description: 'Number of the shard within the index

            '
          name: shard.number
          type: long
        - description: 'Number of operations indexed (replicated) into the follower
            shard from the leader shard

            '
          name: operations_written
          type: long
        - description: 'Time, in ms, since the follower last fetched from the leader

            '
          name: time_since_last_read.ms
          type: long
        - description: 'Global checkpoint value on follower shard

            '
          name: global_checkpoint
          type: long
        name: follower
        type: group
      name: ccr
      release: ga
      type: group
    - description: 'Cluster stats

        '
      fields:
      - description: 'Cluster status (green, yellow, red).

          '
        name: status
        type: keyword
      - description: 'Nodes statistics.

          '
        fields:
        - description: 'Total number of nodes in cluster.

            '
          name: count
          type: long
        - description: 'Number of master-eligible nodes in cluster.

            '
          name: master
          type: long
        - description: 'Number of data nodes in cluster.

            '
          name: data
          type: long
        name: nodes
        type: group
      - description: 'Indices statistics.

          '
        fields:
        - description: 'Total number of indices in cluster.

            '
          name: count
          type: long
        - description: 'Shard statistics.

            '
          fields:
          - description: 'Total number of shards in cluster.

              '
            name: count
            type: long
          - description: 'Total number of primary shards in cluster.

              '
            name: primaries
            type: long
          name: shards
          type: group
        - description: 'Memory used for fielddata.

            '
          name: fielddata.memory.bytes
          type: long
        name: indices
        type: group
      name: cluster.stats
      release: ga
      type: group
    - description: 'Enrich stats

        '
      fields:
      - description: 'Number of search requests in the queue.

          '
        name: queue.size
        type: long
      - fields:
        - description: 'Current number of outstanding remote requests.

            '
          name: current
          type: long
        - description: 'Number of outstanding remote requests executed since node
            startup.

            '
          name: total
          type: long
        name: remote_requests
        type: group
      - description: 'Number of search requests that enrich processors have executed
          since node startup.

          '
        name: executed_searches.total
        type: long
      name: enrich
      release: ga
      type: group
    - description: 'index

        '
      fields:
      - description: 'Index name.

          '
        name: name
        type: keyword
      - fields:
        - description: 'Total number of documents in the index.

            '
          name: docs.count
          type: long
        - description: 'Total number of deleted documents in the index.

            '
          name: docs.deleted
          type: long
        - description: 'Total size of the index in bytes.

            '
          format: bytes
          name: store.size.bytes
          type: long
        - description: 'Total number of index segments.

            '
          name: segments.count
          type: long
        - description: 'Total number of memory used by the segments in bytes.

            '
          format: bytes
          name: segments.memory.bytes
          type: long
        name: total
        type: group
      name: index
      release: ga
      type: group
    - description: 'index

        '
      fields:
      - description: 'Shard recovery id.

          '
        name: id
        type: long
      - description: 'Shard recovery type.

          '
        name: type
        type: keyword
      - description: 'True if primary shard.

          '
        name: primary
        type: boolean
      - description: 'Recovery stage.

          '
        name: stage
        type: keyword
      - description: 'Target node id.

          '
        name: target.id
        type: keyword
      - description: 'Target node host address (could be IP address or hostname).

          '
        name: target.host
        type: keyword
      - description: 'Target node name.

          '
        name: target.name
        type: keyword
      - description: 'Source node id.

          '
        name: source.id
        type: keyword
      - description: 'Source node host address (could be IP address or hostname).

          '
        name: source.host
        type: keyword
      - description: 'Source node name.

          '
        name: source.name
        type: keyword
      name: index.recovery
      release: ga
      type: group
    - description: 'index

        '
      fields:
      - fields:
        - description: 'Total number of documents in the index.

            '
          name: docs.count
          type: long
        - description: 'Total number of deleted documents in the index.

            '
          name: docs.deleted
          type: long
        - description: 'Total size of the index in bytes.

            '
          format: bytes
          name: store.size.bytes
          type: long
        - description: 'Total number of index segments.

            '
          name: segments.count
          type: long
        - description: 'Total number of memory used by the segments in bytes.

            '
          format: bytes
          name: segments.memory.bytes
          type: long
        name: primaries
        type: group
      - fields:
        - description: 'Total number of documents in the index.

            '
          name: docs.count
          type: long
        - description: 'Total number of deleted documents in the index.

            '
          name: docs.deleted
          type: long
        - description: 'Total size of the index in bytes.

            '
          format: bytes
          name: store.size.bytes
          type: long
        - description: 'Total number of index segments.

            '
          name: segments.count
          type: long
        - description: 'Total number of memory used by the segments in bytes.

            '
          format: bytes
          name: segments.memory.bytes
          type: long
        name: total
        type: group
      name: index.summary
      release: ga
      type: group
    - description: 'ml

        '
      fields:
      - description: 'Unique ml job id.

          '
        name: id
        type: keyword
      - description: 'Job state.

          '
        name: state
        type: keyword
      - description: 'Processed data events.

          '
        name: data_counts.processed_record_count
        type: long
      - description: 'The number of records with either a missing date field or a
          date that could not be parsed.

          '
        name: data_counts.invalid_date_count
        type: long
      name: ml.job
      release: ga
      type: group
    - description: 'node

        '
      fields:
      - description: 'Node version.

          '
        name: version
        type: keyword
      - description: 'JVM Info.

          '
        fields:
        - description: 'JVM version.

            '
          name: version
          type: keyword
        - description: 'Heap init used by the JVM in bytes.

            '
          format: bytes
          name: memory.heap.init.bytes
          type: long
        - description: 'Heap max used by the JVM in bytes.

            '
          format: bytes
          name: memory.heap.max.bytes
          type: long
        - description: 'Non-Heap init used by the JVM in bytes.

            '
          format: bytes
          name: memory.nonheap.init.bytes
          type: long
        - description: 'Non-Heap max used by the JVM in bytes.

            '
          format: bytes
          name: memory.nonheap.max.bytes
          type: long
        name: jvm
        type: group
      - description: 'If process locked in memory.

          '
        name: process.mlockall
        type: boolean
      name: node
      release: ga
      type: group
    - description: 'node_stats

        '
      fields:
      - description: 'Node indices stats

          '
        fields:
        - description: 'Total number of existing documents.

            '
          name: docs.count
          type: long
        - description: 'Total number of deleted documents.

            '
          name: docs.deleted
          type: long
        - description: 'Total number of segments.

            '
          name: segments.count
          type: long
        - description: 'Total size of segments in bytes.

            '
          format: bytes
          name: segments.memory.bytes
          type: long
        - description: 'Total size of the store in bytes.

            '
          name: store.size.bytes
          type: long
        name: indices
        type: group
      - description: 'JVM memory pool stats

          '
        fields:
        - description: 'Old memory pool stats.

            '
          fields:
          - description: Max bytes.
            format: bytes
            name: max.bytes
            type: long
          - description: Peak bytes.
            format: bytes
            name: peak.bytes
            type: long
          - description: Peak max bytes.
            format: bytes
            name: peak_max.bytes
            type: long
          - description: Used bytes.
            format: bytes
            name: used.bytes
            type: long
          name: old
          type: group
        - description: 'Young memory pool stats.

            '
          fields:
          - description: Max bytes.
            format: bytes
            name: max.bytes
            type: long
          - description: Peak bytes.
            format: bytes
            name: peak.bytes
            type: long
          - description: Peak max bytes.
            format: bytes
            name: peak_max.bytes
            type: long
          - description: Used bytes.
            format: bytes
            name: used.bytes
            type: long
          name: young
          type: group
        - description: 'Survivor memory pool stats.

            '
          fields:
          - description: Max bytes.
            format: bytes
            name: max.bytes
            type: long
          - description: Peak bytes.
            format: bytes
            name: peak.bytes
            type: long
          - description: Peak max bytes.
            format: bytes
            name: peak_max.bytes
            type: long
          - description: Used bytes.
            format: bytes
            name: used.bytes
            type: long
          name: survivor
          type: group
        name: jvm.mem.pools
        type: group
      - description: 'GC collector stats.

          '
        fields:
        - description: 'Old collection gc.

            '
          fields:
          - description: ''
            name: count
            type: long
          - description: ''
            name: ms
            type: long
          name: old.collection
          type: group
        - description: 'Young collection gc.

            '
          fields:
          - description: ''
            name: count
            type: long
          - description: ''
            name: ms
            type: long
          name: young.collection
          type: group
        name: jvm.gc.collectors
        type: group
      - description: 'File system summary

          '
        fields:
        - description: ''
          format: bytes
          name: total.bytes
          type: long
        - description: ''
          format: bytes
          name: free.bytes
          type: long
        - description: ''
          format: bytes
          name: available.bytes
          type: long
        name: fs.summary
        type: group
      name: node.stats
      release: ga
      type: group
    - description: '`cluster.pending_task` contains a pending task description.

        '
      fields:
      - description: 'Insert order

          '
        name: insert_order
        type: long
      - description: 'Priority

          '
        name: priority
        type: long
      - description: 'Source. For example: put-mapping

          '
        name: source
        type: keyword
      - description: 'Time in queue

          '
        name: time_in_queue.ms
        type: long
      name: cluster.pending_task
      release: ga
      type: group
    - description: 'shard fields

        '
      fields:
      - description: 'True if this is the primary shard.

          '
        name: primary
        type: boolean
      - description: 'The number of this shard.

          '
        name: number
        type: long
      - description: 'The state of this shard.

          '
        name: state
        type: keyword
      - description: 'The node the shard was relocated from.

          '
        name: relocating_node.name
        type: keyword
      name: shard
      release: ga
      type: group
    name: elasticsearch
    type: group
  key: elasticsearch
  release: ga
  settings:
  - ssl
  - http
  short_config: false
  title: Elasticsearch
- description: 'envoyproxy module

    '
  fields:
  - description: ''
    fields:
    - description: 'Contains envoy proxy server stats

        '
      fields:
      - fields:
        - description: 'Number of currently active (warmed) clusters

            '
          name: active_clusters
          type: integer
        - description: 'Total clusters added (either via static config or CDS)

            '
          name: cluster_added
          type: integer
        - description: 'Total clusters modified (via CDS)

            '
          name: cluster_modified
          type: integer
        - description: 'Total clusters removed (via CDS)

            '
          name: cluster_removed
          type: integer
        - description: 'Number of currently warming (not active) clusters

            '
          name: warming_clusters
          type: integer
        - description: 'Total cluster updates

            '
          name: cluster_updated
          type: integer
        - description: 'Total cluster updates applied as merged updates

            '
          name: cluster_updated_via_merge
          type: integer
        - description: 'Total merged updates that got cancelled and delivered early

            '
          name: update_merge_cancelled
          type: integer
        - description: 'Total updates which arrived out of a merge window

            '
          name: update_out_of_merge_window
          type: integer
        name: cluster_manager
        type: group
      - fields:
        - description: 'Total number of times internal flush buffers are written to
            a file due to flush timeout

            '
          name: flushed_by_timer
          type: integer
        - description: 'Total number of times a file was failed to be opened

            '
          name: reopen_failed
          type: integer
        - description: 'Total number of times file data is moved to Envoys internal
            flush buffer

            '
          name: write_buffered
          type: integer
        - description: 'Total number of times a file was written

            '
          name: write_completed
          type: integer
        - description: 'Current total size of internal flush buffer in bytes

            '
          name: write_total_buffered
          type: integer
        - description: 'Total number of times an error occurred during a file write
            operation

            '
          name: write_failed
          type: integer
        name: filesystem
        type: group
      - fields:
        - description: 'Total number of load attempts that resulted in an error in
            any layer

            '
          name: load_error
          type: integer
        - description: 'Total number of load attempts that were successful at all
            layers

            '
          name: load_success
          type: integer
        - description: 'Number of keys currently loaded

            '
          name: num_keys
          type: integer
        - description: 'Total number of loads that did use an override directory

            '
          name: override_dir_exists
          type: integer
        - description: 'Total number of loads that did not use an override directory

            '
          name: override_dir_not_exists
          type: integer
        - description: '1 if any admin overrides are active otherwise 0

            '
          name: admin_overrides_active
          type: integer
        - description: 'Total number of times deprecated features were used.

            '
          name: deprecated_feature_use
          type: integer
        - description: 'Number of layers currently active (without loading errors)

            '
          name: num_layers
          type: integer
        name: runtime
        type: group
      - fields:
        - description: 'Total listeners added (either via static config or LDS)

            '
          name: listener_added
          type: integer
        - description: 'Total failed listener object additions to workers

            '
          name: listener_create_failure
          type: integer
        - description: 'Total listener objects successfully added to workers

            '
          name: listener_create_success
          type: integer
        - description: 'Total listeners modified (via LDS)

            '
          name: listener_modified
          type: integer
        - description: 'Total listeners removed (via LDS)

            '
          name: listener_removed
          type: integer
        - description: 'Number of currently active listeners

            '
          name: total_listeners_active
          type: integer
        - description: 'Number of currently draining listeners

            '
          name: total_listeners_draining
          type: integer
        - description: 'Number of currently warming listeners

            '
          name: total_listeners_warming
          type: integer
        - description: 'Total listeners stopped

            '
          name: listener_stopped
          type: integer
        name: listener_manager
        type: group
      - fields:
        - description: 'Total number of times Envoy cannot allocate a statistic due
            to a shortage of shared memory

            '
          name: overflow
          type: integer
        name: stats
        type: group
      - fields:
        - description: 'Number of days until the next certificate being managed will
            expire

            '
          name: days_until_first_cert_expiring
          type: integer
        - description: '1 if the server is not currently draining, 0 otherwise

            '
          name: live
          type: integer
        - description: 'Current amount of allocated memory in bytes

            '
          name: memory_allocated
          type: integer
        - description: 'Current reserved heap size in bytes

            '
          name: memory_heap_size
          type: integer
        - description: 'Total connections of the old Envoy process on hot restart

            '
          name: parent_connections
          type: integer
        - description: 'Total connections of both new and old Envoy processes

            '
          name: total_connections
          type: integer
        - description: 'Current server uptime in seconds

            '
          name: uptime
          type: integer
        - description: 'Integer represented version number based on SCM revision

            '
          name: version
          type: integer
        - name: watchdog_mega_miss
          type: integer
        - name: watchdog_miss
          type: integer
        - description: 'Current hot restart epoch

            '
          name: hot_restart_epoch
          type: integer
        - description: 'Number of worker threads

            '
          name: concurrency
          type: integer
        - name: debug_assertion_failures
          type: integer
        - description: 'Number of messages in dynamic configuration with unknown fields

            '
          name: dynamic_unknown_fields
          type: integer
        - description: 'Current state of the Server

            '
          name: state
          type: integer
        - description: 'Number of messages in static configuration with unknown fields

            '
          name: static_unknown_fields
          type: integer
        - name: stats_recent_lookups
          type: integer
        name: server
        type: group
      - fields:
        - description: 'Total number of connections reset due to the headers being
            larger than Envoy::Http::Http2::ConnectionImpl::StreamImpl::MAX_HEADER_SIZE
            (63k)

            '
          name: header_overflow
          type: integer
        - description: 'Total number of errors where a header callback is called without
            an associated stream. This tracks an unexpected occurrence due to an as
            yet undiagnosed bug

            '
          name: headers_cb_no_stream
          type: integer
        - description: 'Total number of invalid received frames that violated section
            8 of the HTTP/2 spec. This will result in a tx_reset

            '
          name: rx_messaging_error
          type: integer
        - description: 'Total number of reset stream frames received by Envoy

            '
          name: rx_reset
          type: integer
        - description: 'Total number of times an HTTP2 connection is reset due to
            receiving too many headers frames. Envoy currently supports proxying at
            most one header frame for 100-Continue one non-100 response code header
            frame and one frame with trailers

            '
          name: too_many_header_frames
          type: integer
        - description: 'Total number of trailers seen on requests coming from downstream

            '
          name: trailers
          type: integer
        - description: 'Total number of reset stream frames transmitted by Envoy

            '
          name: tx_reset
          type: integer
        name: http2
        type: group
      name: server
      release: ga
      type: group
    name: envoyproxy
    type: group
  key: envoyproxy
  release: ga
  title: Envoyproxy
- description: 'Golang module

    '
  fields:
  - description: ''
    fields:
    - description: 'expvar

        '
      fields:
      - description: 'The cmdline of this Go program start with.

          '
        name: cmdline
        type: keyword
      name: expvar
      release: ga
      type: group
    - description: 'The Go program heap information exposed by expvar.

        '
      fields:
      - description: 'The cmdline of this Go program start with.

          '
        name: cmdline
        type: keyword
      - description: 'Garbage collector summary.

          '
        fields:
        - description: 'Total GC pause duration over lifetime of process.

            '
          fields:
          - description: 'Duration in Ns.

              '
            name: ns
            type: long
          name: total_pause
          type: group
        - description: 'Total number of GC was happened.

            '
          name: total_count
          type: long
        - description: 'Next collection will happen when HeapAlloc > this amount.

            '
          format: bytes
          name: next_gc_limit
          type: long
        - description: 'Fraction of CPU time used by GC.

            '
          name: cpu_fraction
          type: float
        - description: 'Last GC pause durations during the monitoring period.

            '
          fields:
          - description: 'Count of GC pause duration during this collect period.

              '
            name: count
            type: long
          - description: 'Total GC pause duration during this collect period.

              '
            fields:
            - description: 'Duration in Ns.

                '
              name: ns
              type: long
            name: sum
            type: group
          - description: 'Max GC pause duration during this collect period.

              '
            fields:
            - description: 'Duration in Ns.

                '
              name: ns
              type: long
            name: max
            type: group
          - description: 'Average GC pause duration during this collect period.

              '
            fields:
            - description: 'Duration in Ns.

                '
              name: ns
              type: long
            name: avg
            type: group
          name: pause
          type: group
        name: gc
        type: group
      - description: 'Heap summary,which bytes was obtained from system.

          '
        fields:
        - description: 'Total bytes obtained from system (sum of XxxSys below).

            '
          format: bytes
          name: total
          type: long
        - description: 'Via HeapSys, bytes obtained from system. heap_sys = heap_idle
            + heap_inuse.

            '
          format: bytes
          name: obtained
          type: long
        - description: 'Bytes used by stack allocator, and these bytes was obtained
            from system.

            '
          format: bytes
          name: stack
          type: long
        - description: 'Bytes released to the OS.

            '
          format: bytes
          name: released
          type: long
        name: system
        type: group
      - description: 'Heap allocations summary.

          '
        fields:
        - description: 'Number of mallocs.

            '
          name: mallocs
          type: long
        - description: 'Number of frees.

            '
          name: frees
          type: long
        - description: 'Total number of allocated objects.

            '
          name: objects
          type: long
        - description: 'Bytes allocated (even if freed) throughout the lifetime.

            '
          format: bytes
          name: total
          type: long
        - description: 'Bytes allocated and not yet freed (same as Alloc above).

            '
          format: bytes
          name: allocated
          type: long
        - description: 'Bytes in idle spans.

            '
          format: bytes
          name: idle
          type: long
        - description: 'Bytes in non-idle span.

            '
          format: bytes
          name: active
          type: long
        name: allocations
        type: group
      name: heap
      release: ga
      type: group
    name: golang
    type: group
  key: golang
  release: ga
  settings:
  - ssl
  - http
  short_config: false
  title: Golang
- description: 'HAProxy Module

    '
  fields:
  - description: 'HAProxy metrics.

      '
    fields:
    - description: 'General information about HAProxy processes.

        '
      fields:
      - description: 'Number of processes.

          '
        name: processes
        type: long
      - description: 'Process number.

          '
        name: process_num
        type: long
      - description: 'Number of threads.

          '
        name: threads
        type: long
      - description: 'Process ID.

          '
        migration: true
        name: pid
        path: process.pid
        type: alias
      - description: ''
        name: run_queue
        type: long
      - description: 'Number of stopping jobs.

          '
        name: stopping
        type: long
      - description: 'Number of all jobs.

          '
        name: jobs
        type: long
      - description: 'Number of unstoppable jobs.

          '
        name: unstoppable_jobs
        type: long
      - description: 'Number of listeners.

          '
        name: listeners
        type: long
      - description: 'Number of dropped logs.

          '
        name: dropped_logs
        type: long
      - description: 'Number of busy polling.

          '
        name: busy_polling
        type: long
      - description: 'Number of failed resolutions.

          '
        name: failed_resolutions
        type: long
      - description: ''
        name: tasks
        type: long
      - description: 'Current uptime in seconds.

          '
        name: uptime.sec
        type: long
      - description: 'Maximum amount of memory usage in bytes (the ''Memmax_MB'' value
          converted to bytes).

          '
        format: bytes
        name: memory.max.bytes
        type: long
      - fields:
        - fields:
          - description: 'Number of bytes sent out.

              '
            name: total
            type: long
          - description: 'Average bytes output rate.

              '
            name: rate
            type: long
          name: out
          type: group
        name: bytes
        type: group
      - fields:
        - description: 'Number of active peers.

            '
          name: active
          type: long
        - description: 'Number of connected peers.

            '
          name: connected
          type: long
        name: peers
        type: group
      - fields:
        - description: 'Size of the allocated pool.

            '
          name: allocated
          type: long
        - description: 'Number of members used from the allocated pool.

            '
          name: used
          type: long
        - description: 'Number of failed connections to pool members.

            '
          name: failed
          type: long
        name: pool
        type: group
      - description: 'Maximum number of open files for the process.

          '
        name: ulimit_n
        type: long
      - description: ''
        fields:
        - description: ''
          fields:
          - description: ''
            name: in
            type: long
          - description: ''
            name: out
            type: long
          - description: ''
            name: rate_limit
            type: long
          name: bps
          type: group
        name: compress
        type: group
      - description: ''
        fields:
        - description: ''
          fields:
          - description: ''
            name: value
            type: long
          - description: ''
            name: limit
            type: long
          - description: ''
            name: max
            type: long
          name: rate
          type: group
        - description: 'Current connections.

            '
          name: current
          type: long
        - description: 'Total connections.

            '
          name: total
          type: long
        - description: 'Current SSL connections.

            '
          name: ssl.current
          type: long
        - description: 'Total SSL connections.

            '
          name: ssl.total
          type: long
        - description: 'Maximum SSL connections.

            '
          name: ssl.max
          type: long
        - description: 'Maximum connections.

            '
          name: max
          type: long
        - description: ''
          name: hard_max
          type: long
        name: connection
        type: group
      - description: ''
        name: requests.total
        type: long
      - description: ''
        name: sockets.max
        type: long
      - description: ''
        name: requests.max
        type: long
      - description: ''
        fields:
        - description: ''
          name: used
          type: integer
        - description: ''
          name: free
          type: integer
        - description: ''
          name: max
          type: integer
        name: pipes
        type: group
      - description: null
        fields:
        - description: ''
          name: rate.value
          type: integer
        - description: ''
          name: rate.limit
          type: integer
        - description: ''
          name: rate.max
          type: integer
        name: session
        type: group
      - description: null
        fields:
        - description: null
          name: rate.value
          type: integer
        - description: null
          name: rate.limit
          type: integer
        - description: null
          name: rate.max
          type: integer
        - description: null
          fields:
          - description: null
            name: key_rate.value
            type: integer
          - description: null
            name: key_rate.max
            type: integer
          - description: null
            format: percent
            name: session_reuse.pct
            type: scaled_float
          name: frontend
          type: group
        - description: null
          fields:
          - description: null
            name: key_rate.value
            type: integer
          - description: MaxConnRate
            name: key_rate.max
            type: integer
          name: backend
          type: group
        - description: null
          name: cached_lookups
          type: long
        - description: null
          name: cache_misses
          type: long
        name: ssl
        type: group
      - description: ''
        fields:
        - description: ''
          name: value
          type: integer
        - description: ''
          name: max
          type: integer
        name: zlib_mem_usage
        type: group
      - description: ''
        format: percent
        name: idle.pct
        type: scaled_float
      name: info
      release: ga
      type: group
    - description: 'Stats collected from HAProxy processes.

        '
      fields:
      - description: 'Status (UP, DOWN, NOLB, MAINT, or MAINT(via)...).

          '
        name: status
        type: keyword
      - description: 'Total weight (for backends), or server weight (for servers).

          '
        name: weight
        type: long
      - description: 'Total downtime (in seconds). For backends, this value is the
          downtime for the whole backend, not the sum of the downtime for the servers.

          '
        name: downtime
        type: long
      - description: 'Component type (0=frontend, 1=backend, 2=server, or 3=socket/listener).

          '
        name: component_type
        type: integer
      - description: 'Process ID (0 for first instance, 1 for second, and so on).

          '
        migration: true
        name: process_id
        path: process.pid
        type: alias
      - description: 'Service name (FRONTEND for frontend, BACKEND for backend, or
          any name for server/listener).

          '
        name: service_name
        type: keyword
      - description: 'Bytes in.

          '
        format: bytes
        name: in.bytes
        type: long
      - description: 'Bytes out.

          '
        format: bytes
        name: out.bytes
        type: long
      - description: 'Number of seconds since the last UP->DOWN or DOWN->UP transition.

          '
        name: last_change
        type: integer
      - description: 'Current throttle percentage for the server when slowstart is
          active, or no value if slowstart is inactive.

          '
        format: percent
        name: throttle.pct
        type: scaled_float
      - description: 'Total number of times a server was selected, either for new
          sessions, or when re-dispatching. For servers, this field reports the the
          number of times the server was selected.

          '
        name: selected.total
        type: long
      - description: 'ID of the proxy/server if tracking is enabled.

          '
        name: tracked.id
        type: long
      - description: 'Cookie value of the server or the name of the cookie of the
          backend.

          '
        name: cookie
        type: keyword
      - description: 'Load balancing algorithm.

          '
        name: load_balancing_algorithm
        type: keyword
      - fields:
        - description: 'Cumulative number of connections.

            '
          name: total
          type: long
        - description: 'Number of times a connection to a server was retried.

            '
          name: retried
          type: long
        - description: 'Average connect time in ms over the last 1024 requests.

            '
          name: time.avg
          type: long
        - description: 'Number of connections over the last second.

            '
          name: rate
          type: long
        - description: 'Highest value of connection.rate.

            '
          name: rate_max
          type: long
        - description: 'Number of connection establishment attempts.

            '
          name: attempt.total
          type: long
        - description: 'Number of connection reuses.

            '
          name: reuse.total
          type: long
        - fields:
          - description: 'Number of idle connections available for reuse.

              '
            name: total
            type: long
          - description: 'Limit on idle connections available for reuse.

              '
            name: limit
            type: long
          name: idle
          type: group
        - fields:
          - description: 'Number of cache lookups.

              '
            name: lookup.total
            type: long
          - description: 'Number of cache hits.

              '
            name: hits
            type: long
          name: cache
          type: group
        name: connection
        type: group
      - fields:
        - description: "Requests denied because of security concerns.\n\n  * For TCP\
            \ this is because of a matched tcp-request content rule.\n  * For HTTP\
            \ this is because of a matched http-request or tarpit rule.\n"
          name: denied
          type: long
        - description: 'Requests denied because of TCP request connection rules.

            '
          name: denied_by_connection_rules
          type: long
        - description: 'Requests denied because of TCP request session rules.

            '
          name: denied_by_session_rules
          type: long
        - description: 'Current queued requests. For backends, this field reports
            the number of requests queued without a server assigned.

            '
          name: queued.current
          type: long
        - description: 'Maximum value of queued.current.

            '
          name: queued.max
          type: long
        - description: "Request errors. Some of the possible causes are:\n\n  * early\
            \ termination from the client, before the request has been sent\n  * read\
            \ error from the client\n  * client timeout\n  * client closed connection\n\
            \  * various bad requests from the client.\n  * request was tarpitted.\n"
          name: errors
          type: long
        - description: 'Number of times a request was redispatched to another server.
            For servers, this field reports the number of times the server was switched
            away from.

            '
          name: redispatched
          type: long
        - description: 'Number of requests that encountered an error trying to connect
            to a server. For backends, this field reports the sum of the stat for
            all backend servers, plus any connection errors not associated with a
            particular server (such as the backend having no active servers).

            '
          name: connection.errors
          type: long
        - description: ''
          fields:
          - description: 'Number of HTTP requests per second over the last elapsed
              second.

              '
            name: value
            type: long
          - description: 'Maximum number of HTTP requests per second.

              '
            name: max
            type: long
          name: rate
          type: group
        - description: 'Total number of HTTP requests received.

            '
          name: total
          type: long
        - description: 'Number of intercepted requests.

            '
          name: intercepted
          type: long
        name: request
        type: group
      - fields:
        - description: 'Number of response errors. This value includes the number
            of data transfers aborted by the server (haproxy.stat.server.aborted).
            Some other errors are:

            * write errors on the client socket (won''t be counted for the server
            stat) * failure applying filters to the response

            '
          name: errors
          type: long
        - description: 'Average response time in ms over the last 1024 requests (0
            for TCP).

            '
          name: time.avg
          type: long
        - description: 'Responses denied because of security concerns. For HTTP this
            is because of a matched http-request rule, or "option checkcache".

            '
          name: denied
          type: integer
        - description: ''
          fields:
          - description: 'HTTP responses with 1xx code.

              '
            name: 1xx
            type: long
          - description: 'HTTP responses with 2xx code.

              '
            name: 2xx
            type: long
          - description: 'HTTP responses with 3xx code.

              '
            name: 3xx
            type: long
          - description: 'HTTP responses with 4xx code.

              '
            name: 4xx
            type: long
          - description: 'HTTP responses with 5xx code.

              '
            name: 5xx
            type: long
          - description: 'HTTP responses with other codes (protocol error).

              '
            name: other
            type: long
          name: http
          type: group
        name: response
        type: group
      - fields:
        - fields:
          - fields:
            - description: 'Number of failed header rewrite warnings.

                '
              name: total
              type: long
            name: failed
            type: group
          name: rewrite
          type: group
        name: header
        type: group
      - fields:
        - description: 'Number of current sessions.

            '
          name: current
          type: long
        - description: 'Maximum number of sessions.

            '
          name: max
          type: long
        - description: 'Configured session limit.

            '
          name: limit
          type: long
        - description: 'Number of all sessions.

            '
          name: total
          type: long
        - fields:
          - description: 'Number of sessions per second over the last elapsed second.

              '
            name: value
            type: integer
          - description: 'Configured limit on new sessions per second.

              '
            name: limit
            type: integer
          - description: 'Maximum number of new sessions per second.

              '
            name: max
            type: integer
          name: rate
          type: group
        name: session
        type: group
      - description: ''
        fields:
        - description: "Status of the last health check. One of:\n\n  UNK     -> unknown\n\
            \  INI     -> initializing\n  SOCKERR -> socket error\n  L4OK    -> check\
            \ passed on layer 4, no upper layers testing enabled\n  L4TOUT  -> layer\
            \ 1-4 timeout\n  L4CON   -> layer 1-4 connection problem, for example\n\
            \            \"Connection refused\" (tcp rst) or \"No route to host\"\
            \ (icmp)\n  L6OK    -> check passed on layer 6\n  L6TOUT  -> layer 6 (SSL)\
            \ timeout\n  L6RSP   -> layer 6 invalid response - protocol error\n  L7OK\
            \    -> check passed on layer 7\n  L7OKC   -> check conditionally passed\
            \ on layer 7, for example 404 with\n            disable-on-404\n  L7TOUT\
            \  -> layer 7 (HTTP/SMTP) timeout\n  L7RSP   -> layer 7 invalid response\
            \ - protocol error\n  L7STS   -> layer 7 response error, for example HTTP\
            \ 5xx\n"
          name: status
          type: keyword
        - description: 'Layer 5-7 code, if available.

            '
          name: code
          type: long
        - description: 'Time in ms that it took to finish the last health check.

            '
          name: duration
          type: long
        - description: 'The result of the last health check.

            '
          name: health.last
          type: keyword
        - description: 'Number of failed checks.

            '
          name: health.fail
          type: long
        - description: ''
          name: agent.last
          type: integer
        - description: 'Number of checks that failed while the server was up.

            '
          name: failed
          type: long
        - description: 'Number of UP->DOWN transitions. For backends, this value is
            the number of transitions to the whole backend being down, rather than
            the sum of the transitions for each server.

            '
          name: down
          type: long
        name: check
        type: group
      - description: 'Number of data transfers aborted by the client.

          '
        name: client.aborted
        type: integer
      - description: ''
        fields:
        - description: 'Server ID (unique inside a proxy).

            '
          name: id
          type: integer
        - description: 'Number of data transfers aborted by the server. This value
            is included in haproxy.stat.response.errors.

            '
          name: aborted
          type: integer
        - description: 'Number of backend servers that are active, meaning that they
            are healthy and can receive requests from the load balancer.

            '
          name: active
          type: integer
        - description: 'Number of backend servers that are backup servers.

            '
          name: backup
          type: integer
        name: server
        type: group
      - description: ''
        fields:
        - description: 'Number of HTTP response bytes fed to the compressor.

            '
          format: bytes
          name: in.bytes
          type: long
        - description: 'Number of HTTP response bytes emitted by the compressor.

            '
          format: bytes
          name: out.bytes
          type: integer
        - description: 'Number of bytes that bypassed the HTTP compressor (CPU/BW
            limit).

            '
          format: bytes
          name: bypassed.bytes
          type: long
        - description: 'Number of HTTP responses that were compressed.

            '
          format: bytes
          name: response.bytes
          type: long
        name: compressor
        type: group
      - description: ''
        fields:
        - description: 'Unique proxy ID.

            '
          name: id
          type: integer
        - description: 'Proxy name.

            '
          name: name
          type: keyword
        - description: 'Proxy mode (tcp, http, health, unknown).

            '
          name: mode
          type: keyword
        name: proxy
        type: group
      - description: ''
        fields:
        - description: 'Configured queue limit (maxqueue) for the server, or nothing
            if the value of maxqueue is 0 (meaning no limit).

            '
          name: limit
          type: integer
        - description: 'The average queue time in ms over the last 1024 requests.

            '
          name: time.avg
          type: integer
        name: queue
        type: group
      - description: ''
        fields:
        - description: "Status of the last health check. One of:\n\n  UNK     -> unknown\n\
            \  INI     -> initializing\n  SOCKERR -> socket error\n  L4OK    -> check\
            \ passed on layer 4, no upper layers enabled\n  L4TOUT  -> layer 1-4 timeout\n\
            \  L4CON   -> layer 1-4 connection problem, for example\n            \"\
            Connection refused\" (tcp rst) or \"No route to host\" (icmp)\n  L7OK\
            \    -> agent reported \"up\"\n  L7STS   -> agent reported \"fail\", \"\
            stop\" or \"down\"\n"
          name: status
          type: keyword
        - description: 'Human readable version of agent.status.

            '
          name: description
          type: keyword
        - description: 'Value reported by agent.

            '
          name: code
          type: integer
        - description: 'Rise value of agent.

            '
          name: rise
          type: integer
        - description: 'Fall value of agent.

            '
          name: fall
          type: integer
        - description: 'Health parameter of agent. Between 0 and `agent.rise`+`agent.fall`-1.

            '
          name: health
          type: integer
        - description: 'Duration of the last check in ms.

            '
          name: duration
          type: integer
        - fields:
          - description: 'Rise value of server.

              '
            name: rise
            type: integer
          - description: 'Fall value of server.

              '
            name: fall
            type: integer
          - description: 'Health parameter of server. Between 0 and `agent.check.rise`+`agent.check.fall`-1.

              '
            name: health
            type: integer
          - description: 'Human readable version of check.

              '
            name: description
            type: keyword
          name: check
          type: group
        name: agent
        type: group
      - fields:
        - description: 'Address of the source.

            '
          name: address
          type: text
        name: source
        type: group
      name: stat
      release: ga
      type: group
    name: haproxy
    type: group
  key: haproxy
  release: ga
  settings:
  - ssl
  - http
  short_config: false
  title: HAProxy
- description: 'HTTP module

    '
  fields:
  - description: ''
    fields:
    - description: 'HTTP request information

        '
      fields:
      - description: 'The HTTP headers sent

          '
        name: headers
        type: object
      name: request
      type: group
    - description: 'HTTP response information

        '
      fields:
      - description: 'The HTTP headers received

          '
        name: headers
        type: object
      - description: 'The HTTP status code

          '
        example: 404
        name: code
        type: keyword
      - description: 'The HTTP status phrase

          '
        example: Not found
        name: phrase
        type: keyword
      name: response
      type: group
    - description: 'json metricset

        '
      fields: null
      name: json
      release: ga
      type: group
    - description: 'server

        '
      fields: null
      name: server
      release: ga
      type: group
    name: http
    type: group
  key: http
  release: ga
  settings:
  - ssl
  - http
  title: HTTP
- description: 'Kibana module

    '
  fields:
  - description: ''
    fields:
    - description: 'Kibana stats and run-time metrics.

        '
      fields:
      - description: 'Kibana instance UUID

          '
        migration: true
        name: uuid
        path: service.id
        type: alias
      - description: 'Kibana instance name

          '
        name: name
        type: keyword
      - description: 'Name of Kibana''s internal index

          '
        name: index
        type: keyword
      - description: 'Kibana instance hostname

          '
        name: host.name
        type: keyword
      - description: 'Kibana server''s hostname and port

          '
        migration: true
        name: transport_address
        path: service.address
        type: alias
      - description: 'Kibana version

          '
        migration: true
        name: version
        path: service.version
        type: alias
      - description: 'Whether the Kibana build is a snapshot build

          '
        name: snapshot
        type: boolean
      - description: 'Kibana instance''s health status

          '
        name: status
        type: keyword
      - description: 'Number of client connections made to the server. Note that browsers
          can send multiple simultaneous connections to request multiple server assets
          at once, and they can re-use established connections.

          '
        name: concurrent_connections
        type: long
      - description: 'Process metrics

          '
        fields:
        - description: 'Event loop delay in milliseconds

            '
          name: event_loop_delay.ms
          type: scaled_float
        - description: 'Process heap metrics

            '
          fields:
          - description: 'Total heap allocated to process in bytes

              '
            format: bytes
            name: total.bytes
            type: long
          - description: 'Heap used by process in bytes

              '
            format: bytes
            name: used.bytes
            type: long
          - description: 'Max. old space size allocated to Node.js process, in bytes

              '
            format: bytes
            name: size_limit.bytes
            type: long
          - description: 'Uptime of process in milliseconds

              '
            name: uptime.ms
            type: long
          name: memory.heap
          type: group
        name: process
        type: group
      - description: 'Request count metrics

          '
        fields:
        - description: 'Number of requests that were disconnected

            '
          name: disconnects
          type: long
        - description: 'Total number of requests

            '
          name: total
          type: long
        name: request
        type: group
      - description: 'Response times metrics

          '
        fields:
        - description: 'Average response time in milliseconds

            '
          name: avg.ms
          type: long
        - description: 'Maximum response time in milliseconds

            '
          name: max.ms
          type: long
        name: response_time
        type: group
      name: stats
      release: ga
      type: group
    - description: 'Status fields

        '
      fields:
      - description: 'Kibana instance name.

          '
        name: name
        type: keyword
      - description: 'Kibana instance uuid.

          '
        migration: true
        name: uuid
        path: service.id
        type: alias
      - description: 'Kibana version number.

          '
        migration: true
        name: version.number
        path: service.version
        type: alias
      - description: 'Kibana overall state.

          '
        name: status.overall.state
        type: keyword
      - description: 'Metrics fields

          '
        fields:
        - description: 'Current concurrent connections.

            '
          name: concurrent_connections
          type: long
        - description: 'Request statistics.

            '
          fields:
          - description: 'Total number of disconnected connections.

              '
            name: disconnects
            type: long
          - description: 'Total number of connections.

              '
            name: total
            type: long
          name: requests
          type: group
        name: metrics
        type: group
      name: status
      release: ga
      type: group
    name: kibana
    type: group
  key: kibana
  release: ga
  settings:
  - ssl
  - http
  short_config: false
  title: Kibana
- description: 'linux module

    '
  fields:
  - description: ''
    fields:
    - description: 'conntrack

        '
      fields:
      - description: 'summary of nf_conntrack statistics, summed across CPU cores

          '
        fields:
        - description: 'packets dropped due to conntrack failiure

            '
          name: drop
          type: long
        - description: 'conntrack entries dropped to make room for new ones

            '
          name: early_drop
          type: long
        - description: 'entries in the conntrack table

            '
          name: entries
          type: long
        - description: 'successfully searched entries

            '
          name: found
          type: long
        - description: 'packets seen already connected to a conntrack entry

            '
          name: ignore
          type: long
        - description: "Number of entries where list insert insert failed \n"
          name: insert_failed
          type: long
        - description: 'packets seen that cannot be tracked

            '
          name: invalid
          type: long
        - description: 'table lookups which had to be restarted due to table resizes

            '
          name: search_restart
          type: long
        name: summary
        type: group
      name: conntrack
      release: beta
      type: group
    - description: 'ksm

        '
      fields:
      - description: 'KSM statistics

          '
        fields:
        - description: 'Shared pages in use.

            '
          name: pages_shared
          type: long
        - description: 'Sites sharing pages.

            '
          name: pages_sharing
          type: long
        - description: 'Unique pages.

            '
          name: pages_unshared
          type: long
        - description: 'Pages changing too fast to be shared.

            '
          nmae: pages_volatile
          type: long
        - description: 'Number of times mergable pages have been scanned.

            '
          name: full_scans
          type: long
        - description: 'Pages that have reached max_page_sharing.

            '
          name: stable_node_chains
          type: long
        - description: 'Number of duplicated KSM pages.

            '
          name: stable_node_dups
          type: long
        name: stats
        type: group
      name: ksm
      release: beta
      type: group
    - description: 'pageinfo

        '
      fields:
      - description: 'Data from /proc/buddyinfo grouping used pages by order

          '
        fields:
        - description: 'DMA page Data

            '
          fields:
          - description: 'free chunks of 2^0*PAGE_SIZE

              '
            name: '0'
            type: long
          - description: 'free chunks of 2^1*PAGE_SIZE

              '
            name: '1'
            type: long
          - description: 'free chunks of 2^2*PAGE_SIZE

              '
            name: '2'
            type: long
          - description: 'free chunks of 2^3*PAGE_SIZE

              '
            name: '3'
            type: long
          - description: 'free chunks of 2^4*PAGE_SIZE

              '
            name: '4'
            type: long
          - description: 'free chunks of 2^5*PAGE_SIZE

              '
            name: '5'
            type: long
          - description: 'free chunks of 2^6*PAGE_SIZE

              '
            name: '6'
            type: long
          - description: 'free chunks of 2^7*PAGE_SIZE

              '
            name: '7'
            type: long
          - description: 'free chunks of 2^8*PAGE_SIZE

              '
            name: '8'
            type: long
          - description: 'free chunks of 2^9*PAGE_SIZE

              '
            name: '9'
            type: long
          - description: 'free chunks of 2^10*PAGE_SIZE

              '
            name: '10'
            type: long
          name: DMA
          type: group
        name: buddy_info
        type: group
      - description: 'Raw allocation info from /proc/pagetypeinfo

          '
        name: nodes.*
        type: object
      name: pageinfo
      release: beta
      type: group
    name: linux
    type: group
  key: linux
  release: beta
  title: linux
- description: 'Logstash module

    '
  fields:
  - description: ''
    fields:
    - description: 'node

        '
      fields:
      - description: 'Host name

          '
        migration: true
        name: host
        path: host.hostname
        type: alias
      - description: 'Logstash Version

          '
        migration: true
        name: version
        path: service.version
        type: alias
      - description: 'JVM Info

          '
        fields:
        - description: 'Version

            '
          name: version
          type: keyword
        - description: 'Process ID

            '
          migration: true
          name: pid
          path: process.pid
          type: alias
        name: jvm
        type: group
      name: node
      release: ga
      type: group
    - description: 'node_stats metrics.

        '
      fields:
      - description: 'Events stats

          '
        fields:
        - description: 'Incoming events counter.

            '
          name: in
          type: long
        - description: 'Outgoing events counter.

            '
          name: out
          type: long
        - description: 'Filtered events counter.

            '
          name: filtered
          type: long
        name: events
        type: group
      name: node.stats
      release: ga
      type: group
    name: logstash
    type: group
  key: logstash
  release: ga
  settings:
  - ssl
  - http
  title: Logstash
- description: 'MySQL server status metrics collected from MySQL.

    '
  fields:
  - description: '`mysql` contains the metrics that were obtained from MySQL query.

      '
    fields:
    - description: '`galera_status` contains the metrics that were obtained by the
        status SQL query on Galera.

        '
      fields:
      - description: 'Apply status fields.

          '
        fields:
        - description: 'How often applier started write-set applying out-of-order
            (parallelization efficiency).

            '
          name: oooe
          type: double
        - description: 'How often write-set was so slow to apply that write-set with
            higher seqno''s were applied earlier. Values closer to 0 refer to a greater
            gap between slow and fast write-sets.

            '
          name: oool
          type: double
        - description: 'Average distance between highest and lowest concurrently applied
            seqno.

            '
          name: window
          type: double
        name: apply
        type: group
      - description: 'Certification status fields.

          '
        fields:
        - description: 'Average distance between highest and lowest seqno value that
            can be possibly applied in parallel (potential degree of parallelization).

            '
          name: deps_distance
          type: double
        - description: 'The number of entries in the certification index.

            '
          name: index_size
          type: long
        - description: 'Average number of transactions received while a transaction
            replicates.

            '
          name: interval
          type: double
        name: cert
        type: group
      - description: 'Cluster status fields.

          '
        fields:
        - description: 'Total number of cluster membership changes happened.

            '
          name: conf_id
          type: long
        - description: 'Current number of members in the cluster.

            '
          name: size
          type: long
        - description: 'Status of this cluster component. That is, whether the node
            is part of a PRIMARY or NON_PRIMARY component.

            '
          name: status
          type: keyword
        name: cluster
        type: group
      - description: 'Commit status fields.

          '
        fields:
        - description: 'How often a transaction was committed out of order.

            '
          name: oooe
          type: double
        - description: 'Average distance between highest and lowest concurrently committed
            seqno.

            '
          name: window
          type: long
        name: commit
        type: group
      - description: 'If the value is OFF, the node has not yet connected to any of
          the cluster components. This may be due to misconfiguration. Check the error
          log for proper diagnostics.

          '
        name: connected
        type: keyword
      - description: 'Evs Fields.

          '
        fields:
        - description: 'Lists the UUID''s of all nodes evicted from the cluster. Evicted
            nodes cannot rejoin the cluster until you restart their mysqld processes.

            '
          name: evict
          type: keyword
        - description: 'Shows the internal state of the EVS Protocol.

            '
          name: state
          type: keyword
        name: evs
        type: group
      - description: 'Flow Control fields.

          '
        fields:
        - description: 'The fraction of time since the last FLUSH STATUS command that
            replication was paused due to flow control. In other words, how much the
            slave lag is slowing down the cluster.

            '
          name: paused
          type: double
        - description: 'The total time spent in a paused state measured in nanoseconds.

            '
          name: paused_ns
          type: long
        - description: 'Returns the number of FC_PAUSE events the node has received,
            including those the node has sent. Unlike most status variables, the counter
            for this one does not reset every time you run the query.

            '
          name: recv
          type: long
        - description: 'Returns the number of FC_PAUSE events the node has sent. Unlike
            most status variables, the counter for this one does not reset every time
            you run the query.

            '
          name: sent
          type: long
        name: flow_ctl
        type: group
      - description: 'The sequence number, or seqno, of the last committed transaction.

          '
        name: last_committed
        type: long
      - description: 'Node specific Cluster status fields.

          '
        fields:
        - description: 'Total number of local transactions that were aborted by slave
            transactions while in execution.

            '
          name: bf_aborts
          type: long
        - description: 'Total number of local transactions that failed certification
            test.

            '
          name: cert_failures
          type: long
        - description: 'Total number of local transactions committed.

            '
          name: commits
          type: long
        - description: 'Node specific recv fields.

            '
          fields:
          - description: 'Current (instantaneous) length of the recv queue.

              '
            name: queue
            type: long
          - description: 'Recv queue length averaged over interval since the last
              FLUSH STATUS command. Values considerably larger than 0.0 mean that
              the node cannot apply write-sets as fast as they are received and will
              generate a lot of replication throttling.

              '
            name: queue_avg
            type: double
          - description: 'The maximum length of the recv queue since the last FLUSH
              STATUS command.

              '
            name: queue_max
            type: long
          - description: 'The minimum length of the recv queue since the last FLUSH
              STATUS command.

              '
            name: queue_min
            type: long
          name: recv
          type: group
        - description: 'Total number of transaction replays due to asymmetric lock
            granularity.

            '
          name: replays
          type: long
        - description: 'Node specific sent fields.

            '
          fields:
          - description: 'Current (instantaneous) length of the send queue.

              '
            name: queue
            type: long
          - description: 'Send queue length averaged over time since the last FLUSH
              STATUS command. Values considerably larger than 0.0 indicate replication
              throttling or network throughput issue.

              '
            name: queue_avg
            type: double
          - description: 'The maximum length of the send queue since the last FLUSH
              STATUS command.

              '
            name: queue_max
            type: long
          - description: 'The minimum length of the send queue since the last FLUSH
              STATUS command.

              '
            name: queue_min
            type: long
          name: send
          type: group
        - description: 'Internal Galera Cluster FSM state number.

            '
          name: state
          type: keyword
        name: local
        type: group
      - description: 'Whether the server is ready to accept queries.

          '
        name: ready
        type: keyword
      - description: 'Write-Set receive status fields.

          '
        fields:
        - description: 'Total number of write-sets received from other nodes.

            '
          name: count
          type: long
        - description: 'Total size of write-sets received from other nodes.

            '
          name: bytes
          type: long
        name: received
        type: group
      - description: 'Replication status fields.

          '
        fields:
        - description: 'Total size of data replicated.

            '
          name: data_bytes
          type: long
        - description: 'Total number of keys replicated.

            '
          name: keys
          type: long
        - description: 'Total size of keys replicated.

            '
          name: keys_bytes
          type: long
        - description: 'Total size of other bits replicated.

            '
          name: other_bytes
          type: long
        - description: 'Total number of write-sets replicated (sent to other nodes).

            '
          name: count
          type: long
        - description: 'Total size of write-sets replicated.

            '
          name: bytes
          type: long
        name: repl
        type: group
      name: galera_status
      release: beta
      type: group
    - description: '`status` contains the metrics that were obtained by the status
        SQL query.

        '
      fields:
      - description: 'Aborted status fields.

          '
        fields:
        - description: 'The number of connections that were aborted because the client
            died without closing the connection properly.

            '
          name: clients
          type: long
        - description: 'The number of failed attempts to connect to the MySQL server.

            '
          name: connects
          type: long
        name: aborted
        type: group
      - description: ''
        fields:
        - description: ''
          name: cache.disk_use
          type: long
        - description: ''
          name: cache.use
          type: long
        name: binlog
        type: group
      - description: 'Bytes stats.

          '
        fields:
        - description: 'The number of bytes received from all clients.

            '
          format: bytes
          name: received
          type: long
        - description: 'The number of bytes sent to all clients.

            '
          format: bytes
          name: sent
          type: long
        name: bytes
        type: group
      - description: 'Threads stats.

          '
        fields:
        - description: 'The number of cached threads.

            '
          name: cached
          type: long
        - description: 'The number of created threads.

            '
          name: created
          type: long
        - description: 'The number of connected threads.

            '
          name: connected
          type: long
        - description: 'The number of running threads.

            '
          name: running
          type: long
        name: threads
        type: group
      - description: ''
        name: connections
        type: long
      - description: ''
        fields:
        - description: ''
          name: tmp.disk_tables
          type: long
        - description: ''
          name: tmp.files
          type: long
        - description: ''
          name: tmp.tables
          type: long
        name: created
        type: group
      - description: ''
        fields:
        - description: ''
          name: errors
          type: long
        - description: ''
          name: insert_threads
          type: long
        - description: ''
          name: writes
          type: long
        name: delayed
        type: group
      - description: ''
        name: flush_commands
        type: long
      - description: ''
        name: max_used_connections
        type: long
      - description: ''
        fields:
        - description: ''
          name: files
          type: long
        - description: ''
          name: streams
          type: long
        - description: ''
          name: tables
          type: long
        name: open
        type: group
      - description: ''
        name: opened_tables
        type: long
      - description: ''
        fields:
        - description: 'The number of DELETE queries since startup.

            '
          name: delete
          type: long
        - description: 'The number of INSERT queries since startup.

            '
          name: insert
          type: long
        - description: 'The number of SELECT queries since startup.

            '
          name: select
          type: long
        - description: 'The number of UPDATE queries since startup.

            '
          name: update
          type: long
        name: command
        type: group
      - description: 'The number of statements executed by the server. This variable
          includes statements executed within stored programs, unlike the Questions
          variable. It does not count COM_PING or COM_STATISTICS commands.

          '
        name: queries
        type: long
      - description: 'The number of statements executed by the server. This includes
          only statements sent to the server by clients and not statements executed
          within stored programs, unlike the Queries variable. This variable does
          not count COM_PING, COM_STATISTICS, COM_STMT_PREPARE, COM_STMT_CLOSE, or
          COM_STMT_RESET commands.

          '
        name: questions
        type: long
      - description: ''
        fields:
        - description: 'The number of internal COMMIT statements.

            '
          name: commit
          type: long
        - description: 'The number of times that rows have been deleted from tables.

            '
          name: delete
          type: long
        - description: 'The server increments this variable for each call to its external_lock()
            function, which generally occurs at the beginning and end of access to
            a table instance.

            '
          name: external_lock
          type: long
        - description: 'The number of times the server uses a storage engine''s own
            Multi-Range Read implementation for table access.

            '
          name: mrr_init
          type: long
        - description: 'A counter for the prepare phase of two-phase commit operations.

            '
          name: prepare
          type: long
        - description: ''
          fields:
          - description: 'The number of times the first entry in an index was read.

              '
            name: first
            type: long
          - description: 'The number of requests to read a row based on a key.

              '
            name: key
            type: long
          - description: "The number of requests to read the last key in an index.\
              \ \n"
            name: last
            type: long
          - description: 'The number of requests to read the next row in key order.

              '
            name: next
            type: long
          - description: 'The number of requests to read the previous row in key order.

              '
            name: prev
            type: long
          - description: "The number of requests to read a row based on a fixed position.\
              \ \n"
            name: rnd
            type: long
          - description: "The number of requests to read the next row in the data\
              \ file. \n"
            name: rnd_next
            type: long
          name: read
          type: group
        - description: 'The number of requests for a storage engine to perform a rollback
            operation.

            '
          name: rollback
          type: long
        - description: 'The number of requests for a storage engine to place a savepoint.

            '
          name: savepoint
          type: long
        - description: 'The number of requests for a storage engine to roll back to
            a savepoint.

            '
          name: savepoint_rollback
          type: long
        - description: 'The number of requests to update a row in a table.

            '
          name: update
          type: long
        - description: 'The number of requests to insert a row in a table.

            '
          name: write
          type: long
        name: handler
        type: group
      - description: ''
        fields:
        - description: ''
          fields:
          - description: 'The progress of an operation to record the pages held in
              the InnoDB buffer pool, triggered by the setting of innodb_buffer_pool_dump_at_shutdown
              or innodb_buffer_pool_dump_now.

              '
            name: dump_status
            type: long
          - description: 'The progress of an operation to warm up the InnoDB buffer
              pool by reading in a set of pages corresponding to an earlier point
              in time, triggered by the setting of innodb_buffer_pool_load_at_startup
              or innodb_buffer_pool_load_now.

              '
            name: load_status
            type: long
          - description: ''
            fields:
            - description: "The total number of bytes in the InnoDB buffer pool containing\
                \ data. \n"
              name: data
              type: long
            - description: 'The total current number of bytes held in dirty pages
                in the InnoDB buffer pool.

                '
              name: dirty
              type: long
            name: bytes
            type: group
          - description: ''
            fields:
            - description: 'he number of pages in the InnoDB buffer pool containing
                data.

                '
              name: data
              type: long
            - description: 'The current number of dirty pages in the InnoDB buffer
                pool.

                '
              name: dirty
              type: long
            - description: 'The number of requests to flush pages from the InnoDB
                buffer pool.

                '
              name: flushed
              type: long
            - description: 'The number of free pages in the InnoDB buffer pool.

                '
              name: free
              type: long
            - description: 'The number of latched pages in the InnoDB buffer pool.

                '
              name: latched
              type: long
            - description: 'The number of pages in the InnoDB buffer pool that are
                busy because they have been allocated for administrative overhead,
                such as row locks or the adaptive hash index.

                '
              name: misc
              type: long
            - description: 'The total size of the InnoDB buffer pool, in pages.

                '
              name: total
              type: long
            name: pages
            type: group
          - description: ''
            fields:
            - description: 'The number of pages read into the InnoDB buffer pool by
                the read-ahead background thread.

                '
              name: ahead
              type: long
            - description: 'The number of pages read into the InnoDB buffer pool by
                the read-ahead background thread that were subsequently evicted without
                having been accessed by queries.

                '
              name: ahead_evicted
              type: long
            - description: 'The number of "random" read-aheads initiated by InnoDB.

                '
              name: ahead_rnd
              type: long
            - description: 'The number of logical read requests.

                '
              name: requests
              type: long
            name: read
            type: group
          - description: ''
            fields:
            - description: 'The number of logical reads that InnoDB could not satisfy
                from the buffer pool, and had to read directly from disk.

                '
              name: reads
              type: long
            - description: 'The status of an operation to resize the InnoDB buffer
                pool dynamically, triggered by setting the innodb_buffer_pool_size
                parameter dynamically.

                '
              name: resize_status
              type: long
            - description: 'Normally, writes to the InnoDB buffer pool happen in the
                background. When InnoDB needs to read or create a page and no clean
                pages are available, InnoDB flushes some dirty pages first and waits
                for that operation to finish. This counter counts instances of these
                waits.

                '
              name: wait_free
              type: long
            name: pool
            type: group
          - description: 'The number of writes done to the InnoDB buffer pool.

              '
            name: write_requests
            type: long
          name: buffer_pool
          type: group
        name: innodb
        type: group
      name: status
      release: ga
      type: group
    name: mysql
    type: group
  key: mysql
  release: ga
  short_config: false
  title: MySQL
- description: 'nats Module

    '
  fields:
  - description: '`nats` contains statistics that were read from Nats

      '
    fields:
    - description: 'The server ID

        '
      name: server.id
      type: keyword
    - description: 'Server time of metric creation

        '
      name: server.time
      type: date
    - description: 'Contains nats connection related metrics

        '
      fields:
      - description: 'The number of currently active clients

          '
        name: total
        type: integer
      name: connections
      release: ga
      type: group
    - description: 'Contains nats route related metrics

        '
      fields:
      - description: 'The number of registered routes

          '
        name: total
        type: integer
      name: routes
      release: ga
      type: group
    - description: 'Contains nats var related metrics

        '
      fields:
      - description: 'The period the server is up (sec)

          '
        format: duration
        name: uptime
        type: long
      - description: 'The current memory usage of NATS process

          '
        format: bytes
        name: mem.bytes
        type: long
      - description: 'The number of logical cores the NATS process runs on

          '
        name: cores
        type: integer
      - description: 'The current cpu usage of NATs process

          '
        format: percent
        name: cpu
        type: scaled_float
      - description: 'The number of totally created clients

          '
        name: total_connections
        type: long
      - description: 'The number of registered remotes

          '
        name: remotes
        type: integer
      - description: 'The amount of incoming data

          '
        fields:
        - description: 'The amount of incoming messages

            '
          name: messages
          type: long
        - description: 'The amount of incoming bytes

            '
          format: bytes
          name: bytes
          type: long
        name: in
        type: group
      - description: 'The amount of outgoing data

          '
        fields:
        - description: 'The amount of outgoing messages

            '
          name: messages
          type: long
        - description: 'The amount of outgoing bytes

            '
          format: bytes
          name: bytes
          type: long
        name: out
        type: group
      - description: 'The number of slow consumers currently on NATS

          '
        name: slow_consumers
        type: long
      - description: 'The http metrics of NATS server

          '
        fields:
        - description: 'The requests statistics

            '
          fields:
          - description: 'The request distribution on monitoring URIS

              '
            fields:
            - description: 'The number of hits on routez monitoring uri

                '
              name: routez
              type: long
            - description: 'The number of hits on connz monitoring uri

                '
              name: connz
              type: long
            - description: 'The number of hits on varz monitoring uri

                '
              name: varz
              type: long
            - description: 'The number of hits on subsz monitoring uri

                '
              name: subsz
              type: long
            - description: 'The number of hits on root monitoring uri

                '
              name: root
              type: long
            name: uri
            type: group
          name: req_stats
          type: group
        name: http
        type: group
      name: stats
      release: ga
      type: group
    - description: 'Contains nats subscriptions related metrics

        '
      fields:
      - description: 'The number of active subscriptions

          '
        name: total
        type: integer
      - description: 'The number of insert operations in subscriptions list

          '
        name: inserts
        type: long
      - description: 'The number of remove operations in subscriptions list

          '
        name: removes
        type: long
      - description: 'The number of times a match is found for a subscription

          '
        name: matches
        type: long
      - description: 'The number of result sets in the cache

          '
        name: cache.size
        type: integer
      - description: 'The rate matches are being retrieved from cache

          '
        format: percent
        name: cache.hit_rate
        type: scaled_float
      - description: 'The maximum fanout served by cache

          '
        name: cache.fanout.max
        type: integer
      - description: 'The average fanout served by cache

          '
        name: cache.fanout.avg
        type: double
      name: subscriptions
      release: ga
      type: group
    name: nats
    type: group
  key: nats
  release: ga
  title: NATS
- description: 'Nginx server status metrics collected from various modules.

    '
  fields:
  - description: '`nginx` contains the metrics that were scraped from nginx.

      '
    fields:
    - description: '`stubstatus` contains the metrics that were scraped from the ngx_http_stub_status_module
        status page.

        '
      fields:
      - description: 'Nginx hostname.

          '
        name: hostname
        type: keyword
      - description: 'The current number of active client connections including Waiting
          connections.

          '
        name: active
        type: long
      - description: 'The total number of accepted client connections.

          '
        name: accepts
        type: long
      - description: 'The total number of handled client connections.

          '
        name: handled
        type: long
      - description: 'The total number of dropped client connections.

          '
        name: dropped
        type: long
      - description: 'The total number of client requests.

          '
        name: requests
        type: long
      - description: 'The current number of client requests.

          '
        name: current
        type: long
      - description: 'The current number of connections where Nginx is reading the
          request header.

          '
        name: reading
        type: long
      - description: 'The current number of connections where Nginx is writing the
          response back to the client.

          '
        name: writing
        type: long
      - description: 'The current number of idle client connections waiting for a
          request.

          '
        name: waiting
        type: long
      name: stubstatus
      release: ga
      type: group
    name: nginx
    type: group
  key: nginx
  release: ga
  settings:
  - ssl
  - http
  short_config: false
  title: Nginx
- description: 'PHP-FPM server status metrics collected from PHP-FPM.

    '
  fields:
  - description: '`php_fpm` contains the metrics that were obtained from PHP-FPM status
      page call.

      '
    fields:
    - description: '`pool` contains the metrics that were obtained from the PHP-FPM
        process pool.

        '
      fields:
      - description: 'The name of the pool.

          '
        name: name
        type: keyword
      name: pool
      type: group
    - description: '`pool` contains the metrics that were obtained from the PHP-FPM
        process pool.

        '
      fields:
      - description: 'Static, dynamic or ondemand.

          '
        name: process_manager
        type: keyword
      - description: 'Connection state specific statistics.

          '
        fields:
        - description: 'The number of incoming requests that the PHP-FPM server has
            accepted; when a connection is accepted it is removed from the listen
            queue.

            '
          name: accepted
          type: long
        - description: 'The current number of connections that have been initiated,
            but not yet accepted. If this value is non-zero it typically means that
            all the available server processes are currently busy, and there are no
            processes available to serve the next request. Raising `pm.max_children`
            (provided the server can handle it) should help keep this number low.
            This property follows from the fact that PHP-FPM listens via a socket
            (TCP or file based), and thus inherits some of the characteristics of
            sockets.

            '
          name: queued
          type: long
        - description: 'The maximum number of requests in the queue of pending connections
            since FPM has started.

            '
          name: max_listen_queue
          type: long
        - description: 'The size of the socket queue of pending connections.

            '
          name: listen_queue_len
          type: long
        name: connections
        type: group
      - description: 'Process state specific statistics.

          '
        fields:
        - description: 'The number of servers in the `waiting to process` state (i.e.
            not currently serving a page). This value should fall between the `pm.min_spare_servers`
            and `pm.max_spare_servers` values when the process manager is `dynamic`.

            '
          name: idle
          type: long
        - description: 'The number of servers current processing a page - the minimum
            is `1` (so even on a fully idle server, the result will be not read `0`).

            '
          name: active
          type: long
        - description: 'The number of idle + active processes.

            '
          name: total
          type: long
        - description: 'The maximum number of active processes since FPM has started.

            '
          name: max_active
          type: long
        - description: 'Number of times, the process limit has been reached, when
            pm tries to start more children (works only for pm ''dynamic'' and ''ondemand'').

            '
          name: max_children_reached
          type: long
        name: processes
        type: group
      - description: 'The number of times a request execution time has exceeded `request_slowlog_timeout`.

          '
        name: slow_requests
        type: long
      - description: 'Number of seconds since FPM has started.

          '
        name: start_since
        type: long
      - description: 'The date and time FPM has started.

          '
        name: start_time
        type: date
      name: pool
      release: ga
      type: group
    - description: 'process contains the metrics that were obtained from the PHP-FPM
        process.

        '
      fields:
      - description: 'The PID of the process

          '
        migration: true
        name: pid
        path: process.pid
        type: alias
      - description: 'The state of the process (Idle, Running, etc)

          '
        name: state
        type: keyword
      - description: 'The date and time the process has started

          '
        name: start_time
        type: date
      - description: 'The number of seconds since the process has started

          '
        name: start_since
        type: integer
      - description: 'The number of requests the process has served

          '
        name: requests
        type: integer
      - description: 'The duration in microseconds (1 million in a second) of the
          current request (my own definition)

          '
        name: request_duration
        type: integer
      - description: 'The request method (GET, POST, etc) (of the current request)

          '
        migration: true
        name: request_method
        path: http.request.method
        type: alias
      - description: 'The request URI with the query string (of the current request)

          '
        migration: true
        name: request_uri
        path: url.original
        type: alias
      - description: 'The content length of the request (only with POST) (of the current
          request)

          '
        migration: true
        name: content_length
        path: http.response.body.bytes
        type: alias
      - description: 'The user (PHP_AUTH_USER) (or - if not set) (for the current
          request)

          '
        migration: true
        name: user
        path: user.name
        type: alias
      - description: 'The main script called (or - if not set) (for the current request)

          '
        name: script
        type: keyword
      - description: 'The max amount of memory the last request consumed (it is always
          0 if the process is not in Idle state because memory calculation is done
          when the request processing has terminated)

          '
        name: last_request_cpu
        type: long
      - description: 'The content length of the request (only with POST) (of the current
          request)

          '
        name: last_request_memory
        type: integer
      name: process
      release: ga
      type: group
    name: php_fpm
    type: group
  key: php_fpm
  release: ga
  settings:
  - ssl
  - http
  short_config: false
  title: PHP_FPM
- description: 'Metrics collected from PostgreSQL servers.

    '
  fields:
  - description: 'PostgreSQL metrics.

      '
    fields:
    - description: 'One document per server process, showing information related to
        the current activity of that process, such as state and current query. Collected
        by querying pg_stat_activity.

        '
      fields:
      - description: 'OID of the database this backend is connected to.

          '
        name: database.oid
        type: long
      - description: 'Name of the database this backend is connected to.

          '
        name: database.name
        type: keyword
      - description: 'Process ID of this backend.

          '
        name: pid
        type: long
      - description: 'OID of the user logged into this backend.

          '
        name: user.id
        type: long
      - description: 'Name of the user logged into this backend.

          '
        name: user.name
      - description: 'Name of the application that is connected to this backend.

          '
        name: application_name
      - description: 'IP address of the client connected to this backend.

          '
        name: client.address
      - description: 'Host name of the connected client, as reported by a reverse
          DNS lookup of client_addr.

          '
        name: client.hostname
      - description: 'TCP port number that the client is using for communication with
          this backend, or -1 if a Unix socket is used.

          '
        name: client.port
        type: long
      - description: 'Time when this process was started, i.e., when the client connected
          to the server.

          '
        name: backend_start
        type: date
      - description: 'Time when this process'' current transaction was started.

          '
        name: transaction_start
        type: date
      - description: 'Time when the currently active query was started, or if state
          is not active, when the last query was started.

          '
        name: query_start
        type: date
      - description: 'Time when the state was last changed.

          '
        name: state_change
        type: date
      - description: 'True if this backend is currently waiting on a lock.

          '
        name: waiting
        type: boolean
      - description: "Current overall state of this backend. Possible values are:\n\
          \n  * active: The backend is executing a query.\n  * idle: The backend is\
          \ waiting for a new client command.\n  * idle in transaction: The backend\
          \ is in a transaction, but is not\n    currently executing a query.\n  *\
          \ idle in transaction (aborted): This state is similar to idle in\n    transaction,\
          \ except one of the statements in the transaction caused\n    an error.\n\
          \  * fastpath function call: The backend is executing a fast-path function.\n\
          \  * disabled: This state is reported if track_activities is disabled in\
          \ this backend.\n"
        name: state
      - description: 'Text of this backend''s most recent query. If state is active
          this field shows the currently executing query. In all other states, it
          shows the last query that was executed.

          '
        name: query
      name: activity
      release: ga
      type: group
    - description: 'Statistics about the background writer process''s activity. Collected
        using the pg_stat_bgwriter query.

        '
      fields:
      - description: 'Number of scheduled checkpoints that have been performed.

          '
        name: checkpoints.scheduled
        type: long
      - description: 'Number of requested checkpoints that have been performed.

          '
        name: checkpoints.requested
        type: long
      - description: 'Total amount of time that has been spent in the portion of checkpoint
          processing where files are written to disk, in milliseconds.

          '
        name: checkpoints.times.write.ms
        type: float
      - description: 'Total amount of time that has been spent in the portion of checkpoint
          processing where files are synchronized to disk, in milliseconds.

          '
        name: checkpoints.times.sync.ms
        type: float
      - description: 'Number of buffers written during checkpoints.

          '
        name: buffers.checkpoints
        type: long
      - description: 'Number of buffers written by the background writer.

          '
        name: buffers.clean
        type: long
      - description: 'Number of times the background writer stopped a cleaning scan
          because it had written too many buffers.

          '
        name: buffers.clean_full
        type: long
      - description: 'Number of buffers written directly by a backend.

          '
        name: buffers.backend
        type: long
      - description: 'Number of times a backend had to execute its own fsync call
          (normally the background writer handles those even when the backend does
          its own write)

          '
        name: buffers.backend_fsync
        type: long
      - description: 'Number of buffers allocated.

          '
        name: buffers.allocated
        type: long
      - description: 'Time at which these statistics were last reset.

          '
        name: stats_reset
        type: date
      name: bgwriter
      release: ga
      type: group
    - description: 'One row per database, showing database-wide statistics. Collected
        by querying pg_stat_database

        '
      fields:
      - description: 'OID of the database this backend is connected to.

          '
        name: oid
        type: long
      - description: 'Name of the database this backend is connected to.

          '
        name: name
        type: keyword
      - description: 'Number of backends currently connected to this database.

          '
        name: number_of_backends
        type: long
      - description: 'Number of transactions in this database that have been committed.

          '
        name: transactions.commit
        type: long
      - description: 'Number of transactions in this database that have been rolled
          back.

          '
        name: transactions.rollback
        type: long
      - description: 'Number of disk blocks read in this database.

          '
        name: blocks.read
        type: long
      - description: 'Number of times disk blocks were found already in the buffer
          cache, so that a read was not necessary (this only includes hits in the
          PostgreSQL buffer cache, not the operating system''s file system cache).

          '
        name: blocks.hit
        type: long
      - description: 'Time spent reading data file blocks by backends in this database,
          in milliseconds.

          '
        name: blocks.time.read.ms
        type: long
      - description: 'Time spent writing data file blocks by backends in this database,
          in milliseconds.

          '
        name: blocks.time.write.ms
        type: long
      - description: 'Number of rows returned by queries in this database.

          '
        name: rows.returned
        type: long
      - description: 'Number of rows fetched by queries in this database.

          '
        name: rows.fetched
        type: long
      - description: 'Number of rows inserted by queries in this database.

          '
        name: rows.inserted
        type: long
      - description: 'Number of rows updated by queries in this database.

          '
        name: rows.updated
        type: long
      - description: 'Number of rows deleted by queries in this database.

          '
        name: rows.deleted
        type: long
      - description: 'Number of queries canceled due to conflicts with recovery in
          this database.

          '
        name: conflicts
        type: long
      - description: 'Number of temporary files created by queries in this database.
          All temporary files are counted, regardless of why the temporary file was
          created (e.g., sorting or hashing), and regardless of the log_temp_files
          setting.

          '
        name: temporary.files
        type: long
      - description: 'Total amount of data written to temporary files by queries in
          this database. All temporary files are counted, regardless of why the temporary
          file was created, and regardless of the log_temp_files setting.

          '
        name: temporary.bytes
        type: long
      - description: 'Number of deadlocks detected in this database.

          '
        name: deadlocks
        type: long
      - description: 'Time at which these statistics were last reset.

          '
        name: stats_reset
        type: date
      name: database
      release: ga
      type: group
    - description: 'One document per query per user per database, showing information
        related invocation of that query, such as cpu usage and total time. Collected
        by querying pg_stat_statements.

        '
      fields:
      - description: 'OID of the user logged into the backend that ran the query.

          '
        name: user.id
        type: long
      - description: 'OID of the database the query was run on.

          '
        name: database.oid
        type: long
      - description: 'ID of the statement.

          '
        name: query.id
        type: long
      - description: 'Query text

          '
        name: query.text
      - description: 'Number of times the query has been run.

          '
        name: query.calls
        type: long
      - description: 'Total number of rows returned by query.

          '
        name: query.rows
        type: long
      - description: 'Total number of milliseconds spent running query.

          '
        name: query.time.total.ms
        type: float
      - description: 'Minimum number of milliseconds spent running query.

          '
        name: query.time.min.ms
        type: float
      - description: 'Maximum number of milliseconds spent running query.

          '
        name: query.time.max.ms
        type: float
      - description: 'Mean number of milliseconds spent running query.

          '
        name: query.time.mean.ms
        type: long
      - description: 'Population standard deviation of time spent running query, in
          milliseconds.

          '
        name: query.time.stddev.ms
        type: long
      - description: 'Total number of shared block cache hits by the query.

          '
        name: query.memory.shared.hit
        type: long
      - description: 'Total number of shared block cache read by the query.

          '
        name: query.memory.shared.read
        type: long
      - description: 'Total number of shared block cache dirtied by the query.

          '
        name: query.memory.shared.dirtied
        type: long
      - description: 'Total number of shared block cache written by the query.

          '
        name: query.memory.shared.written
        type: long
      - description: 'Total number of local block cache hits by the query.

          '
        name: query.memory.local.hit
        type: long
      - description: 'Total number of local block cache read by the query.

          '
        name: query.memory.local.read
        type: long
      - description: 'Total number of local block cache dirtied by the query.

          '
        name: query.memory.local.dirtied
        type: long
      - description: 'Total number of local block cache written by the query.

          '
        name: query.memory.local.written
        type: long
      - description: 'Total number of temp block cache read by the query.

          '
        name: query.memory.temp.read
        type: long
      - description: 'Total number of temp block cache written by the query.

          '
        name: query.memory.temp.written
        type: long
      name: statement
      release: ga
      type: group
    name: postgresql
    type: group
  key: postgresql
  release: ga
  short_config: false
  title: PostgreSQL
- description: 'Redis metrics collected from Redis.

    '
  fields:
  - description: '`redis` contains the information and statistics from Redis.

      '
    fields:
    - description: '`info` contains the information and statistics returned by the
        `INFO` command.

        '
      fields:
      - description: 'Redis client stats.

          '
        fields:
        - description: 'Number of client connections (excluding connections from slaves).

            '
          name: connected
          type: long
        - deprecated: 6.5.0
          description: 'Longest output list among current client connections (replaced
            by max_output_buffer).

            '
          name: longest_output_list
          type: long
        - description: 'Longest output list among current client connections.

            '
          name: max_output_buffer
          type: long
        - deprecated: 6.5.0
          description: 'Biggest input buffer among current client connections (replaced
            by max_input_buffer).

            '
          name: biggest_input_buf
          type: long
        - description: 'Biggest input buffer among current client connections (on
            redis 5.0).

            '
          name: max_input_buffer
          type: long
        - description: 'Number of clients pending on a blocking call (BLPOP, BRPOP,
            BRPOPLPUSH).

            '
          name: blocked
          type: long
        name: clients
        type: group
      - description: 'Redis cluster information.

          '
        fields:
        - description: 'Indicates that the Redis cluster is enabled.

            '
          name: enabled
          type: boolean
        name: cluster
        type: group
      - description: 'Redis CPU stats

          '
        fields:
        - description: 'System CPU consumed by the Redis server.

            '
          name: used.sys
          type: scaled_float
        - description: 'User CPU consumed by the Redis server.

            '
          name: used.sys_children
          type: scaled_float
        - description: 'System CPU consumed by the background processes.

            '
          name: used.user
          type: scaled_float
        - description: 'User CPU consumed by the background processes.

            '
          name: used.user_children
          type: scaled_float
        name: cpu
        type: group
      - description: 'Redis memory stats.

          '
        fields:
        - description: 'Total number of bytes allocated by Redis.

            '
          format: bytes
          name: used.value
          type: long
        - description: 'Number of bytes that Redis allocated as seen by the operating
            system (a.k.a resident set size).

            '
          format: bytes
          name: used.rss
          type: long
        - description: 'Peak memory consumed by Redis.

            '
          format: bytes
          name: used.peak
          type: long
        - description: "Used memory by the Lua engine.        \n"
          format: bytes
          name: used.lua
          type: long
        - description: "The size in bytes of the dataset \n"
          format: bytes
          name: used.dataset
          type: long
        - description: 'Memory limit.

            '
          format: bytes
          name: max.value
          type: long
        - description: 'Eviction policy to use when memory limit is reached.

            '
          name: max.policy
          type: keyword
        - description: 'Ratio between used_memory_rss and used_memory

            '
          name: fragmentation.ratio
          type: float
        - description: 'Bytes between used_memory_rss and used_memory

            '
          format: bytes
          name: fragmentation.bytes
          type: long
        - description: 'Flag indicating if active defragmentation is active

            '
          name: active_defrag.is_running
          type: boolean
        - description: 'Memory allocator.

            '
          name: allocator
          type: keyword
        - fields:
          - description: 'Allocated memory

              '
            format: bytes
            name: allocated
            type: long
          - description: 'Active memeory

              '
            format: bytes
            name: active
            type: long
          - description: 'Resident memory

              '
            format: bytes
            name: resident
            type: long
          - description: 'Fragmentation ratio

              '
            name: fragmentation.ratio
            type: float
          - description: 'Fragmented bytes

              '
            format: bytes
            name: fragmentation.bytes
            type: long
          - description: 'Resident ratio

              '
            name: rss.ratio
            type: float
          - description: 'Resident bytes

              '
            format: bytes
            name: rss.bytes
            type: long
          name: allocator_stats
          type: group
        name: memory
        type: group
      - description: 'Redis CPU stats.

          '
        fields:
        - description: 'Flag indicating if the load of a dump file is on-going

            '
          name: loading
          type: boolean
        - description: 'Provides information about RDB persistence

            '
          fields:
          - description: 'Number of changes since the last dump

              '
            name: last_save.changes_since
            type: long
          - description: 'Epoch-based timestamp of last successful RDB save

              '
            name: last_save.time
            type: long
          - description: 'Flag indicating a RDB save is on-going

              '
            name: bgsave.in_progress
            type: boolean
          - description: 'Status of the last RDB save operation

              '
            name: bgsave.last_status
            type: keyword
          - description: 'Duration of the last RDB save operation in seconds

              '
            format: duration
            name: bgsave.last_time.sec
            type: long
          - description: 'Duration of the on-going RDB save operation if any

              '
            format: duration
            name: bgsave.current_time.sec
            type: long
          - description: "The size in bytes of copy-on-write allocations during the\
              \ last RBD save operation                \n"
            format: bytes
            name: copy_on_write.last_size
            type: long
          name: rdb
          type: group
        - description: 'Provides information about AOF persitence

            '
          fields:
          - description: 'Flag indicating AOF logging is activated

              '
            name: enabled
            type: boolean
          - description: 'Flag indicating a AOF rewrite operation is on-going

              '
            name: rewrite.in_progress
            type: boolean
          - description: 'Flag indicating an AOF rewrite operation will be scheduled
              once the on-going RDB save is complete.

              '
            name: rewrite.scheduled
            type: boolean
          - description: 'Duration of the last AOF rewrite operation in seconds

              '
            format: duration
            name: rewrite.last_time.sec
            type: long
          - description: 'Duration of the on-going AOF rewrite operation if any

              '
            format: duration
            name: rewrite.current_time.sec
            type: long
          - description: 'Size of the AOF rewrite buffer

              '
            format: bytes
            name: rewrite.buffer.size
            type: long
          - description: 'Status of the last AOF rewrite operatio

              '
            name: bgrewrite.last_status
            type: keyword
          - description: 'Status of the last write operation to the AOF

              '
            name: write.last_status
            type: keyword
          - description: 'The size in bytes of copy-on-write allocations during the
              last RBD save operation

              '
            format: bytes
            name: copy_on_write.last_size
            type: long
          - description: 'Size of the AOF buffer

              '
            format: bytes
            name: buffer.size
            type: long
          - description: "AOF current file size             \n"
            format: bytes
            name: size.current
            type: long
          - description: 'AOF file size on latest startup or rewrite

              '
            format: bytes
            name: size.base
            type: long
          - description: 'Number of fsync pending jobs in background I/O queue

              '
            name: fsync.pending
            type: long
          - description: 'Delayed fsync counter

              '
            name: fsync.delayed
            type: long
          name: aof
          type: group
        name: persistence
        type: group
      - description: 'Replication

          '
        fields:
        - description: 'Role of the instance (can be "master", or "slave").

            '
          name: role
          type: keyword
        - description: 'Number of connected slaves

            '
          name: connected_slaves
          type: long
        - deprecated: 6.5
          description: 'The server''s current replication offset

            '
          name: master_offset
          type: long
        - description: 'Flag indicating replication backlog is active

            '
          name: backlog.active
          type: long
        - description: 'Total size in bytes of the replication backlog buffer

            '
          format: bytes
          name: backlog.size
          type: long
        - description: "The master offset of the replication backlog buffer      \
            \    \n"
          name: backlog.first_byte_offset
          type: long
        - description: 'Size in bytes of the data in the replication backlog buffer

            '
          name: backlog.histlen
          type: long
        - description: 'The server''s current replication offset

            '
          name: master.offset
          type: long
        - description: 'The offset up to which replication IDs are accepted

            '
          name: master.second_offset
          type: long
        - description: 'Status of the link (up/down)

            '
          name: master.link_status
          type: keyword
        - description: 'Number of seconds since the last interaction with master

            '
          format: duration
          name: master.last_io_seconds_ago
          type: long
        - description: 'Indicate the master is syncing to the slave

            '
          name: master.sync.in_progress
          type: boolean
        - description: 'Number of bytes left before syncing is complete

            '
          format: bytes
          name: master.sync.left_bytes
          type: long
        - description: 'Number of seconds since last transfer I/O during a SYNC operation

            '
          format: duration
          name: master.sync.last_io_seconds_ago
          type: long
        - description: 'The replication offset of the slave instance

            '
          name: slave.offset
          type: long
        - description: 'The priority of the instance as a candidate for failover

            '
          name: slave.priority
          type: long
        - description: 'Flag indicating if the slave is read-only

            '
          name: slave.is_readonly
          type: boolean
        name: replication
        type: group
      - description: 'Server info

          '
        fields:
        - description: null
          migration: true
          name: version
          path: service.version
          type: alias
        - description: null
          name: git_sha1
          type: keyword
        - description: null
          name: git_dirty
          type: keyword
        - description: null
          name: build_id
          type: keyword
        - description: null
          name: mode
          type: keyword
        - description: null
          migration: true
          name: os
          path: os.full
          type: alias
        - description: null
          name: arch_bits
          type: keyword
        - description: null
          name: multiplexing_api
          type: keyword
        - description: null
          name: gcc_version
          type: keyword
        - description: null
          migration: true
          name: process_id
          path: process.pid
          type: alias
        - description: null
          name: run_id
          type: keyword
        - description: null
          name: tcp_port
          type: long
        - description: null
          name: uptime
          type: long
        - description: null
          name: hz
          type: long
        - description: null
          name: lru_clock
          type: long
        - description: null
          name: config_file
          type: keyword
        name: server
        type: group
      - description: 'Redis stats.

          '
        fields:
        - description: Total number of connections received.
          name: connections.received
          type: long
        - description: Total number of connections rejected.
          name: connections.rejected
          type: long
        - description: Total number of commands processed.
          name: commands_processed
          type: long
        - description: Total network input in bytes.
          name: net.input.bytes
          type: long
        - description: Total network output in bytes.
          name: net.output.bytes
          type: long
        - description: 'Number of commands processed per second

            '
          name: instantaneous.ops_per_sec
          type: long
        - description: 'The network''s read rate per second in KB/sec

            '
          name: instantaneous.input_kbps
          type: scaled_float
        - description: 'The network''s write rate per second in KB/sec

            '
          name: instantaneous.output_kbps
          type: scaled_float
        - description: 'The number of full resyncs with slaves

            '
          name: sync.full
          type: long
        - description: 'The number of accepted partial resync requests

            '
          name: sync.partial.ok
          type: long
        - description: 'The number of denied partial resync requests

            '
          name: sync.partial.err
          type: long
        - description: 'Total number of key expiration events

            '
          name: keys.expired
          type: long
        - description: 'Number of evicted keys due to maxmemory limit

            '
          name: keys.evicted
          type: long
        - description: 'Number of successful lookup of keys in the main dictionary

            '
          name: keyspace.hits
          type: long
        - description: 'Number of failed lookup of keys in the main dictionary

            '
          name: keyspace.misses
          type: long
        - description: 'Global number of pub/sub channels with client subscriptions

            '
          name: pubsub.channels
          type: long
        - description: 'Global number of pub/sub pattern with client subscriptions

            '
          name: pubsub.patterns
          type: long
        - description: 'Duration of the latest fork operation in microseconds

            '
          name: latest_fork_usec
          type: long
        - description: 'The number of sockets open for MIGRATE purposes

            '
          name: migrate_cached_sockets
          type: long
        - description: 'The number of keys tracked for expiry purposes (applicable
            only to writable slaves)

            '
          name: slave_expires_tracked_keys
          type: long
        - description: 'Number of value reallocations performed by active the defragmentation
            process

            '
          name: active_defrag.hits
          type: long
        - description: 'Number of aborted value reallocations started by the active
            defragmentation process

            '
          name: active_defrag.misses
          type: long
        - description: 'Number of keys that were actively defragmented

            '
          name: active_defrag.key_hits
          type: long
        - description: 'Number of keys that were skipped by the active defragmentation
            process

            '
          name: active_defrag.key_misses
          type: long
        name: stats
        type: group
      - description: 'Count of slow operations

          '
        name: slowlog.count
        type: long
      name: info
      release: ga
      type: group
    - description: '`key` contains information about keys.

        '
      fields:
      - description: 'Key name.

          '
        name: name
        type: keyword
      - description: 'Unique id for this key (With the form <keyspace>:<name>).

          '
        name: id
        type: keyword
      - description: 'Key type as shown by `TYPE` command.

          '
        name: type
        type: keyword
      - description: 'Length of the key (Number of elements for lists, length for
          strings, cardinality for sets).

          '
        name: length
        type: long
      - description: 'Seconds to expire.

          '
        name: expire.ttl
        type: long
      name: key
      release: ga
      type: group
    - description: '`keyspace` contains the information about the keyspaces returned
        by the `INFO` command.

        '
      fields:
      - description: 'Keyspace identifier.

          '
        name: id
        type: keyword
      - description: 'Average ttl.

          '
        name: avg_ttl
        type: long
      - description: 'Number of keys in the keyspace.

          '
        name: keys
        type: long
      - description: ''
        name: expires
        type: long
      name: keyspace
      release: ga
      type: group
    name: redis
    type: group
  key: redis
  release: ga
  title: Redis
- description: 'System status metrics, like CPU and memory usage, that are collected
    from the operating system.

    '
  fields:
  - description: '`system` contains local system metrics.

      '
    fields:
    - description: '`system-core` contains CPU metrics for a single core of a multi-core
        system.

        '
      fields:
      - description: 'CPU Core number.

          '
        name: id
        type: long
      - description: 'The percentage of CPU time spent in user space.

          '
        format: percent
        name: user.pct
        type: scaled_float
      - description: 'The amount of CPU time spent in user space.

          '
        name: user.ticks
        type: long
      - description: 'The percentage of CPU time spent in kernel space.

          '
        format: percent
        name: system.pct
        type: scaled_float
      - description: 'The amount of CPU time spent in kernel space.

          '
        name: system.ticks
        type: long
      - description: 'The percentage of CPU time spent on low-priority processes.

          '
        format: percent
        name: nice.pct
        type: scaled_float
      - description: 'The amount of CPU time spent on low-priority processes.

          '
        name: nice.ticks
        type: long
      - description: 'The percentage of CPU time spent idle.

          '
        format: percent
        name: idle.pct
        type: scaled_float
      - description: 'The amount of CPU time spent idle.

          '
        name: idle.ticks
        type: long
      - description: 'The percentage of CPU time spent in wait (on disk).

          '
        format: percent
        name: iowait.pct
        type: scaled_float
      - description: 'The amount of CPU time spent in wait (on disk).

          '
        name: iowait.ticks
        type: long
      - description: 'The percentage of CPU time spent servicing and handling hardware
          interrupts.

          '
        format: percent
        name: irq.pct
        type: scaled_float
      - description: 'The amount of CPU time spent servicing and handling hardware
          interrupts.

          '
        name: irq.ticks
        type: long
      - description: 'The percentage of CPU time spent servicing and handling software
          interrupts.

          '
        format: percent
        name: softirq.pct
        type: scaled_float
      - description: 'The amount of CPU time spent servicing and handling software
          interrupts.

          '
        name: softirq.ticks
        type: long
      - description: 'The percentage of CPU time spent in involuntary wait by the
          virtual CPU while the hypervisor was servicing another processor. Available
          only on Unix.

          '
        format: percent
        name: steal.pct
        type: scaled_float
      - description: 'The amount of CPU time spent in involuntary wait by the virtual
          CPU while the hypervisor was servicing another processor. Available only
          on Unix.

          '
        name: steal.ticks
        type: long
      name: core
      release: ga
      type: group
    - description: '`cpu` contains local CPU stats.

        '
      fields:
      - description: 'The number of CPU cores present on the host. The non-normalized
          percentages will have a maximum value of `100% * cores`. The normalized
          percentages already take this value into account and have a maximum value
          of 100%.

          '
        name: cores
        type: long
      - description: 'The percentage of CPU time spent in user space. On multi-core
          systems, you can have percentages that are greater than 100%. For example,
          if 3 cores are at 60% use, then the `system.cpu.user.pct` will be 180%.

          '
        format: percent
        name: user.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent in kernel space.

          '
        format: percent
        name: system.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent on low-priority processes.

          '
        format: percent
        name: nice.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent idle.

          '
        format: percent
        name: idle.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent in wait (on disk).

          '
        format: percent
        name: iowait.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent servicing and handling hardware
          interrupts.

          '
        format: percent
        name: irq.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent servicing and handling software
          interrupts.

          '
        format: percent
        name: softirq.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent in involuntary wait by the
          virtual CPU while the hypervisor was servicing another processor. Available
          only on Unix.

          '
        format: percent
        name: steal.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent in states other than Idle and
          IOWait.

          '
        format: percent
        name: total.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent in user space.

          '
        format: percent
        name: user.norm.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent in kernel space.

          '
        format: percent
        name: system.norm.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent on low-priority processes.

          '
        format: percent
        name: nice.norm.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent idle.

          '
        format: percent
        name: idle.norm.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent in wait (on disk).

          '
        format: percent
        name: iowait.norm.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent servicing and handling hardware
          interrupts.

          '
        format: percent
        name: irq.norm.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent servicing and handling software
          interrupts.

          '
        format: percent
        name: softirq.norm.pct
        type: scaled_float
      - description: 'The percentage of CPU time spent in involuntary wait by the
          virtual CPU while the hypervisor was servicing another processor. Available
          only on Unix.

          '
        format: percent
        name: steal.norm.pct
        type: scaled_float
      - description: 'The percentage of CPU time in states other than Idle and IOWait,
          normalised by the number of cores.

          '
        format: percent
        name: total.norm.pct
        type: scaled_float
      - description: 'The amount of CPU time spent in user space.

          '
        name: user.ticks
        type: long
      - description: 'The amount of CPU time spent in kernel space.

          '
        name: system.ticks
        type: long
      - description: 'The amount of CPU time spent on low-priority processes.

          '
        name: nice.ticks
        type: long
      - description: 'The amount of CPU time spent idle.

          '
        name: idle.ticks
        type: long
      - description: 'The amount of CPU time spent in wait (on disk).

          '
        name: iowait.ticks
        type: long
      - description: 'The amount of CPU time spent servicing and handling hardware
          interrupts.

          '
        name: irq.ticks
        type: long
      - description: 'The amount of CPU time spent servicing and handling software
          interrupts.

          '
        name: softirq.ticks
        type: long
      - description: 'The amount of CPU time spent in involuntary wait by the virtual
          CPU while the hypervisor was servicing another processor. Available only
          on Unix.

          '
        name: steal.ticks
        type: long
      name: cpu
      release: ga
      type: group
    - description: '`disk` contains disk IO metrics collected from the operating system.

        '
      fields:
      - description: 'The disk name.

          '
        example: sda1
        name: name
        type: keyword
      - description: 'The disk''s serial number. This may not be provided by all operating
          systems.

          '
        name: serial_number
        type: keyword
      - description: 'The total number of reads completed successfully.

          '
        name: read.count
        type: long
      - description: 'The total number of writes completed successfully.

          '
        name: write.count
        type: long
      - description: 'The total number of bytes read successfully. On Linux this is
          the number of sectors read multiplied by an assumed sector size of 512.

          '
        format: bytes
        name: read.bytes
        type: long
      - description: 'The total number of bytes written successfully. On Linux this
          is the number of sectors written multiplied by an assumed sector size of
          512.

          '
        format: bytes
        name: write.bytes
        type: long
      - description: 'The total number of milliseconds spent by all reads.

          '
        name: read.time
        type: long
      - description: 'The total number of milliseconds spent by all writes.

          '
        name: write.time
        type: long
      - description: 'The total number of of milliseconds spent doing I/Os.

          '
        name: io.time
        type: long
      - description: 'The number of read requests merged per second that were queued
          to the device.

          '
        name: iostat.read.request.merges_per_sec
        type: float
      - description: 'The number of write requests merged per second that were queued
          to the device.

          '
        name: iostat.write.request.merges_per_sec
        type: float
      - description: 'The number of read requests that were issued to the device per
          second

          '
        name: iostat.read.request.per_sec
        type: float
      - description: 'The number of write requests that were issued to the device
          per second

          '
        name: iostat.write.request.per_sec
        type: float
      - description: 'The number of Bytes read from the device per second.

          '
        format: bytes
        name: iostat.read.per_sec.bytes
        type: float
      - description: 'The average time spent for read requests issued to the device
          to be served.

          '
        name: iostat.read.await
        type: float
      - description: 'The number of Bytes write from the device per second.

          '
        format: bytes
        name: iostat.write.per_sec.bytes
        type: float
      - description: 'The average time spent for write requests issued to the device
          to be served.

          '
        name: iostat.write.await
        type: float
      - description: 'The average size (in bytes) of the requests that were issued
          to the device.

          '
        name: iostat.request.avg_size
        type: float
      - description: 'The average queue length of the requests that were issued to
          the device.

          '
        name: iostat.queue.avg_size
        type: float
      - description: 'The average time spent for requests issued to the device to
          be served.

          '
        name: iostat.await
        type: float
      - description: 'The average service time (in milliseconds) for I/O requests
          that were issued to the device.

          '
        name: iostat.service_time
        type: float
      - description: 'Percentage of CPU time during which I/O requests were issued
          to the device (bandwidth utilization for the device). Device saturation
          occurs when this value is close to 100%.

          '
        name: iostat.busy
        type: float
      name: diskio
      release: ga
      type: group
    - description: 'Available system entropy

        '
      fields:
      - description: 'The available bits of entropy

          '
        name: available_bits
        type: long
      - description: 'The percentage of available entropy, relative to the pool size
          of 4096

          '
        format: percent
        name: pct
        type: scaled_float
      name: entropy
      release: ga
      type: group
    - description: '`filesystem` contains local filesystem stats.

        '
      fields:
      - description: 'The disk space available to an unprivileged user in bytes.

          '
        format: bytes
        name: available
        type: long
      - description: 'The disk name. For example: `/dev/disk1`

          '
        name: device_name
        type: keyword
      - description: 'The disk type. For example: `ext4`

          '
        name: type
        type: keyword
      - description: 'The mounting point. For example: `/`

          '
        name: mount_point
        type: keyword
      - description: 'The total number of file nodes in the file system.

          '
        name: files
        type: long
      - description: 'The disk space available in bytes.

          '
        format: bytes
        name: free
        type: long
      - description: 'The number of free file nodes in the file system.

          '
        name: free_files
        type: long
      - description: 'The total disk space in bytes.

          '
        format: bytes
        name: total
        type: long
      - description: 'The used disk space in bytes.

          '
        format: bytes
        name: used.bytes
        type: long
      - description: 'The percentage of used disk space.

          '
        format: percent
        name: used.pct
        type: scaled_float
      name: filesystem
      release: ga
      type: group
    - description: '`system.fsstat` contains filesystem metrics aggregated from all
        mounted filesystems.

        '
      fields:
      - description: Number of file systems found.
        name: count
        type: long
      - description: Total number of files.
        name: total_files
        type: long
      - description: Nested file system docs.
        fields:
        - description: 'Total free space.

            '
          format: bytes
          name: free
          type: long
        - description: 'Total used space.

            '
          format: bytes
          name: used
          type: long
        - description: 'Total space (used plus free).

            '
          format: bytes
          name: total
          type: long
        format: bytes
        name: total_size
        type: group
      name: fsstat
      release: ga
      type: group
    - description: 'CPU load averages.

        '
      fields:
      - description: 'Load average for the last minute.

          '
        name: '1'
        scaling_factor: 100
        type: scaled_float
      - description: 'Load average for the last 5 minutes.

          '
        name: '5'
        scaling_factor: 100
        type: scaled_float
      - description: 'Load average for the last 15 minutes.

          '
        name: '15'
        scaling_factor: 100
        type: scaled_float
      - description: 'Load for the last minute divided by the number of cores.

          '
        name: norm.1
        scaling_factor: 100
        type: scaled_float
      - description: 'Load for the last 5 minutes divided by the number of cores.

          '
        name: norm.5
        scaling_factor: 100
        type: scaled_float
      - description: 'Load for the last 15 minutes divided by the number of cores.

          '
        name: norm.15
        scaling_factor: 100
        type: scaled_float
      - description: 'The number of CPU cores present on the host.

          '
        name: cores
        type: long
      name: load
      release: ga
      type: group
    - description: '`memory` contains local memory stats.

        '
      fields:
      - description: 'Total memory.

          '
        format: bytes
        name: total
        type: long
      - description: 'Used memory.

          '
        format: bytes
        name: used.bytes
        type: long
      - description: 'The total amount of free memory in bytes. This value does not
          include memory consumed by system caches and buffers (see system.memory.actual.free).

          '
        format: bytes
        name: free
        type: long
      - description: 'The percentage of used memory.

          '
        format: percent
        name: used.pct
        type: scaled_float
      - description: 'Actual memory used and free.

          '
        fields:
        - description: 'Actual used memory in bytes. It represents the difference
            between the total and the available memory. The available memory depends
            on the OS. For more details, please check `system.actual.free`.

            '
          format: bytes
          name: used.bytes
          type: long
        - description: 'Actual free memory in bytes. It is calculated based on the
            OS. On Linux this value will be MemAvailable from /proc/meminfo,  or calculated
            from free memory plus caches and buffers if /proc/meminfo is not available.
            On OSX it is a sum of free memory and the inactive memory. On Windows,
            it is equal to `system.memory.free`.

            '
          format: bytes
          name: free
          type: long
        - description: 'The percentage of actual used memory.

            '
          format: percent
          name: used.pct
          type: scaled_float
        name: actual
        type: group
      - description: This group contains statistics related to the swap memory usage
          on the system.
        fields:
        - description: 'Total swap memory.

            '
          format: bytes
          name: total
          type: long
        - description: 'Used swap memory.

            '
          format: bytes
          name: used.bytes
          type: long
        - description: 'Available swap memory.

            '
          format: bytes
          name: free
          type: long
        - description: count of pages swapped out
          name: out.pages
          type: long
        - description: count of pages swapped in
          name: in.pages
          type: long
        - description: swap readahead pages
          name: readahead.pages
          type: long
        - description: swap readahead cache hits
          name: readahead.cached
          type: long
        - description: 'The percentage of used swap memory.

            '
          format: percent
          name: used.pct
          type: scaled_float
        name: swap
        prefix: '[float]'
        type: group
      - description: memory page statistics
        fields:
        - description: pages scanned by kswapd
          format: number
          name: pgscan_kswapd.pages
          type: long
        - description: pages scanned directly
          format: number
          name: pgscan_direct.pages
          type: long
        - description: pages freed by the system
          format: number
          name: pgfree.pages
          type: long
        - description: number of pages reclaimed by kswapd
          format: number
          name: pgsteal_kswapd.pages
          type: long
        - description: number of pages reclaimed directly
          format: number
          name: pgsteal_direct.pages
          type: long
        - description: direct reclaim efficiency percentage. A lower percentage indicates
            the system is struggling to reclaim memory.
          format: percent
          name: direct_efficiency.pct
          type: scaled_float
        - description: kswapd reclaim efficiency percentage. A lower percentage indicates
            the system is struggling to reclaim memory.
          format: percent
          name: kswapd_efficiency.pct
          type: scaled_float
        name: page_stats
        type: group
      - description: This group contains statistics related to huge pages usage on
          the system.
        fields:
        - description: 'Number of huge pages in the pool.

            '
          format: number
          name: total
          type: long
        - description: 'Memory used in allocated huge pages.

            '
          format: bytes
          name: used.bytes
          type: long
        - description: 'Percentage of huge pages used.

            '
          format: percent
          name: used.pct
          type: long
        - description: 'Number of available huge pages in the pool.

            '
          format: number
          name: free
          type: long
        - description: 'Number of reserved but not allocated huge pages in the pool.

            '
          format: number
          name: reserved
          type: long
        - description: 'Number of overcommited huge pages.

            '
          format: number
          name: surplus
          type: long
        - description: 'Default size for huge pages.

            '
          format: bytes
          name: default_size
          type: long
        - description: huge pages swapped out
          fields:
          - description: pages swapped out
            name: pages
            type: long
          - description: Count of huge pages that must be split before swapout
            name: fallback
            type: long
          name: swap.out
          type: group
        name: hugepages
        prefix: '[float]'
        type: group
      name: memory
      release: ga
      type: group
    - description: '`network` contains network IO metrics for a single network interface.

        '
      fields:
      - description: 'The network interface name.

          '
        example: eth0
        name: name
        type: keyword
      - description: 'The number of bytes sent.

          '
        format: bytes
        name: out.bytes
        type: long
      - description: 'The number of bytes received.

          '
        format: bytes
        name: in.bytes
        type: long
      - description: 'The number of packets sent.

          '
        name: out.packets
        type: long
      - description: 'The number or packets received.

          '
        name: in.packets
        type: long
      - description: 'The number of errors while receiving.

          '
        name: in.errors
        type: long
      - description: 'The number of errors while sending.

          '
        name: out.errors
        type: long
      - description: 'The number of incoming packets that were dropped.

          '
        name: in.dropped
        type: long
      - description: 'The number of outgoing packets that were dropped. This value
          is always 0 on Darwin and BSD because it is not reported by the operating
          system.

          '
        name: out.dropped
        type: long
      name: network
      release: ga
      type: group
    - description: 'Metrics relating to global network activity

        '
      fields:
      - description: 'IP counters

          '
        name: ip.*
        type: object
      - description: 'TCP counters

          '
        name: tcp.*
        type: object
      - description: 'UDP counters

          '
        name: udp.*
        type: object
      - description: 'UDP Lite counters

          '
        name: udp_lite.*
        type: object
      - description: 'ICMP counters

          '
        name: icmp.*
        type: object
      name: network_summary
      release: beta
      type: group
    - description: '`process` contains process metadata, CPU metrics, and memory metrics.

        '
      fields:
      - migration: true
        name: name
        path: process.name
        type: alias
      - description: 'The process state. For example: "running".

          '
        name: state
        type: keyword
      - migration: true
        name: pid
        path: process.pid
        type: alias
      - migration: true
        name: ppid
        path: process.ppid
        type: alias
      - migration: true
        name: pgid
        path: process.pgid
        type: alias
      - description: 'The full command-line used to start the process, including the
          arguments separated by space.

          '
        ignore_above: 2048
        name: cmdline
        type: keyword
      - migration: true
        name: username
        path: user.name
        type: alias
      - migration: true
        name: cwd
        path: process.working_directory
        type: alias
      - description: 'The environment variables used to start the process. The data
          is available on FreeBSD, Linux, and OS X.

          '
        name: env
        object_type: keyword
        type: object
      - description: CPU-specific statistics per process.
        fields:
        - description: 'The amount of CPU time the process spent in user space.

            '
          name: user.ticks
          type: long
        - description: 'The value of CPU usage since starting the process.

            '
          name: total.value
          type: long
        - description: 'The percentage of CPU time spent by the process since the
            last update. Its value is similar to the %CPU value of the process displayed
            by the top command on Unix systems.

            '
          format: percent
          name: total.pct
          type: scaled_float
        - description: 'The percentage of CPU time spent by the process since the
            last event. This value is normalized by the number of CPU cores and it
            ranges from 0 to 100%.

            '
          format: percent
          name: total.norm.pct
          type: scaled_float
        - description: 'The amount of CPU time the process spent in kernel space.

            '
          name: system.ticks
          type: long
        - description: 'The total CPU time spent by the process.

            '
          name: total.ticks
          type: long
        - description: 'The time when the process was started.

            '
          name: start_time
          type: date
        name: cpu
        prefix: '[float]'
        type: group
      - description: Memory-specific statistics per process.
        fields:
        - description: 'The total virtual memory the process has. On Windows this
            represents the Commit Charge (the total amount of memory that the memory
            manager has committed for a running process) value in bytes for this process.

            '
          format: bytes
          name: size
          type: long
        - description: 'The Resident Set Size. The amount of memory the process occupied
            in main memory (RAM). On Windows this represents the current working set
            size, in bytes.

            '
          format: bytes
          name: rss.bytes
          type: long
        - description: 'The percentage of memory the process occupied in main memory
            (RAM).

            '
          format: percent
          name: rss.pct
          type: scaled_float
        - description: 'The shared memory the process uses.

            '
          format: bytes
          name: share
          type: long
        name: memory
        prefix: '[float]'
        type: group
      - description: 'File descriptor usage metrics. This set of metrics is available
          for Linux and FreeBSD.

          '
        fields:
        - description: The number of file descriptors open by the process.
          name: open
          type: long
        - description: 'The soft limit on the number of file descriptors opened by
            the process. The soft limit can be changed by the process at any time.

            '
          name: limit.soft
          type: long
        - description: 'The hard limit on the number of file descriptors opened by
            the process. The hard limit can only be raised by root.

            '
          name: limit.hard
          type: long
        name: fd
        prefix: '[float]'
        type: group
      - description: 'Metrics and limits from the cgroup of which the task is a member.
          cgroup metrics are reported when the process has membership in a non-root
          cgroup. These metrics are only available on Linux.

          '
        fields:
        - description: 'The ID common to all cgroups associated with this task. If
            there isn''t a common ID used by all cgroups this field will be absent.

            '
          name: id
          type: keyword
        - description: 'The path to the cgroup relative to the cgroup subsystem''s
            mountpoint. If there isn''t a common path used by all cgroups this field
            will be absent.

            '
          name: path
          type: keyword
        - description: 'The cpu subsystem schedules CPU access for tasks in the cgroup.
            Access can be controlled by two separate schedulers, CFS and RT. CFS stands
            for completely fair scheduler which proportionally divides the CPU time
            between cgroups based on weight. RT stands for real time scheduler which
            sets a maximum amount of CPU time that processes in the cgroup can consume
            during a given period.

            '
          fields:
          - description: ID of the cgroup.
            name: id
            type: keyword
          - description: 'Path to the cgroup relative to the cgroup subsystem''s mountpoint.

              '
            name: path
            type: keyword
          - description: 'Period of time in microseconds for how regularly a cgroup''s
              access to CPU resources should be reallocated.

              '
            name: cfs.period.us
            type: long
          - description: 'Total amount of time in microseconds for which all tasks
              in a cgroup can run during one period (as defined by cfs.period.us).

              '
            name: cfs.quota.us
            type: long
          - description: 'An integer value that specifies a relative share of CPU
              time available to the tasks in a cgroup. The value specified in the
              cpu.shares file must be 2 or higher.

              '
            name: cfs.shares
            type: long
          - description: 'Period of time in microseconds for how regularly a cgroup''s
              access to CPU resources is reallocated.

              '
            name: rt.period.us
            type: long
          - description: 'Period of time in microseconds for the longest continuous
              period in which the tasks in a cgroup have access to CPU resources.

              '
            name: rt.runtime.us
            type: long
          - description: 'Number of period intervals (as specified in cpu.cfs.period.us)
              that have elapsed.

              '
            name: stats.periods
            type: long
          - description: 'Number of times tasks in a cgroup have been throttled (that
              is, not allowed to run because they have exhausted all of the available
              time as specified by their quota).

              '
            name: stats.throttled.periods
            type: long
          - description: 'The total time duration (in nanoseconds) for which tasks
              in a cgroup have been throttled.

              '
            name: stats.throttled.ns
            type: long
          name: cpu
          type: group
        - description: CPU accounting metrics.
          fields:
          - description: ID of the cgroup.
            name: id
            type: keyword
          - description: 'Path to the cgroup relative to the cgroup subsystem''s mountpoint.

              '
            name: path
            type: keyword
          - description: 'Total CPU time in nanoseconds consumed by all tasks in the
              cgroup.

              '
            name: total.ns
            type: long
          - description: CPU time consumed by tasks in user mode.
            name: stats.user.ns
            type: long
          - description: CPU time consumed by tasks in user (kernel) mode.
            name: stats.system.ns
            type: long
          - description: 'CPU time (in nanoseconds) consumed on each CPU by all tasks
              in this cgroup.

              '
            name: percpu
            object_type: long
            type: object
          name: cpuacct
          type: group
        - description: Memory limits and metrics.
          fields:
          - description: ID of the cgroup.
            name: id
            type: keyword
          - description: 'Path to the cgroup relative to the cgroup subsystem''s mountpoint.

              '
            name: path
            type: keyword
          - description: 'Total memory usage by processes in the cgroup (in bytes).

              '
            format: bytes
            name: mem.usage.bytes
            type: long
          - description: 'The maximum memory used by processes in the cgroup (in bytes).

              '
            format: bytes
            name: mem.usage.max.bytes
            type: long
          - description: 'The maximum amount of user memory in bytes (including file
              cache) that tasks in the cgroup are allowed to use.

              '
            format: bytes
            name: mem.limit.bytes
            type: long
          - description: 'The number of times that the memory limit (mem.limit.bytes)
              was reached.

              '
            name: mem.failures
            type: long
          - description: 'The sum of current memory usage plus swap space used by
              processes in the cgroup (in bytes).

              '
            format: bytes
            name: memsw.usage.bytes
            type: long
          - description: 'The maximum amount of memory and swap space used by processes
              in the cgroup (in bytes).

              '
            format: bytes
            name: memsw.usage.max.bytes
            type: long
          - description: 'The maximum amount for the sum of memory and swap usage
              that tasks in the cgroup are allowed to use.

              '
            format: bytes
            name: memsw.limit.bytes
            type: long
          - description: 'The number of times that the memory plus swap space limit
              (memsw.limit.bytes) was reached.

              '
            name: memsw.failures
            type: long
          - description: 'Total kernel memory usage by processes in the cgroup (in
              bytes).

              '
            format: bytes
            name: kmem.usage.bytes
            type: long
          - description: 'The maximum kernel memory used by processes in the cgroup
              (in bytes).

              '
            format: bytes
            name: kmem.usage.max.bytes
            type: long
          - description: 'The maximum amount of kernel memory that tasks in the cgroup
              are allowed to use.

              '
            format: bytes
            name: kmem.limit.bytes
            type: long
          - description: 'The number of times that the memory limit (kmem.limit.bytes)
              was reached.

              '
            name: kmem.failures
            type: long
          - description: 'Total memory usage for TCP buffers in bytes.

              '
            format: bytes
            name: kmem_tcp.usage.bytes
            type: long
          - description: 'The maximum memory used for TCP buffers by processes in
              the cgroup (in bytes).

              '
            format: bytes
            name: kmem_tcp.usage.max.bytes
            type: long
          - description: 'The maximum amount of memory for TCP buffers that tasks
              in the cgroup are allowed to use.

              '
            format: bytes
            name: kmem_tcp.limit.bytes
            type: long
          - description: 'The number of times that the memory limit (kmem_tcp.limit.bytes)
              was reached.

              '
            name: kmem_tcp.failures
            type: long
          - description: 'Anonymous and swap cache on active least-recently-used (LRU)
              list, including tmpfs (shmem), in bytes.

              '
            format: bytes
            name: stats.active_anon.bytes
            type: long
          - description: File-backed memory on active LRU list, in bytes.
            format: bytes
            name: stats.active_file.bytes
            type: long
          - description: Page cache, including tmpfs (shmem), in bytes.
            format: bytes
            name: stats.cache.bytes
            type: long
          - description: 'Memory limit for the hierarchy that contains the memory
              cgroup, in bytes.

              '
            format: bytes
            name: stats.hierarchical_memory_limit.bytes
            type: long
          - description: 'Memory plus swap limit for the hierarchy that contains the
              memory cgroup, in bytes.

              '
            format: bytes
            name: stats.hierarchical_memsw_limit.bytes
            type: long
          - description: 'Anonymous and swap cache on inactive LRU list, including
              tmpfs (shmem), in bytes

              '
            format: bytes
            name: stats.inactive_anon.bytes
            type: long
          - description: 'File-backed memory on inactive LRU list, in bytes.

              '
            format: bytes
            name: stats.inactive_file.bytes
            type: long
          - description: 'Size of memory-mapped mapped files, including tmpfs (shmem),
              in bytes.

              '
            format: bytes
            name: stats.mapped_file.bytes
            type: long
          - description: 'Number of times that a process in the cgroup triggered a
              page fault.

              '
            name: stats.page_faults
            type: long
          - description: 'Number of times that a process in the cgroup triggered a
              major fault. "Major" faults happen when the kernel actually has to read
              the data from disk.

              '
            name: stats.major_page_faults
            type: long
          - description: 'Number of pages paged into memory. This is a counter.

              '
            name: stats.pages_in
            type: long
          - description: 'Number of pages paged out of memory. This is a counter.

              '
            name: stats.pages_out
            type: long
          - description: 'Anonymous and swap cache (includes transparent hugepages),
              not including tmpfs (shmem), in bytes.

              '
            format: bytes
            name: stats.rss.bytes
            type: long
          - description: 'Number of bytes of anonymous transparent hugepages.

              '
            format: bytes
            name: stats.rss_huge.bytes
            type: long
          - description: 'Swap usage, in bytes.

              '
            format: bytes
            name: stats.swap.bytes
            type: long
          - description: 'Memory that cannot be reclaimed, in bytes.

              '
            format: bytes
            name: stats.unevictable.bytes
            type: long
          name: memory
          type: group
        - description: Block IO metrics.
          fields:
          - description: ID of the cgroup.
            name: id
            type: keyword
          - description: 'Path to the cgroup relative to the cgroup subsystems mountpoint.

              '
            name: path
            type: keyword
          - description: 'Total number of bytes transferred to and from all block
              devices by processes in the cgroup.

              '
            format: bytes
            name: total.bytes
            type: long
          - description: 'Total number of I/O operations performed on all devices
              by processes in the cgroup as seen by the throttling policy.

              '
            name: total.ios
            type: long
          name: blkio
          type: group
        name: cgroup
        type: group
      name: process
      release: ga
      type: group
    - description: 'Summary metrics for the processes running on the host.

        '
      fields:
      - description: 'Total number of processes on this host.

          '
        name: total
        type: long
      - description: 'Number of running processes on this host.

          '
        name: running
        type: long
      - description: 'Number of idle processes on this host.

          '
        name: idle
        type: long
      - description: 'Number of sleeping processes on this host.

          '
        name: sleeping
        type: long
      - description: 'Number of stopped processes on this host.

          '
        name: stopped
        type: long
      - description: 'Number of zombie processes on this host.

          '
        name: zombie
        type: long
      - description: 'Number of dead processes on this host. It''s very unlikely that
          it will appear but in some special situations it may happen.

          '
        name: dead
        type: long
      - description: 'Number of processes for which the state couldn''t be retrieved
          or is unknown.

          '
        name: unknown
        type: long
      name: process.summary
      release: ga
      title: Process Summary
      type: group
    - description: 'raid

        '
      fields:
      - description: 'Name of the device.

          '
        name: name
        type: keyword
      - description: 'activity-state of the device.

          '
        name: status
        type: keyword
      - description: 'The raid level of the device

          '
        name: level
        type: keyword
      - description: "Current sync action, if the RAID array is redundant \n"
        name: sync_action
        type: keyword
      - description: 'Number of active disks.

          '
        name: disks.active
        type: long
      - description: 'Total number of disks the device consists of.

          '
        name: disks.total
        type: long
      - description: 'Number of spared disks.

          '
        name: disks.spare
        type: long
      - description: 'Number of failed disks.

          '
        name: disks.failed
        type: long
      - description: 'map of raw disk states

          '
        name: disks.states.*
        object_type: keyword
        type: object
      - description: 'Number of blocks the device holds, in 1024-byte blocks.

          '
        name: blocks.total
        type: long
      - description: 'Number of blocks on the device that are in sync, in 1024-byte
          blocks.

          '
        name: blocks.synced
        type: long
      name: raid
      release: ga
      type: group
    - description: 'metrics for system services

        '
      fields:
      - description: The name of the service
        name: name
        type: keyword
      - description: The load state of the service
        name: load_state
        type: keyword
      - description: The activity state of the service
        name: state
        type: keyword
      - description: The sub-state of the service
        name: sub_state
        type: keyword
      - description: The timestamp of the last state change. If the service is active
          and running, this is its uptime.
        name: state_since
        type: date
      - description: The SIGCHLD code from the service's main process
        name: exec_code
        type: keyword
      - description: system metrics associated with the service
        fields:
        - description: CPU usage in nanoseconds
          name: cpu.usage.ns
          type: long
        - description: memory usage in bytes
          name: memory.usage.bytes
          type: long
        - description: number of tasks associated with the service
          name: tasks.count
          type: long
        - description: network resource usage
          fields:
          - description: bytes in
            format: bytes
            name: in.bytes
            type: long
          - description: packets in
            format: bytes
            name: in.packets
            type: long
          - description: packets out
            name: out.packets
            type: long
          - description: bytes out
            name: out.bytes
            type: long
          name: network
          type: group
        name: resources
        type: group
      name: service
      release: beta
      type: group
    - description: 'TCP sockets that are active.

        '
      fields:
      - migration: true
        name: direction
        path: network.direction
        type: alias
      - migration: true
        name: family
        path: network.type
        type: alias
      - description: 'Local IP address. This can be an IPv4 or IPv6 address.

          '
        example: 192.0.2.1 or 2001:0DB8:ABED:8536::1
        name: local.ip
        type: ip
      - description: 'Local port.

          '
        example: 22
        name: local.port
        type: long
      - description: 'Remote IP address. This can be an IPv4 or IPv6 address.

          '
        example: 192.0.2.1 or 2001:0DB8:ABED:8536::1
        name: remote.ip
        type: ip
      - description: 'Remote port.

          '
        example: 22
        name: remote.port
        type: long
      - description: 'PTR record associated with the remote IP. It is obtained via
          reverse IP lookup.

          '
        example: 76-211-117-36.nw.example.com.
        name: remote.host
        type: keyword
      - description: 'The effective top-level domain (eTLD) of the remote host plus
          one more label. For example, the eTLD+1 for "foo.bar.golang.org." is "golang.org.".
          The data for determining the eTLD comes from an embedded copy of the data
          from http://publicsuffix.org.

          '
        example: example.com.
        name: remote.etld_plus_one
        type: keyword
      - description: 'Error describing the cause of the reverse lookup failure.

          '
        name: remote.host_error
        type: keyword
      - migration: true
        name: process.pid
        path: process.pid
        type: alias
      - migration: true
        name: process.command
        path: process.name
        type: alias
      - description: 'Full command line

          '
        name: process.cmdline
        type: keyword
      - migration: true
        name: process.exe
        path: process.executable
        type: alias
      - migration: true
        name: user.id
        path: user.id
        type: alias
      - migration: true
        name: user.name
        path: user.full_name
        type: alias
      name: socket
      release: ga
      type: group
    - description: 'Summary metrics of open sockets in the host system

        '
      fields:
      - description: 'All connections

          '
        fields:
        - description: 'All open connections

            '
          name: count
          type: integer
        - description: 'All listening ports

            '
          name: listening
          type: integer
        name: all
        type: group
      - description: 'All TCP connections

          '
        fields:
        - description: "Memory used by TCP sockets in bytes, based on number of allocated\
            \ pages and system page size. Corresponds to limits set in /proc/sys/net/ipv4/tcp_mem.\
            \ Only available on Linux. \n"
          format: bytes
          name: memory
          type: integer
        - description: 'All TCP connections

            '
          fields:
          - description: 'A count of all orphaned tcp sockets. Only available on Linux.

              '
            name: orphan
            type: integer
          - description: 'All open TCP connections

              '
            name: count
            type: integer
          - description: 'All TCP listening ports

              '
            name: listening
            type: integer
          - description: 'Number of established TCP connections

              '
            name: established
            type: integer
          - description: 'Number of TCP connections in _close_wait_ state

              '
            name: close_wait
            type: integer
          - description: 'Number of TCP connections in _time_wait_ state

              '
            name: time_wait
            type: integer
          name: all
          type: group
        name: tcp
        type: group
      - description: 'All UDP connections

          '
        fields:
        - description: "Memory used by UDP sockets in bytes, based on number of allocated\
            \ pages and system page size. Corresponds to limits set in /proc/sys/net/ipv4/udp_mem.\
            \ Only available on Linux. \n"
          format: bytes
          name: memory
          type: integer
        - description: 'All UDP connections

            '
          fields:
          - description: 'All open UDP connections

              '
            name: count
            type: integer
          name: all
          type: group
        name: udp
        type: group
      name: socket.summary
      release: ga
      title: Socket summary
      type: group
    - description: '`uptime` contains the operating system uptime metric.

        '
      fields:
      - description: 'The OS uptime in milliseconds.

          '
        format: duration
        input_format: milliseconds
        name: duration.ms
        type: long
      name: uptime
      release: ga
      type: group
    - description: 'Logged-in user session data

        '
      fields:
      - description: 'The ID of the session

          '
        name: id
        type: keyword
      - description: 'An associated logind seat

          '
        name: seat
        type: keyword
      - description: 'The DBus object path of the session

          '
        name: path
        type: keyword
      - description: 'The type of the user session

          '
        name: type
        type: keyword
      - description: 'A session associated with the service

          '
        name: service
        type: keyword
      - description: 'A bool indicating a remote session

          '
        name: remote
        type: boolean
      - description: 'The current state of the session

          '
        name: state
        type: keyword
      - description: 'The associated systemd scope

          '
        name: scope
        type: keyword
      - description: 'The root PID of the session

          '
        name: leader
        type: long
      - description: 'A remote host address for the session

          '
        name: remote_host
        type: keyword
      name: users
      release: beta
      type: group
    name: system
    type: group
  key: system
  release: ga
  short_config: true
  title: System
- description: 'Traefik reverse proxy / load balancer metrics

    '
  fields:
  - description: 'Traefik reverse proxy / load balancer metrics

      '
    fields:
    - description: 'Metrics obtained from Traefik''s health API endpoint

        '
      fields:
      - description: 'Uptime of Traefik instance in seconds

          '
        name: uptime.sec
        type: long
      - description: 'Response metrics

          '
        fields:
        - description: 'Number of responses

            '
          name: count
          type: long
        - description: 'Average response time in microseconds

            '
          name: avg_time.us
          type: long
        - description: 'Number of responses per status code

            '
          name: status_codes.*
          object_type: long
          type: object
        name: response
        type: group
      name: health
      release: ga
      type: group
    name: traefik
    type: group
  key: traefik
  release: ga
  title: Traefik
- description: 'uwsgi module

    '
  fields:
  - description: ''
    fields:
    - description: 'uwsgi.status metricset fields

        '
      fields:
      - description: 'Total requests handled

          '
        name: total.requests
        type: long
      - description: 'Total exceptions

          '
        name: total.exceptions
        type: long
      - description: 'Total requests write errors

          '
        name: total.write_errors
        type: long
      - description: 'Total read errors

          '
        name: total.read_errors
        type: long
      - description: 'Process id

          '
        name: total.pid
        type: long
      - description: 'Worker id

          '
        name: worker.id
        type: long
      - description: 'Worker process id

          '
        name: worker.pid
        type: long
      - description: 'State of worker, 1 if still accepting new requests otherwise
          0

          '
        name: worker.accepting
        type: long
      - description: 'Number of requests served by this worker

          '
        name: worker.requests
        type: long
      - description: 'Number of requests served by this worker after worker is reloaded
          when reached MAX_REQUESTS

          '
        name: worker.delta_requests
        type: long
      - description: 'Exceptions raised

          '
        name: worker.exceptions
        type: long
      - description: 'Dropped requests by timeout

          '
        name: worker.harakiri_count
        type: long
      - description: 'Emitted signals count

          '
        name: worker.signals
        type: long
      - description: 'Number of signals waiting to be handled

          '
        name: worker.signal_queue
        type: long
      - description: 'Worker status (cheap, pause, sig, busy, idle)

          '
        name: worker.status
        type: keyword
      - description: 'Resident Set Size. memory currently used by a process. if always
          zero try `--memory-report` option of uwsgi

          '
        name: worker.rss
        type: keyword
      - description: 'Virtual Set Size. memory size assigned to a process. if always
          zero try `--memory-report` option of uwsgi

          '
        name: worker.vsz
        type: long
      - description: 'Process running time

          '
        name: worker.running_time
        type: long
      - description: 'Respawn count

          '
        name: worker.respawn_count
        type: long
      - description: 'Transmitted size

          '
        name: worker.tx
        type: long
      - description: 'Average response time

          '
        name: worker.avg_rt
        type: long
      - description: 'worker ID

          '
        name: core.id
        type: long
      - description: 'Parent worker PID

          '
        name: core.worker_pid
        type: long
      - description: 'Number of total requests served

          '
        name: core.requests.total
        type: long
      - description: 'Number of static file serves

          '
        name: core.requests.static
        type: long
      - description: 'Routed requests

          '
        name: core.requests.routed
        type: long
      - description: 'Offloaded requests

          '
        name: core.requests.offloaded
        type: long
      - description: 'Number of failed writes

          '
        name: core.write_errors
        type: long
      - description: 'Number of failed reads

          '
        name: core.read_errors
        type: long
      name: status
      release: ga
      type: group
    name: uwsgi
    type: group
  key: uwsgi
  release: ga
  title: uWSGI
- description: 'SQL module fetches metrics from a SQL database

    '
  fields:
  - fields:
    - description: 'Driver used to execute the query.

        '
      name: driver
      type: keyword
    - description: 'Query executed to collect metrics.

        '
      name: query
      type: keyword
    - description: 'Numeric metrics collected.

        '
      name: metrics.numeric.*
      object_type: double
      type: object
    - description: 'Non-numeric values collected.

        '
      name: metrics.string.*
      object_type: keyword
      type: object
    - release: beta
    name: sql
    type: group
  key: sql
  release: beta
  title: SQL
